{
  "namada": "Namada command line interface.\n\nUsage: namada [OPTIONS] <COMMAND>\n\nCommands:\n  node                  Node sub-commands.\n  relayer               Relayer sub-commands.\n  client                Client sub-commands.\n  wallet                Wallet sub-commands.\n  ethereum-bridge-pool  Functionality for interacting with the Ethereum bridge pool. This pool holds transfers waiting to be relayed to Ethereum.\n  ledger                Ledger node sub-commands. If no sub-command specified, defaults to run the node.\n  tx                    Send a transaction with custom WASM code.\n  transfer              Send a signed transfer transaction.\n  ibc-transfer          Send a signed IBC transfer transaction.\n  update-account        Send a signed transaction to update account's validity predicate.\n  init-proposal         Create a new proposal.\n  vote-proposal         Vote a proposal.\n  reveal-pk             Submit a tx to reveal the public key an implicit account. Typically, you don't have to do this manually and the client will detect when a tx to reveal PK is needed and submit it automatically. This will write the PK into the account's storage so that it can be used for signature verification on transactions authorized by this account.\n  help                  Print this message or the help of the given subcommand(s)\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help\n  -V, --version              Print version",
  "namada node": "Node sub-commands.\n\nUsage: namada node [OPTIONS] <COMMAND>\n\nCommands:\n  ledger  Ledger node sub-commands. If no sub-command specified, defaults to run the node.\n  config  Configuration sub-commands.\n  help    Print this message or the help of the given subcommand(s)\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada node ledger": "Ledger node sub-commands. If no sub-command specified, defaults to run the node.\n\nUsage: namada node ledger [OPTIONS] [COMMAND]\n\nCommands:\n  run        Run Namada ledger node.\n  run-until  Run Namada ledger node until a given height. Then halt or suspend.\n  reset      Delete Namada ledger node's and Tendermint node's storage data.\n  dump-db    Dump Namada ledger node's DB from a block into a file.\n  rollback   Roll Namada state back to the previous height. This command does not create a backup of neither the Namada nor the Tendermint state before execution: for extra safety, it is recommended to make a backup in advance.\n  help       Print this message or the help of the given subcommand(s)\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada node ledger run": "Run Namada ledger node.\n\nUsage: namada node ledger run [OPTIONS]\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --time <time>          The start time of the ledger. Accepts a relaxed form of RFC3339. A space or a 'T' are accepted as the separator between the date and time components. Additional spaces are allowed between each component.\n                             All of these examples are equivalent:\n                             2023-01-20T12:12:12Z\n                             2023-01-20 12:12:12Z\n                             2023-  01-20T12:  12:12Z\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada node ledger run-until": "Run Namada ledger node until a given height. Then halt or suspend.\n\nUsage: namada node ledger run-until [OPTIONS] --block-height <block-height> <--halt|--suspend>\n\nOptions:\n      --chain-id <chain-id>          The chain ID.\n      --time <time>                  The start time of the ledger.\n      --base-dir <base-dir>          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --block-height <block-height>  The block height to run until.\n      --halt                         Halt at the given block height\n      --wasm-dir <wasm-dir>          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis                  Dispatch pre-genesis specific logic.\n      --suspend                      Suspend consensus at the given block height\n  -h, --help                         Print help",
  "namada node ledger reset": "Delete Namada ledger node's and Tendermint node's storage data.\n\nUsage: namada node ledger reset [OPTIONS]\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada node ledger dump-db": "Dump Namada ledger node's DB from a block into a file.\n\nUsage: namada node ledger dump-db [OPTIONS]\n\nOptions:\n      --chain-id <chain-id>            The chain ID.\n      --height <height>                The block height to dump. Defaults to latest committed\n                                                       block.\n      --base-dir <base-dir>            The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --out-file-path <out-file-path>  Path for the output file (omitting file extension). Defaults to \"db_dump.{block_height}.toml\" in the current working directory.\n      --historic                       If provided, dump also the diff of the last height\n      --wasm-dir <wasm-dir>            Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis                    Dispatch pre-genesis specific logic.\n  -h, --help                           Print help",
  "namada node ledger rollback": "Roll Namada state back to the previous height. This command does not create a backup of neither the Namada nor the Tendermint state before execution: for extra safety, it is recommended to make a backup in advance.\n\nUsage: namada node ledger rollback [OPTIONS]\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada node config": "Configuration sub-commands.\n\nUsage: namada node config [OPTIONS] <COMMAND>\n\nCommands:\n  gen                  Generate the default configuration file.\n  update-local-config  Update the validator's local configuration.\n  help                 Print this message or the help of the given subcommand(s)\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada node config gen": "Generate the default configuration file.\n\nUsage: namada node config gen [OPTIONS]\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada node config update-local-config": "Update the validator's local configuration.\n\nUsage: namada node config update-local-config [OPTIONS] --data-path <data-path>\n\nOptions:\n      --chain-id <chain-id>    The chain ID.\n      --data-path <data-path>  The path to the toml file containing the updated local configuration.\n      --base-dir <base-dir>    The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>    Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis            Dispatch pre-genesis specific logic.\n  -h, --help                   Print help",
  "namada relayer": "Relayer sub-commands.\n\nUsage: namada relayer [OPTIONS] <COMMAND>\n\nCommands:\n  ethereum-bridge-pool  Functionality for interacting with the Ethereum bridge pool. This pool holds transfers waiting to be relayed to Ethereum.\n  validator-set         Validator set queries, that return data in a format to be consumed by the Namada Ethereum bridge smart contracts.\n  help                  Print this message or the help of the given subcommand(s)\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada relayer ethereum-bridge-pool": "Functionality for interacting with the Ethereum bridge pool. This pool holds transfers waiting to be relayed to Ethereum.\n\nUsage: namada relayer ethereum-bridge-pool [OPTIONS] <COMMAND>\n\nCommands:\n  construct-proof  Construct a merkle proof that the given transfers are in the pool.\n  query            Get the contents of the Ethereum Bridge pool.\n  query-relayed    Get the confirmation status of transfers to Ethereum.\n  query-signed     Get the contents of the Ethereum Bridge pool with a signed Merkle root.\n  recommend-batch  Get a recommended batch of transfers from the bridge pool to relay to Ethereum.\n  relay-proof      Construct a merkle proof that the given transfers are in the pool and relay it to Ethereum.\n  help             Print this message or the help of the given subcommand(s)\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada relayer ethereum-bridge-pool construct-proof": "Construct a merkle proof that the given transfers are in the pool.\n\nUsage: namada relayer ethereum-bridge-pool construct-proof [OPTIONS] --hash-list <hash-list> --relayer <relayer>\n\nOptions:\n      --chain-id <chain-id>    The chain ID.\n      --node <node>            Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>    The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --hash-list <hash-list>  Whitespace separated Keccak hash list of transfers in the Bridge pool.\n      --relayer <relayer>      The rewards address for relaying this proof.\n      --wasm-dir <wasm-dir>    Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis            Dispatch pre-genesis specific logic.\n  -h, --help                   Print help",
  "namada relayer ethereum-bridge-pool query": "Get the contents of the Ethereum Bridge pool.\n\nUsage: namada relayer ethereum-bridge-pool query [OPTIONS]\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --node <node>          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada relayer ethereum-bridge-pool query-relayed": "Get the confirmation status of transfers to Ethereum.\n\nUsage: namada relayer ethereum-bridge-pool query-relayed [OPTIONS]\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --node <node>          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada relayer ethereum-bridge-pool query-signed": "Get the contents of the Ethereum Bridge pool with a signed Merkle root.\n\nUsage: namada relayer ethereum-bridge-pool query-signed [OPTIONS]\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --node <node>          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada relayer ethereum-bridge-pool recommend-batch": "Get a recommended batch of transfers from the bridge pool to relay to Ethereum.\n\nUsage: namada relayer ethereum-bridge-pool recommend-batch [OPTIONS] --conversion-table <conversion-table>\n\nOptions:\n      --chain-id <chain-id>\n          The chain ID.\n      --node <node>\n          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --max_eth-gas <max_eth-gas>\n          The maximum amount Ethereum gas that can be spent during the relay call.\n      --eth-gas <eth-gas>\n          Under ideal conditions, relaying transfers will yield a net profit. If that is not possible, setting this optional value will result in a batch transfer that costs as close to the given value as possible without exceeding it.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --conversion-table <conversion-table>\n          Path to a JSON object containing a mapping between token aliases (or addresses) and their conversion rates in gwei\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n  -h, --help\n          Print help",
  "namada relayer ethereum-bridge-pool relay-proof": "Construct a merkle proof that the given transfers are in the pool and relay it to Ethereum.\n\nUsage: namada relayer ethereum-bridge-pool relay-proof [OPTIONS] --hash-list <hash-list> --relayer <relayer> --confirmations <confirmations>\n\nOptions:\n      --chain-id <chain-id>\n          The chain ID.\n      --node <node>\n          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --safe-mode\n          Safe mode overrides keyboard interrupt signals, to ensure Ethereum transfers aren't canceled midway through.\n      --hash-list <hash-list>\n          Whitespace separated Keccak hash list of transfers in the Bridge pool.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n      --relayer <relayer>\n          The rewards address for relaying this proof.\n      --ethereum-address <ethereum-address>\n          The address of the Ethereum wallet to pay the gas fees. If unset, the default wallet is used.\n      --eth-gas <eth-gas>\n          The Ethereum gas that can be spent during the relay call.\n      --eth-gas-price <eth-gas-price>\n          The price of Ethereum gas, during the relay call.\n      --eth-rpc-endpoint <eth-rpc-endpoint>\n          The Ethereum RPC endpoint.\n      --confirmations <confirmations>\n          The number of block confirmations on Ethereum.\n      --sync\n          Synchronize with the network, or exit immediately, if the Ethereum node has fallen behind.\n  -h, --help\n          Print help",
  "namada relayer validator-set": "Validator set queries, that return data in a format to be consumed by the Namada Ethereum bridge smart contracts.\n\nUsage: namada relayer validator-set [OPTIONS] <COMMAND>\n\nCommands:\n  bridge      Query the Bridge validator set in Namada, at the given epoch, or the latest one, if none is provided.\n  governance  Query the Governance validator set in Namada, at the given epoch, or the latest one, if none is provided.\n  proof       Query an Ethereum ABI encoding of a proof of the consensus validator set in Namada, at the requested epoch, or the next one, if no epoch is provided.\n  relay       Relay a validator set update to Namada's Ethereum bridge smart contracts.\n  help        Print this message or the help of the given subcommand(s)\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada relayer validator-set bridge": "Query the Bridge validator set in Namada, at the given epoch, or the latest one, if none is provided.\n\nUsage: namada relayer validator-set bridge [OPTIONS]\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --node <node>          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --epoch <epoch>        The epoch of the Bridge set of validators to query.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada relayer validator-set governance": "Query the Governance validator set in Namada, at the given epoch, or the latest one, if none is provided.\n\nUsage: namada relayer validator-set governance [OPTIONS]\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --node <node>          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --epoch <epoch>        The epoch of the Governance set of validators to query.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada relayer validator-set proof": "Query an Ethereum ABI encoding of a proof of the consensus validator set in Namada, at the requested epoch, or the next one, if no epoch is provided.\n\nUsage: namada relayer validator-set proof [OPTIONS]\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --node <node>          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --epoch <epoch>        The epoch of the set of validators to be proven.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada relayer validator-set relay": "Relay a validator set update to Namada's Ethereum bridge smart contracts.\n\nUsage: namada relayer validator-set relay [OPTIONS] --confirmations <confirmations>\n\nOptions:\n      --chain-id <chain-id>\n          The chain ID.\n      --node <node>\n          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --safe-mode\n          Safe mode overrides keyboard interrupt signals, to ensure Ethereum transfers aren't canceled midway through.\n      --daemon\n          Run in daemon mode, which will continuously perform validator set updates.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n      --retry-sleep <retry-sleep>\n          The amount of time to sleep between failed daemon mode relays.\n      --success-sleep <success-sleep>\n          The amount of time to sleep between successful daemon mode relays.\n      --ethereum-address <ethereum-address>\n          The address of the Ethereum wallet to pay the gas fees. If unset, the default wallet is used.\n      --epoch <epoch>\n          The epoch of the set of validators to relay.\n      --eth-gas <eth-gas>\n          The Ethereum gas that can be spent during the relay call.\n      --eth-gas-price <eth-gas-price>\n          The price of Ethereum gas, during the relay call.\n      --eth-rpc-endpoint <eth-rpc-endpoint>\n          The Ethereum RPC endpoint.\n      --confirmations <confirmations>\n          The number of block confirmations on Ethereum.\n      --sync\n          Synchronize with the network, or exit immediately, if the Ethereum node has fallen behind.\n  -h, --help\n          Print help",
  "namada client": "Client sub-commands.\n\nUsage: namada client [OPTIONS] <COMMAND>\n\nCommands:\n  ibc-transfer               Send a signed IBC transfer transaction.\n  init-account               Send a signed transaction to create a new established account.\n  init-proposal              Create a new proposal.\n  reveal-pk                  Submit a tx to reveal the public key an implicit account. Typically, you don't have to do this manually and the client will detect when a tx to reveal PK is needed and submit it automatically. This will write the PK into the account's storage so that it can be used for signature verification on transactions authorized by this account.\n  transfer                   Send a signed transfer transaction.\n  tx                         Send a transaction with custom WASM code.\n  update-account             Send a signed transaction to update account's validity predicate.\n  vote-proposal              Vote a proposal.\n  become-validator           Send a signed transaction to become a validator.\n  bond                       Bond tokens in PoS system.\n  change-commission-rate     Change commission rate.\n  change-consensus-key       Change consensus key.\n  change-metadata            Change validator's metadata, including the commission rate if desired.\n  claim-rewards              Claim available rewards tokens from bonds that contributed in consensus.\n  deactivate-validator       Send a signed transaction to deactivate a validator.\n  init-validator             Send a signed transaction to create an established account and then become a validator.\n  reactivate-validator       Send a signed transaction to reactivate an inactive validator.\n  redelegate                 Redelegate bonded tokens from one validator to another.\n  unbond                     Unbond tokens from a PoS bond.\n  unjail-validator           Send a signed transaction to unjail a jailed validator.\n  withdraw                   Withdraw tokens from previously unbonded PoS bond.\n  add-erc20-transfer         Add a new transfer to the Ethereum Bridge pool.\n  resign-steward             Craft a transaction to resign as a steward.\n  update-steward-rewards     Update how steward commissions are split.\n  balance                    Query balance(s) of tokens.\n  block                      Query the last committed block.\n  bonded-stake               Query PoS bonded stake.\n  bonds                      Query PoS bond(s).\n  commission-rate            Query a validator's commission rate.\n  conversions                Query currently applicable conversions.\n  delegations                Find PoS delegations from the given owner address.\n  epoch                      Query the epoch of the last committed block.\n  find-validator             Find a PoS validator and its consensus key by its native address or Tendermint address.\n  masp-reward-tokens         Query the tokens which can earn MASP rewards while shielded.\n  next-epoch-info            Query some info to help discern when the next epoch will begin.\n  query-account              Query the substorage space of a specific enstablished address.\n  query-bytes                Query the raw bytes of a given storage key\n  query-pgf                  Query pgf stewards and continuous funding.\n  query-proposal             Query proposals.\n  query-proposal-result      Query proposals result.\n  query-proposal-votes       Query votes for the proposal.\n  query-protocol-parameters  Query protocol parameters.\n  rewards                    Query the latest rewards available to claim for a given delegation (or self-bond).\n  show-transfers             Query the accepted transfers to date.\n  slashes                    Query PoS applied slashes.\n  status                     Query the node's status.\n  tx-result                  Query the result of a transaction.\n  validator-metadata         Query a validator's metadata.\n  validator-state            Query the state of a PoS validator.\n  ibc-gen-shielded           Generate shielded transfer for IBC.\n  shielded-sync              Sync the local shielded context with MASP notes owned by the provided viewing / spending keys up to an optional specified block height.\n  sign-tx                    Sign a transaction offline.\n  utils                      Utilities.\n  help                       Print this message or the help of the given subcommand(s)\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada client ibc-transfer": "Send a signed IBC transfer transaction.\n\nUsage: namada client ibc-transfer [OPTIONS] --source <source> --receiver <receiver> --token <token> --amount <amount> --channel-id <channel-id>\n\nOptions:\n      --dry-run\n          Simulate the transaction application.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --dry-run-wrapper\n          Simulate the complete transaction application. This estimates the gas cost of the transaction.\n      --dump-tx\n          Dump transaction bytes to a file.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --force\n          Submit the transaction even if it doesn't pass client checks.\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n      --broadcast-only\n          Do not wait for the transaction to be applied. This will return once the transaction is added to the mempool.\n      --node <node>\n          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --alias <alias>\n          If any new account is initialized by the tx, use the given alias to save it in the wallet. If multiple accounts are initialized, the alias will be the prefix of each new address joined with a number.\n      --gas-price <gas-price>\n          The amount being paid, per gas unit, for the inclusion of this transaction\n      --gas-token <gas-token>\n          The token for paying the gas\n      --gas-spending-key <gas-spending-key>\n          The spending key to be used for fee unshielding. If none is provided, fee will be paid from the unshielded balance only.\n      --gas-limit <gas-limit>\n          The multiplier of the gas limit resolution defining the maximum amount of gas needed to run transaction.\n      --wallet-alias-force\n          Override the alias without confirmation if it already exists.\n      --expiration <expiration>\n          The expiration datetime of the transaction, after which the tx won't be accepted anymore. All of these examples are equivalent:\n          2012-12-12T12:12:12Z\n          2012-12-12 12:12:12Z\n          2012-  12-12T12:  12:12Z\n      --disposable-gas-payer\n          Generates an ephemeral, disposable keypair to sign the wrapper transaction. This keypair will be immediately discarded after use.\n      --signing-keys <signing-keys>...\n          Sign the transaction with the key for the given public key, public key hash or alias from your wallet.\n      --signatures <signatures>...\n          List of file paths containing a serialized signature to be attached to a transaction. Requires to provide a gas payer.\n      --output-folder-path <output-folder-path>\n          The output folder path where the artifact will be stored.\n      --chain-id <chain-id>\n          The chain ID.\n      --gas-payer <gas-payer>\n          The implicit address of the gas payer. It defaults to the address associated to the first key passed to --signing-keys.\n      --use-device\n          Use an attached hardware wallet device to sign the transaction.\n      --memo <memo>\n          Attach a plaintext memo to the transaction.\n      --source <source>\n          The source account address. The source's key is used to produce the signature.\n      --receiver <receiver>\n          The receiver address on the destination chain as string.\n      --token <token>\n          The transfer token.\n      --amount <amount>\n          The amount to transfer in decimal.\n      --port-id <port-id>\n          The port ID.\n      --channel-id <channel-id>\n          The channel ID.\n      --timeout-height <timeout-height>\n          The timeout height of the destination chain.\n      --timeout-sec-offset <timeout-sec-offset>\n          The timeout as seconds.\n      --memo-path <memo-path>\n          The path for the memo field of ICS20 transfer.\n  -h, --help\n          Print help",
  "namada client init-account": "Send a signed transaction to create a new established account.\n\nUsage: namada client init-account [OPTIONS]\n\nOptions:\n      --dry-run\n          Simulate the transaction application.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --dry-run-wrapper\n          Simulate the complete transaction application. This estimates the gas cost of the transaction.\n      --dump-tx\n          Dump transaction bytes to a file.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --force\n          Submit the transaction even if it doesn't pass client checks.\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n      --broadcast-only\n          Do not wait for the transaction to be applied. This will return once the transaction is added to the mempool.\n      --node <node>\n          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --alias <alias>\n          If any new account is initialized by the tx, use the given alias to save it in the wallet. If multiple accounts are initialized, the alias will be the prefix of each new address joined with a number.\n      --gas-price <gas-price>\n          The amount being paid, per gas unit, for the inclusion of this transaction\n      --gas-token <gas-token>\n          The token for paying the gas\n      --gas-spending-key <gas-spending-key>\n          The spending key to be used for fee unshielding. If none is provided, fee will be paid from the unshielded balance only.\n      --gas-limit <gas-limit>\n          The multiplier of the gas limit resolution defining the maximum amount of gas needed to run transaction.\n      --wallet-alias-force\n          Override the alias without confirmation if it already exists.\n      --expiration <expiration>\n          The expiration datetime of the transaction, after which the tx won't be accepted anymore. All of these examples are equivalent:\n          2012-12-12T12:12:12Z\n          2012-12-12 12:12:12Z\n          2012-  12-12T12:  12:12Z\n      --disposable-gas-payer\n          Generates an ephemeral, disposable keypair to sign the wrapper transaction. This keypair will be immediately discarded after use.\n      --signing-keys <signing-keys>...\n          Sign the transaction with the key for the given public key, public key hash or alias from your wallet.\n      --signatures <signatures>...\n          List of file paths containing a serialized signature to be attached to a transaction. Requires to provide a gas payer.\n      --output-folder-path <output-folder-path>\n          The output folder path where the artifact will be stored.\n      --chain-id <chain-id>\n          The chain ID.\n      --gas-payer <gas-payer>\n          The implicit address of the gas payer. It defaults to the address associated to the first key passed to --signing-keys.\n      --use-device\n          Use an attached hardware wallet device to sign the transaction.\n      --memo <memo>\n          Attach a plaintext memo to the transaction.\n      --code-path <code-path>\n          The path to the validity predicate WASM code to be used for the new account. Uses the default user VP if none specified.\n      --public-keys <public-keys>...\n          A list public keys to be associated with the new account in hexadecimal encoding.\n      --threshold <threshold>\n          The minimum number of signature to be provided for authorization. Must be less then the maximum number of public keys provided.\n  -h, --help\n          Print help",
  "namada client init-proposal": "Create a new proposal.\n\nUsage: namada client init-proposal [OPTIONS] --data-path <data-path>\n\nOptions:\n      --dry-run\n          Simulate the transaction application.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --dry-run-wrapper\n          Simulate the complete transaction application. This estimates the gas cost of the transaction.\n      --dump-tx\n          Dump transaction bytes to a file.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --force\n          Submit the transaction even if it doesn't pass client checks.\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n      --broadcast-only\n          Do not wait for the transaction to be applied. This will return once the transaction is added to the mempool.\n      --node <node>\n          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --alias <alias>\n          If any new account is initialized by the tx, use the given alias to save it in the wallet. If multiple accounts are initialized, the alias will be the prefix of each new address joined with a number.\n      --gas-price <gas-price>\n          The amount being paid, per gas unit, for the inclusion of this transaction\n      --gas-token <gas-token>\n          The token for paying the gas\n      --gas-spending-key <gas-spending-key>\n          The spending key to be used for fee unshielding. If none is provided, fee will be paid from the unshielded balance only.\n      --gas-limit <gas-limit>\n          The multiplier of the gas limit resolution defining the maximum amount of gas needed to run transaction.\n      --wallet-alias-force\n          Override the alias without confirmation if it already exists.\n      --expiration <expiration>\n          The expiration datetime of the transaction, after which the tx won't be accepted anymore. All of these examples are equivalent:\n          2012-12-12T12:12:12Z\n          2012-12-12 12:12:12Z\n          2012-  12-12T12:  12:12Z\n      --disposable-gas-payer\n          Generates an ephemeral, disposable keypair to sign the wrapper transaction. This keypair will be immediately discarded after use.\n      --signing-keys <signing-keys>...\n          Sign the transaction with the key for the given public key, public key hash or alias from your wallet.\n      --signatures <signatures>...\n          List of file paths containing a serialized signature to be attached to a transaction. Requires to provide a gas payer.\n      --output-folder-path <output-folder-path>\n          The output folder path where the artifact will be stored.\n      --chain-id <chain-id>\n          The chain ID.\n      --gas-payer <gas-payer>\n          The implicit address of the gas payer. It defaults to the address associated to the first key passed to --signing-keys.\n      --use-device\n          Use an attached hardware wallet device to sign the transaction.\n      --memo <memo>\n          Attach a plaintext memo to the transaction.\n      --data-path <data-path>\n          The data path file (json) that describes the proposal.\n      --offline\n          Flag if the proposal should be serialized offline (only for default types).\n      --eth\n          Flag if the proposal is of type eth.\n      --pgf-stewards\n          Flag if the proposal is of type pgf-stewards. Used to elect/remove stewards.\n      --pgf-funding\n          Flag if the proposal is of type pgf-funding. Used to control continuous/retro pgf fundings.\n  -h, --help\n          Print help",
  "namada client reveal-pk": "Submit a tx to reveal the public key an implicit account. Typically, you don't have to do this manually and the client will detect when a tx to reveal PK is needed and submit it automatically. This will write the PK into the account's storage so that it can be used for signature verification on transactions authorized by this account.\n\nUsage: namada client reveal-pk [OPTIONS] --public-key <public-key>\n\nOptions:\n      --dry-run\n          Simulate the transaction application.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --dry-run-wrapper\n          Simulate the complete transaction application. This estimates the gas cost of the transaction.\n      --dump-tx\n          Dump transaction bytes to a file.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --force\n          Submit the transaction even if it doesn't pass client checks.\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n      --broadcast-only\n          Do not wait for the transaction to be applied. This will return once the transaction is added to the mempool.\n      --node <node>\n          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --alias <alias>\n          If any new account is initialized by the tx, use the given alias to save it in the wallet. If multiple accounts are initialized, the alias will be the prefix of each new address joined with a number.\n      --gas-price <gas-price>\n          The amount being paid, per gas unit, for the inclusion of this transaction\n      --gas-token <gas-token>\n          The token for paying the gas\n      --gas-spending-key <gas-spending-key>\n          The spending key to be used for fee unshielding. If none is provided, fee will be paid from the unshielded balance only.\n      --gas-limit <gas-limit>\n          The multiplier of the gas limit resolution defining the maximum amount of gas needed to run transaction.\n      --wallet-alias-force\n          Override the alias without confirmation if it already exists.\n      --expiration <expiration>\n          The expiration datetime of the transaction, after which the tx won't be accepted anymore. All of these examples are equivalent:\n          2012-12-12T12:12:12Z\n          2012-12-12 12:12:12Z\n          2012-  12-12T12:  12:12Z\n      --disposable-gas-payer\n          Generates an ephemeral, disposable keypair to sign the wrapper transaction. This keypair will be immediately discarded after use.\n      --signing-keys <signing-keys>...\n          Sign the transaction with the key for the given public key, public key hash or alias from your wallet.\n      --signatures <signatures>...\n          List of file paths containing a serialized signature to be attached to a transaction. Requires to provide a gas payer.\n      --output-folder-path <output-folder-path>\n          The output folder path where the artifact will be stored.\n      --chain-id <chain-id>\n          The chain ID.\n      --gas-payer <gas-payer>\n          The implicit address of the gas payer. It defaults to the address associated to the first key passed to --signing-keys.\n      --use-device\n          Use an attached hardware wallet device to sign the transaction.\n      --memo <memo>\n          Attach a plaintext memo to the transaction.\n      --public-key <public-key>\n          A public key to reveal.\n  -h, --help\n          Print help",
  "namada client transfer": "Send a signed transfer transaction.\n\nUsage: namada client transfer [OPTIONS] --source <source> --target <target> --token <token> --amount <amount>\n\nOptions:\n      --dry-run\n          Simulate the transaction application.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --dry-run-wrapper\n          Simulate the complete transaction application. This estimates the gas cost of the transaction.\n      --dump-tx\n          Dump transaction bytes to a file.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --force\n          Submit the transaction even if it doesn't pass client checks.\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n      --broadcast-only\n          Do not wait for the transaction to be applied. This will return once the transaction is added to the mempool.\n      --node <node>\n          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --alias <alias>\n          If any new account is initialized by the tx, use the given alias to save it in the wallet. If multiple accounts are initialized, the alias will be the prefix of each new address joined with a number.\n      --gas-price <gas-price>\n          The amount being paid, per gas unit, for the inclusion of this transaction\n      --gas-token <gas-token>\n          The token for paying the gas\n      --gas-spending-key <gas-spending-key>\n          The spending key to be used for fee unshielding. If none is provided, fee will be paid from the unshielded balance only.\n      --gas-limit <gas-limit>\n          The multiplier of the gas limit resolution defining the maximum amount of gas needed to run transaction.\n      --wallet-alias-force\n          Override the alias without confirmation if it already exists.\n      --expiration <expiration>\n          The expiration datetime of the transaction, after which the tx won't be accepted anymore. All of these examples are equivalent:\n          2012-12-12T12:12:12Z\n          2012-12-12 12:12:12Z\n          2012-  12-12T12:  12:12Z\n      --disposable-gas-payer\n          Generates an ephemeral, disposable keypair to sign the wrapper transaction. This keypair will be immediately discarded after use.\n      --signing-keys <signing-keys>...\n          Sign the transaction with the key for the given public key, public key hash or alias from your wallet.\n      --signatures <signatures>...\n          List of file paths containing a serialized signature to be attached to a transaction. Requires to provide a gas payer.\n      --output-folder-path <output-folder-path>\n          The output folder path where the artifact will be stored.\n      --chain-id <chain-id>\n          The chain ID.\n      --gas-payer <gas-payer>\n          The implicit address of the gas payer. It defaults to the address associated to the first key passed to --signing-keys.\n      --use-device\n          Use an attached hardware wallet device to sign the transaction.\n      --memo <memo>\n          Attach a plaintext memo to the transaction.\n      --source <source>\n          The source account address. The source's key may be used to produce the signature.\n      --target <target>\n          The target account address. The target's key may be used to produce the signature.\n      --token <token>\n          The transfer token.\n      --amount <amount>\n          The amount to transfer in decimal.\n  -h, --help\n          Print help",
  "namada client tx": "Send a transaction with custom WASM code.\n\nUsage: namada client tx [OPTIONS] --owner <owner>\n\nOptions:\n      --dry-run\n          Simulate the transaction application.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --dry-run-wrapper\n          Simulate the complete transaction application. This estimates the gas cost of the transaction.\n      --dump-tx\n          Dump transaction bytes to a file.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --force\n          Submit the transaction even if it doesn't pass client checks.\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n      --broadcast-only\n          Do not wait for the transaction to be applied. This will return once the transaction is added to the mempool.\n      --node <node>\n          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --alias <alias>\n          If any new account is initialized by the tx, use the given alias to save it in the wallet. If multiple accounts are initialized, the alias will be the prefix of each new address joined with a number.\n      --gas-price <gas-price>\n          The amount being paid, per gas unit, for the inclusion of this transaction\n      --gas-token <gas-token>\n          The token for paying the gas\n      --gas-spending-key <gas-spending-key>\n          The spending key to be used for fee unshielding. If none is provided, fee will be paid from the unshielded balance only.\n      --gas-limit <gas-limit>\n          The multiplier of the gas limit resolution defining the maximum amount of gas needed to run transaction.\n      --wallet-alias-force\n          Override the alias without confirmation if it already exists.\n      --expiration <expiration>\n          The expiration datetime of the transaction, after which the tx won't be accepted anymore. All of these examples are equivalent:\n          2012-12-12T12:12:12Z\n          2012-12-12 12:12:12Z\n          2012-  12-12T12:  12:12Z\n      --disposable-gas-payer\n          Generates an ephemeral, disposable keypair to sign the wrapper transaction. This keypair will be immediately discarded after use.\n      --signing-keys <signing-keys>...\n          Sign the transaction with the key for the given public key, public key hash or alias from your wallet.\n      --signatures <signatures>...\n          List of file paths containing a serialized signature to be attached to a transaction. Requires to provide a gas payer.\n      --output-folder-path <output-folder-path>\n          The output folder path where the artifact will be stored.\n      --chain-id <chain-id>\n          The chain ID.\n      --gas-payer <gas-payer>\n          The implicit address of the gas payer. It defaults to the address associated to the first key passed to --signing-keys.\n      --use-device\n          Use an attached hardware wallet device to sign the transaction.\n      --memo <memo>\n          Attach a plaintext memo to the transaction.\n      --code-path <code-path>\n          The path to the transaction's WASM code.\n      --data-path <data-path>\n          The data file at this path containing arbitrary bytes will be passed to the transaction code when it's executed.\n      --tx-path <tx-path>\n          The path to a serialized transaction.\n      --owner <owner>\n          The address corresponding to the signatures or signing keys.\n  -h, --help\n          Print help",
  "namada client update-account": "Send a signed transaction to update account's validity predicate.\n\nUsage: namada client update-account [OPTIONS] --address <address>\n\nOptions:\n      --dry-run\n          Simulate the transaction application.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --dry-run-wrapper\n          Simulate the complete transaction application. This estimates the gas cost of the transaction.\n      --dump-tx\n          Dump transaction bytes to a file.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --force\n          Submit the transaction even if it doesn't pass client checks.\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n      --broadcast-only\n          Do not wait for the transaction to be applied. This will return once the transaction is added to the mempool.\n      --node <node>\n          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --alias <alias>\n          If any new account is initialized by the tx, use the given alias to save it in the wallet. If multiple accounts are initialized, the alias will be the prefix of each new address joined with a number.\n      --gas-price <gas-price>\n          The amount being paid, per gas unit, for the inclusion of this transaction\n      --gas-token <gas-token>\n          The token for paying the gas\n      --gas-spending-key <gas-spending-key>\n          The spending key to be used for fee unshielding. If none is provided, fee will be paid from the unshielded balance only.\n      --gas-limit <gas-limit>\n          The multiplier of the gas limit resolution defining the maximum amount of gas needed to run transaction.\n      --wallet-alias-force\n          Override the alias without confirmation if it already exists.\n      --expiration <expiration>\n          The expiration datetime of the transaction, after which the tx won't be accepted anymore. All of these examples are equivalent:\n          2012-12-12T12:12:12Z\n          2012-12-12 12:12:12Z\n          2012-  12-12T12:  12:12Z\n      --disposable-gas-payer\n          Generates an ephemeral, disposable keypair to sign the wrapper transaction. This keypair will be immediately discarded after use.\n      --signing-keys <signing-keys>...\n          Sign the transaction with the key for the given public key, public key hash or alias from your wallet.\n      --signatures <signatures>...\n          List of file paths containing a serialized signature to be attached to a transaction. Requires to provide a gas payer.\n      --output-folder-path <output-folder-path>\n          The output folder path where the artifact will be stored.\n      --chain-id <chain-id>\n          The chain ID.\n      --gas-payer <gas-payer>\n          The implicit address of the gas payer. It defaults to the address associated to the first key passed to --signing-keys.\n      --use-device\n          Use an attached hardware wallet device to sign the transaction.\n      --memo <memo>\n          Attach a plaintext memo to the transaction.\n      --code-path <code-path>\n          The path to the new validity predicate WASM code.\n      --address <address>\n          The account's address. It's key is used to produce the signature.\n      --public-keys <public-keys>...\n          A list public keys to be associated with the new account in hexadecimal encoding.\n      --threshold <threshold>\n          The minimum number of signature to be provided for authorization. Must be less then the maximum number of public keys provided.\n  -h, --help\n          Print help",
  "namada client vote-proposal": "Vote a proposal.\n\nUsage: namada client vote-proposal [OPTIONS] --vote <vote> --address <address>\n\nOptions:\n      --dry-run\n          Simulate the transaction application.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --dry-run-wrapper\n          Simulate the complete transaction application. This estimates the gas cost of the transaction.\n      --dump-tx\n          Dump transaction bytes to a file.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --force\n          Submit the transaction even if it doesn't pass client checks.\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n      --broadcast-only\n          Do not wait for the transaction to be applied. This will return once the transaction is added to the mempool.\n      --node <node>\n          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --alias <alias>\n          If any new account is initialized by the tx, use the given alias to save it in the wallet. If multiple accounts are initialized, the alias will be the prefix of each new address joined with a number.\n      --gas-price <gas-price>\n          The amount being paid, per gas unit, for the inclusion of this transaction\n      --gas-token <gas-token>\n          The token for paying the gas\n      --gas-spending-key <gas-spending-key>\n          The spending key to be used for fee unshielding. If none is provided, fee will be paid from the unshielded balance only.\n      --gas-limit <gas-limit>\n          The multiplier of the gas limit resolution defining the maximum amount of gas needed to run transaction.\n      --wallet-alias-force\n          Override the alias without confirmation if it already exists.\n      --expiration <expiration>\n          The expiration datetime of the transaction, after which the tx won't be accepted anymore. All of these examples are equivalent:\n          2012-12-12T12:12:12Z\n          2012-12-12 12:12:12Z\n          2012-  12-12T12:  12:12Z\n      --disposable-gas-payer\n          Generates an ephemeral, disposable keypair to sign the wrapper transaction. This keypair will be immediately discarded after use.\n      --signing-keys <signing-keys>...\n          Sign the transaction with the key for the given public key, public key hash or alias from your wallet.\n      --signatures <signatures>...\n          List of file paths containing a serialized signature to be attached to a transaction. Requires to provide a gas payer.\n      --output-folder-path <output-folder-path>\n          The output folder path where the artifact will be stored.\n      --chain-id <chain-id>\n          The chain ID.\n      --gas-payer <gas-payer>\n          The implicit address of the gas payer. It defaults to the address associated to the first key passed to --signing-keys.\n      --use-device\n          Use an attached hardware wallet device to sign the transaction.\n      --memo <memo>\n          Attach a plaintext memo to the transaction.\n      --proposal-id <proposal-id>\n          The proposal identifier.\n      --vote <vote>\n          The vote for the proposal. Either yay, nay, or abstain.\n      --offline\n          Flag if the proposal vote should run offline.\n      --data-path <data-path>\n          The data path file (json) that describes the proposal.\n      --address <address>\n          The address of the voter.\n  -h, --help\n          Print help",
  "namada client become-validator": "Send a signed transaction to become a validator.\n\nUsage: namada client become-validator [OPTIONS] --address <address> --commission-rate <commission-rate> --max-commission-rate-change <max-commission-rate-change> --email <email>\n\nOptions:\n      --dry-run\n          Simulate the transaction application.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --dry-run-wrapper\n          Simulate the complete transaction application. This estimates the gas cost of the transaction.\n      --dump-tx\n          Dump transaction bytes to a file.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --force\n          Submit the transaction even if it doesn't pass client checks.\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n      --broadcast-only\n          Do not wait for the transaction to be applied. This will return once the transaction is added to the mempool.\n      --node <node>\n          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --alias <alias>\n          If any new account is initialized by the tx, use the given alias to save it in the wallet. If multiple accounts are initialized, the alias will be the prefix of each new address joined with a number.\n      --gas-price <gas-price>\n          The amount being paid, per gas unit, for the inclusion of this transaction\n      --gas-token <gas-token>\n          The token for paying the gas\n      --gas-spending-key <gas-spending-key>\n          The spending key to be used for fee unshielding. If none is provided, fee will be paid from the unshielded balance only.\n      --gas-limit <gas-limit>\n          The multiplier of the gas limit resolution defining the maximum amount of gas needed to run transaction.\n      --wallet-alias-force\n          Override the alias without confirmation if it already exists.\n      --expiration <expiration>\n          The expiration datetime of the transaction, after which the tx won't be accepted anymore. All of these examples are equivalent:\n          2012-12-12T12:12:12Z\n          2012-12-12 12:12:12Z\n          2012-  12-12T12:  12:12Z\n      --disposable-gas-payer\n          Generates an ephemeral, disposable keypair to sign the wrapper transaction. This keypair will be immediately discarded after use.\n      --signing-keys <signing-keys>...\n          Sign the transaction with the key for the given public key, public key hash or alias from your wallet.\n      --signatures <signatures>...\n          List of file paths containing a serialized signature to be attached to a transaction. Requires to provide a gas payer.\n      --output-folder-path <output-folder-path>\n          The output folder path where the artifact will be stored.\n      --chain-id <chain-id>\n          The chain ID.\n      --gas-payer <gas-payer>\n          The implicit address of the gas payer. It defaults to the address associated to the first key passed to --signing-keys.\n      --use-device\n          Use an attached hardware wallet device to sign the transaction.\n      --memo <memo>\n          Attach a plaintext memo to the transaction.\n      --address <address>\n          Address of an account that will become a validator.\n      --scheme <scheme>\n          The key scheme/type used for the validator keys. Currently supports ed25519 and secp256k1.\n      --consensus-key <consensus-key>\n          A consensus key for the validator account. A new one will be generated if none given. Note that this must be ed25519.\n      --eth-cold-key <eth-cold-key>\n          An Eth cold key for the validator account. A new one will be generated if none given. Note that this must be secp256k1.\n      --eth-hot-key <eth-hot-key>\n          An Eth hot key for the validator account. A new one will be generated if none given. Note that this must be secp256k1.\n      --protocol-key <protocol-key>\n          A public key for signing protocol transactions. A new one will be generated if none given.\n      --commission-rate <commission-rate>\n          The commission rate charged by the validator for delegation rewards. Expressed as a decimal between 0 and 1. This is a required parameter.\n      --max-commission-rate-change <max-commission-rate-change>\n          The maximum change per epoch in the commission rate charged by the validator for delegation rewards. Expressed as a decimal between 0 and 1. This is a required parameter.\n      --email <email>\n          The validator's email.\n      --description <description>\n          The validator's description.\n      --website <website>\n          The validator's website.\n      --discord-handle <discord-handle>\n          The validator's discord handle.\n      --avatar <avatar>\n          The validator's avatar.\n      --validator-code-path <validator-code-path>\n          The path to the validity predicate WASM code to be used for the validator account. Uses the default validator VP if none specified.\n      --unsafe-dont-encrypt\n          UNSAFE: Do not encrypt the generated keypairs. Do not use this for keys used in a live network.\n  -h, --help\n          Print help",
  "namada client bond": "Bond tokens in PoS system.\n\nUsage: namada client bond [OPTIONS] --validator <validator> --amount <amount>\n\nOptions:\n      --dry-run\n          Simulate the transaction application.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --dry-run-wrapper\n          Simulate the complete transaction application. This estimates the gas cost of the transaction.\n      --dump-tx\n          Dump transaction bytes to a file.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --force\n          Submit the transaction even if it doesn't pass client checks.\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n      --broadcast-only\n          Do not wait for the transaction to be applied. This will return once the transaction is added to the mempool.\n      --node <node>\n          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --alias <alias>\n          If any new account is initialized by the tx, use the given alias to save it in the wallet. If multiple accounts are initialized, the alias will be the prefix of each new address joined with a number.\n      --gas-price <gas-price>\n          The amount being paid, per gas unit, for the inclusion of this transaction\n      --gas-token <gas-token>\n          The token for paying the gas\n      --gas-spending-key <gas-spending-key>\n          The spending key to be used for fee unshielding. If none is provided, fee will be paid from the unshielded balance only.\n      --gas-limit <gas-limit>\n          The multiplier of the gas limit resolution defining the maximum amount of gas needed to run transaction.\n      --wallet-alias-force\n          Override the alias without confirmation if it already exists.\n      --expiration <expiration>\n          The expiration datetime of the transaction, after which the tx won't be accepted anymore. All of these examples are equivalent:\n          2012-12-12T12:12:12Z\n          2012-12-12 12:12:12Z\n          2012-  12-12T12:  12:12Z\n      --disposable-gas-payer\n          Generates an ephemeral, disposable keypair to sign the wrapper transaction. This keypair will be immediately discarded after use.\n      --signing-keys <signing-keys>...\n          Sign the transaction with the key for the given public key, public key hash or alias from your wallet.\n      --signatures <signatures>...\n          List of file paths containing a serialized signature to be attached to a transaction. Requires to provide a gas payer.\n      --output-folder-path <output-folder-path>\n          The output folder path where the artifact will be stored.\n      --chain-id <chain-id>\n          The chain ID.\n      --gas-payer <gas-payer>\n          The implicit address of the gas payer. It defaults to the address associated to the first key passed to --signing-keys.\n      --use-device\n          Use an attached hardware wallet device to sign the transaction.\n      --memo <memo>\n          Attach a plaintext memo to the transaction.\n      --validator <validator>\n          Validator address.\n      --amount <amount>\n          Amount of tokens to stake in a bond.\n      --source <source>\n          Source address for delegations. For self-bonds, the validator is also the source.\n  -h, --help\n          Print help",
  "namada client change-commission-rate": "Change commission rate.\n\nUsage: namada client change-commission-rate [OPTIONS] --validator <validator> --commission-rate <commission-rate>\n\nOptions:\n      --dry-run\n          Simulate the transaction application.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --dry-run-wrapper\n          Simulate the complete transaction application. This estimates the gas cost of the transaction.\n      --dump-tx\n          Dump transaction bytes to a file.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --force\n          Submit the transaction even if it doesn't pass client checks.\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n      --broadcast-only\n          Do not wait for the transaction to be applied. This will return once the transaction is added to the mempool.\n      --node <node>\n          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --alias <alias>\n          If any new account is initialized by the tx, use the given alias to save it in the wallet. If multiple accounts are initialized, the alias will be the prefix of each new address joined with a number.\n      --gas-price <gas-price>\n          The amount being paid, per gas unit, for the inclusion of this transaction\n      --gas-token <gas-token>\n          The token for paying the gas\n      --gas-spending-key <gas-spending-key>\n          The spending key to be used for fee unshielding. If none is provided, fee will be paid from the unshielded balance only.\n      --gas-limit <gas-limit>\n          The multiplier of the gas limit resolution defining the maximum amount of gas needed to run transaction.\n      --wallet-alias-force\n          Override the alias without confirmation if it already exists.\n      --expiration <expiration>\n          The expiration datetime of the transaction, after which the tx won't be accepted anymore. All of these examples are equivalent:\n          2012-12-12T12:12:12Z\n          2012-12-12 12:12:12Z\n          2012-  12-12T12:  12:12Z\n      --disposable-gas-payer\n          Generates an ephemeral, disposable keypair to sign the wrapper transaction. This keypair will be immediately discarded after use.\n      --signing-keys <signing-keys>...\n          Sign the transaction with the key for the given public key, public key hash or alias from your wallet.\n      --signatures <signatures>...\n          List of file paths containing a serialized signature to be attached to a transaction. Requires to provide a gas payer.\n      --output-folder-path <output-folder-path>\n          The output folder path where the artifact will be stored.\n      --chain-id <chain-id>\n          The chain ID.\n      --gas-payer <gas-payer>\n          The implicit address of the gas payer. It defaults to the address associated to the first key passed to --signing-keys.\n      --use-device\n          Use an attached hardware wallet device to sign the transaction.\n      --memo <memo>\n          Attach a plaintext memo to the transaction.\n      --validator <validator>\n          The validator's address whose commission rate to change.\n      --commission-rate <commission-rate>\n          The desired new commission rate.\n  -h, --help\n          Print help",
  "namada client change-consensus-key": "Change consensus key.\n\nUsage: namada client change-consensus-key [OPTIONS] --validator <validator>\n\nOptions:\n      --dry-run\n          Simulate the transaction application.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --dry-run-wrapper\n          Simulate the complete transaction application. This estimates the gas cost of the transaction.\n      --dump-tx\n          Dump transaction bytes to a file.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --force\n          Submit the transaction even if it doesn't pass client checks.\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n      --broadcast-only\n          Do not wait for the transaction to be applied. This will return once the transaction is added to the mempool.\n      --node <node>\n          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --alias <alias>\n          If any new account is initialized by the tx, use the given alias to save it in the wallet. If multiple accounts are initialized, the alias will be the prefix of each new address joined with a number.\n      --gas-price <gas-price>\n          The amount being paid, per gas unit, for the inclusion of this transaction\n      --gas-token <gas-token>\n          The token for paying the gas\n      --gas-spending-key <gas-spending-key>\n          The spending key to be used for fee unshielding. If none is provided, fee will be paid from the unshielded balance only.\n      --gas-limit <gas-limit>\n          The multiplier of the gas limit resolution defining the maximum amount of gas needed to run transaction.\n      --wallet-alias-force\n          Override the alias without confirmation if it already exists.\n      --expiration <expiration>\n          The expiration datetime of the transaction, after which the tx won't be accepted anymore. All of these examples are equivalent:\n          2012-12-12T12:12:12Z\n          2012-12-12 12:12:12Z\n          2012-  12-12T12:  12:12Z\n      --disposable-gas-payer\n          Generates an ephemeral, disposable keypair to sign the wrapper transaction. This keypair will be immediately discarded after use.\n      --signing-keys <signing-keys>...\n          Sign the transaction with the key for the given public key, public key hash or alias from your wallet.\n      --signatures <signatures>...\n          List of file paths containing a serialized signature to be attached to a transaction. Requires to provide a gas payer.\n      --output-folder-path <output-folder-path>\n          The output folder path where the artifact will be stored.\n      --chain-id <chain-id>\n          The chain ID.\n      --gas-payer <gas-payer>\n          The implicit address of the gas payer. It defaults to the address associated to the first key passed to --signing-keys.\n      --use-device\n          Use an attached hardware wallet device to sign the transaction.\n      --memo <memo>\n          Attach a plaintext memo to the transaction.\n      --validator <validator>\n          The validator's address whose consensus key to change.\n      --consensus-key <consensus-key>\n          The desired new consensus key. A new one will be generated if none given. Note this key must be ed25519.\n      --unsafe-dont-encrypt\n          UNSAFE: Do not encrypt the generated keypairs. Do not use this for keys used in a live network.\n  -h, --help\n          Print help",
  "namada client change-metadata": "Change validator's metadata, including the commission rate if desired.\n\nUsage: namada client change-metadata [OPTIONS] --validator <validator>\n\nOptions:\n      --dry-run\n          Simulate the transaction application.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --dry-run-wrapper\n          Simulate the complete transaction application. This estimates the gas cost of the transaction.\n      --dump-tx\n          Dump transaction bytes to a file.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --force\n          Submit the transaction even if it doesn't pass client checks.\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n      --broadcast-only\n          Do not wait for the transaction to be applied. This will return once the transaction is added to the mempool.\n      --node <node>\n          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --alias <alias>\n          If any new account is initialized by the tx, use the given alias to save it in the wallet. If multiple accounts are initialized, the alias will be the prefix of each new address joined with a number.\n      --gas-price <gas-price>\n          The amount being paid, per gas unit, for the inclusion of this transaction\n      --gas-token <gas-token>\n          The token for paying the gas\n      --gas-spending-key <gas-spending-key>\n          The spending key to be used for fee unshielding. If none is provided, fee will be paid from the unshielded balance only.\n      --gas-limit <gas-limit>\n          The multiplier of the gas limit resolution defining the maximum amount of gas needed to run transaction.\n      --wallet-alias-force\n          Override the alias without confirmation if it already exists.\n      --expiration <expiration>\n          The expiration datetime of the transaction, after which the tx won't be accepted anymore. All of these examples are equivalent:\n          2012-12-12T12:12:12Z\n          2012-12-12 12:12:12Z\n          2012-  12-12T12:  12:12Z\n      --disposable-gas-payer\n          Generates an ephemeral, disposable keypair to sign the wrapper transaction. This keypair will be immediately discarded after use.\n      --signing-keys <signing-keys>...\n          Sign the transaction with the key for the given public key, public key hash or alias from your wallet.\n      --signatures <signatures>...\n          List of file paths containing a serialized signature to be attached to a transaction. Requires to provide a gas payer.\n      --output-folder-path <output-folder-path>\n          The output folder path where the artifact will be stored.\n      --chain-id <chain-id>\n          The chain ID.\n      --gas-payer <gas-payer>\n          The implicit address of the gas payer. It defaults to the address associated to the first key passed to --signing-keys.\n      --use-device\n          Use an attached hardware wallet device to sign the transaction.\n      --memo <memo>\n          Attach a plaintext memo to the transaction.\n      --validator <validator>\n          The validator's address whose commission rate to change.\n      --email <email>\n          The desired new validator email. To remove the existing email, pass an empty string to this argument.\n      --description <description>\n          The desired new validator description. To remove the existing description, pass an empty string to this argument.\n      --website <website>\n          The desired new validator website. To remove the existing website, pass an empty string to this argument.\n      --discord-handle <discord-handle>\n          The desired new validator discord handle. To remove the existing discord handle, pass an empty string to this argument.\n      --avatar <avatar>\n          The desired new validator avatar url. To remove the existing avatar, pass an empty string to this argument.\n      --commission-rate <commission-rate>\n          The desired new commission rate.\n  -h, --help\n          Print help",
  "namada client claim-rewards": "Claim available rewards tokens from bonds that contributed in consensus.\n\nUsage: namada client claim-rewards [OPTIONS] --validator <validator>\n\nOptions:\n      --dry-run\n          Simulate the transaction application.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --dry-run-wrapper\n          Simulate the complete transaction application. This estimates the gas cost of the transaction.\n      --dump-tx\n          Dump transaction bytes to a file.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --force\n          Submit the transaction even if it doesn't pass client checks.\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n      --broadcast-only\n          Do not wait for the transaction to be applied. This will return once the transaction is added to the mempool.\n      --node <node>\n          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --alias <alias>\n          If any new account is initialized by the tx, use the given alias to save it in the wallet. If multiple accounts are initialized, the alias will be the prefix of each new address joined with a number.\n      --gas-price <gas-price>\n          The amount being paid, per gas unit, for the inclusion of this transaction\n      --gas-token <gas-token>\n          The token for paying the gas\n      --gas-spending-key <gas-spending-key>\n          The spending key to be used for fee unshielding. If none is provided, fee will be paid from the unshielded balance only.\n      --gas-limit <gas-limit>\n          The multiplier of the gas limit resolution defining the maximum amount of gas needed to run transaction.\n      --wallet-alias-force\n          Override the alias without confirmation if it already exists.\n      --expiration <expiration>\n          The expiration datetime of the transaction, after which the tx won't be accepted anymore. All of these examples are equivalent:\n          2012-12-12T12:12:12Z\n          2012-12-12 12:12:12Z\n          2012-  12-12T12:  12:12Z\n      --disposable-gas-payer\n          Generates an ephemeral, disposable keypair to sign the wrapper transaction. This keypair will be immediately discarded after use.\n      --signing-keys <signing-keys>...\n          Sign the transaction with the key for the given public key, public key hash or alias from your wallet.\n      --signatures <signatures>...\n          List of file paths containing a serialized signature to be attached to a transaction. Requires to provide a gas payer.\n      --output-folder-path <output-folder-path>\n          The output folder path where the artifact will be stored.\n      --chain-id <chain-id>\n          The chain ID.\n      --gas-payer <gas-payer>\n          The implicit address of the gas payer. It defaults to the address associated to the first key passed to --signing-keys.\n      --use-device\n          Use an attached hardware wallet device to sign the transaction.\n      --memo <memo>\n          Attach a plaintext memo to the transaction.\n      --validator <validator>\n          Validator address.\n      --source <source>\n          Source address for claiming rewards for a bond. For self-bonds, the validator is also the source.\n  -h, --help\n          Print help",
  "namada client deactivate-validator": "Send a signed transaction to deactivate a validator.\n\nUsage: namada client deactivate-validator [OPTIONS] --validator <validator>\n\nOptions:\n      --dry-run\n          Simulate the transaction application.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --dry-run-wrapper\n          Simulate the complete transaction application. This estimates the gas cost of the transaction.\n      --dump-tx\n          Dump transaction bytes to a file.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --force\n          Submit the transaction even if it doesn't pass client checks.\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n      --broadcast-only\n          Do not wait for the transaction to be applied. This will return once the transaction is added to the mempool.\n      --node <node>\n          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --alias <alias>\n          If any new account is initialized by the tx, use the given alias to save it in the wallet. If multiple accounts are initialized, the alias will be the prefix of each new address joined with a number.\n      --gas-price <gas-price>\n          The amount being paid, per gas unit, for the inclusion of this transaction\n      --gas-token <gas-token>\n          The token for paying the gas\n      --gas-spending-key <gas-spending-key>\n          The spending key to be used for fee unshielding. If none is provided, fee will be paid from the unshielded balance only.\n      --gas-limit <gas-limit>\n          The multiplier of the gas limit resolution defining the maximum amount of gas needed to run transaction.\n      --wallet-alias-force\n          Override the alias without confirmation if it already exists.\n      --expiration <expiration>\n          The expiration datetime of the transaction, after which the tx won't be accepted anymore. All of these examples are equivalent:\n          2012-12-12T12:12:12Z\n          2012-12-12 12:12:12Z\n          2012-  12-12T12:  12:12Z\n      --disposable-gas-payer\n          Generates an ephemeral, disposable keypair to sign the wrapper transaction. This keypair will be immediately discarded after use.\n      --signing-keys <signing-keys>...\n          Sign the transaction with the key for the given public key, public key hash or alias from your wallet.\n      --signatures <signatures>...\n          List of file paths containing a serialized signature to be attached to a transaction. Requires to provide a gas payer.\n      --output-folder-path <output-folder-path>\n          The output folder path where the artifact will be stored.\n      --chain-id <chain-id>\n          The chain ID.\n      --gas-payer <gas-payer>\n          The implicit address of the gas payer. It defaults to the address associated to the first key passed to --signing-keys.\n      --use-device\n          Use an attached hardware wallet device to sign the transaction.\n      --memo <memo>\n          Attach a plaintext memo to the transaction.\n      --validator <validator>\n          The address of the validator to deactivate.\n  -h, --help\n          Print help",
  "namada client init-validator": "Send a signed transaction to create an established account and then become a validator.\n\nUsage: namada client init-validator [OPTIONS] --commission-rate <commission-rate> --max-commission-rate-change <max-commission-rate-change> --email <email>\n\nOptions:\n      --dry-run\n          Simulate the transaction application.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --dry-run-wrapper\n          Simulate the complete transaction application. This estimates the gas cost of the transaction.\n      --dump-tx\n          Dump transaction bytes to a file.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --force\n          Submit the transaction even if it doesn't pass client checks.\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n      --broadcast-only\n          Do not wait for the transaction to be applied. This will return once the transaction is added to the mempool.\n      --node <node>\n          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --alias <alias>\n          If any new account is initialized by the tx, use the given alias to save it in the wallet. If multiple accounts are initialized, the alias will be the prefix of each new address joined with a number.\n      --gas-price <gas-price>\n          The amount being paid, per gas unit, for the inclusion of this transaction\n      --gas-token <gas-token>\n          The token for paying the gas\n      --gas-spending-key <gas-spending-key>\n          The spending key to be used for fee unshielding. If none is provided, fee will be paid from the unshielded balance only.\n      --gas-limit <gas-limit>\n          The multiplier of the gas limit resolution defining the maximum amount of gas needed to run transaction.\n      --wallet-alias-force\n          Override the alias without confirmation if it already exists.\n      --expiration <expiration>\n          The expiration datetime of the transaction, after which the tx won't be accepted anymore. All of these examples are equivalent:\n          2012-12-12T12:12:12Z\n          2012-12-12 12:12:12Z\n          2012-  12-12T12:  12:12Z\n      --disposable-gas-payer\n          Generates an ephemeral, disposable keypair to sign the wrapper transaction. This keypair will be immediately discarded after use.\n      --signing-keys <signing-keys>...\n          Sign the transaction with the key for the given public key, public key hash or alias from your wallet.\n      --signatures <signatures>...\n          List of file paths containing a serialized signature to be attached to a transaction. Requires to provide a gas payer.\n      --output-folder-path <output-folder-path>\n          The output folder path where the artifact will be stored.\n      --chain-id <chain-id>\n          The chain ID.\n      --gas-payer <gas-payer>\n          The implicit address of the gas payer. It defaults to the address associated to the first key passed to --signing-keys.\n      --use-device\n          Use an attached hardware wallet device to sign the transaction.\n      --memo <memo>\n          Attach a plaintext memo to the transaction.\n      --scheme <scheme>\n          The key scheme/type used for the validator keys. Currently supports ed25519 and secp256k1.\n      --account-keys <account-keys>...\n          A list public keys to be associated with the new account in hexadecimal encoding. A new one will be generated if none given.\n      --consensus-key <consensus-key>\n          A consensus key for the validator account. A new one will be generated if none given. Note that this must be ed25519.\n      --eth-cold-key <eth-cold-key>\n          An Eth cold key for the validator account. A new one will be generated if none given. Note that this must be secp256k1.\n      --eth-hot-key <eth-hot-key>\n          An Eth hot key for the validator account. A new one will be generated if none given. Note that this must be secp256k1.\n      --protocol-key <protocol-key>\n          A public key for signing protocol transactions. A new one will be generated if none given.\n      --commission-rate <commission-rate>\n          The commission rate charged by the validator for delegation rewards. Expressed as a decimal between 0 and 1. This is a required parameter.\n      --max-commission-rate-change <max-commission-rate-change>\n          The maximum change per epoch in the commission rate charged by the validator for delegation rewards. Expressed as a decimal between 0 and 1. This is a required parameter.\n      --email <email>\n          The validator's email.\n      --description <description>\n          The validator's description.\n      --website <website>\n          The validator's website.\n      --discord-handle <discord-handle>\n          The validator's discord handle.\n      --avatar <avatar>\n          The validator's avatar.\n      --validator-code-path <validator-code-path>\n          The path to the validity predicate WASM code to be used for the validator account. Uses the default validator VP if none specified.\n      --unsafe-dont-encrypt\n          UNSAFE: Do not encrypt the generated keypairs. Do not use this for keys used in a live network.\n      --threshold <threshold>\n          The minimum number of signature to be provided for authorization. Must be less then the maximum number of public keys provided.\n  -h, --help\n          Print help",
  "namada client reactivate-validator": "Send a signed transaction to reactivate an inactive validator.\n\nUsage: namada client reactivate-validator [OPTIONS] --validator <validator>\n\nOptions:\n      --dry-run\n          Simulate the transaction application.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --dry-run-wrapper\n          Simulate the complete transaction application. This estimates the gas cost of the transaction.\n      --dump-tx\n          Dump transaction bytes to a file.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --force\n          Submit the transaction even if it doesn't pass client checks.\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n      --broadcast-only\n          Do not wait for the transaction to be applied. This will return once the transaction is added to the mempool.\n      --node <node>\n          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --alias <alias>\n          If any new account is initialized by the tx, use the given alias to save it in the wallet. If multiple accounts are initialized, the alias will be the prefix of each new address joined with a number.\n      --gas-price <gas-price>\n          The amount being paid, per gas unit, for the inclusion of this transaction\n      --gas-token <gas-token>\n          The token for paying the gas\n      --gas-spending-key <gas-spending-key>\n          The spending key to be used for fee unshielding. If none is provided, fee will be paid from the unshielded balance only.\n      --gas-limit <gas-limit>\n          The multiplier of the gas limit resolution defining the maximum amount of gas needed to run transaction.\n      --wallet-alias-force\n          Override the alias without confirmation if it already exists.\n      --expiration <expiration>\n          The expiration datetime of the transaction, after which the tx won't be accepted anymore. All of these examples are equivalent:\n          2012-12-12T12:12:12Z\n          2012-12-12 12:12:12Z\n          2012-  12-12T12:  12:12Z\n      --disposable-gas-payer\n          Generates an ephemeral, disposable keypair to sign the wrapper transaction. This keypair will be immediately discarded after use.\n      --signing-keys <signing-keys>...\n          Sign the transaction with the key for the given public key, public key hash or alias from your wallet.\n      --signatures <signatures>...\n          List of file paths containing a serialized signature to be attached to a transaction. Requires to provide a gas payer.\n      --output-folder-path <output-folder-path>\n          The output folder path where the artifact will be stored.\n      --chain-id <chain-id>\n          The chain ID.\n      --gas-payer <gas-payer>\n          The implicit address of the gas payer. It defaults to the address associated to the first key passed to --signing-keys.\n      --use-device\n          Use an attached hardware wallet device to sign the transaction.\n      --memo <memo>\n          Attach a plaintext memo to the transaction.\n      --validator <validator>\n          The address of the validator to reactivate.\n  -h, --help\n          Print help",
  "namada client redelegate": "Redelegate bonded tokens from one validator to another.\n\nUsage: namada client redelegate [OPTIONS] --source-validator <source-validator> --destination-validator <destination-validator> --owner <owner> --amount <amount>\n\nOptions:\n      --dry-run\n          Simulate the transaction application.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --dry-run-wrapper\n          Simulate the complete transaction application. This estimates the gas cost of the transaction.\n      --dump-tx\n          Dump transaction bytes to a file.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --force\n          Submit the transaction even if it doesn't pass client checks.\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n      --broadcast-only\n          Do not wait for the transaction to be applied. This will return once the transaction is added to the mempool.\n      --node <node>\n          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --alias <alias>\n          If any new account is initialized by the tx, use the given alias to save it in the wallet. If multiple accounts are initialized, the alias will be the prefix of each new address joined with a number.\n      --gas-price <gas-price>\n          The amount being paid, per gas unit, for the inclusion of this transaction\n      --gas-token <gas-token>\n          The token for paying the gas\n      --gas-spending-key <gas-spending-key>\n          The spending key to be used for fee unshielding. If none is provided, fee will be paid from the unshielded balance only.\n      --gas-limit <gas-limit>\n          The multiplier of the gas limit resolution defining the maximum amount of gas needed to run transaction.\n      --wallet-alias-force\n          Override the alias without confirmation if it already exists.\n      --expiration <expiration>\n          The expiration datetime of the transaction, after which the tx won't be accepted anymore. All of these examples are equivalent:\n          2012-12-12T12:12:12Z\n          2012-12-12 12:12:12Z\n          2012-  12-12T12:  12:12Z\n      --disposable-gas-payer\n          Generates an ephemeral, disposable keypair to sign the wrapper transaction. This keypair will be immediately discarded after use.\n      --signing-keys <signing-keys>...\n          Sign the transaction with the key for the given public key, public key hash or alias from your wallet.\n      --signatures <signatures>...\n          List of file paths containing a serialized signature to be attached to a transaction. Requires to provide a gas payer.\n      --output-folder-path <output-folder-path>\n          The output folder path where the artifact will be stored.\n      --chain-id <chain-id>\n          The chain ID.\n      --gas-payer <gas-payer>\n          The implicit address of the gas payer. It defaults to the address associated to the first key passed to --signing-keys.\n      --use-device\n          Use an attached hardware wallet device to sign the transaction.\n      --memo <memo>\n          Attach a plaintext memo to the transaction.\n      --source-validator <source-validator>\n          Source validator address for the redelegation.\n      --destination-validator <destination-validator>\n          Destination validator address for the redelegation.\n      --owner <owner>\n          Delegator (owner) address of the bonds that are being redelegated.\n      --amount <amount>\n          Amount of tokens to redelegate.\n  -h, --help\n          Print help",
  "namada client unbond": "Unbond tokens from a PoS bond.\n\nUsage: namada client unbond [OPTIONS] --validator <validator> --amount <amount>\n\nOptions:\n      --dry-run\n          Simulate the transaction application.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --dry-run-wrapper\n          Simulate the complete transaction application. This estimates the gas cost of the transaction.\n      --dump-tx\n          Dump transaction bytes to a file.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --force\n          Submit the transaction even if it doesn't pass client checks.\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n      --broadcast-only\n          Do not wait for the transaction to be applied. This will return once the transaction is added to the mempool.\n      --node <node>\n          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --alias <alias>\n          If any new account is initialized by the tx, use the given alias to save it in the wallet. If multiple accounts are initialized, the alias will be the prefix of each new address joined with a number.\n      --gas-price <gas-price>\n          The amount being paid, per gas unit, for the inclusion of this transaction\n      --gas-token <gas-token>\n          The token for paying the gas\n      --gas-spending-key <gas-spending-key>\n          The spending key to be used for fee unshielding. If none is provided, fee will be paid from the unshielded balance only.\n      --gas-limit <gas-limit>\n          The multiplier of the gas limit resolution defining the maximum amount of gas needed to run transaction.\n      --wallet-alias-force\n          Override the alias without confirmation if it already exists.\n      --expiration <expiration>\n          The expiration datetime of the transaction, after which the tx won't be accepted anymore. All of these examples are equivalent:\n          2012-12-12T12:12:12Z\n          2012-12-12 12:12:12Z\n          2012-  12-12T12:  12:12Z\n      --disposable-gas-payer\n          Generates an ephemeral, disposable keypair to sign the wrapper transaction. This keypair will be immediately discarded after use.\n      --signing-keys <signing-keys>...\n          Sign the transaction with the key for the given public key, public key hash or alias from your wallet.\n      --signatures <signatures>...\n          List of file paths containing a serialized signature to be attached to a transaction. Requires to provide a gas payer.\n      --output-folder-path <output-folder-path>\n          The output folder path where the artifact will be stored.\n      --chain-id <chain-id>\n          The chain ID.\n      --gas-payer <gas-payer>\n          The implicit address of the gas payer. It defaults to the address associated to the first key passed to --signing-keys.\n      --use-device\n          Use an attached hardware wallet device to sign the transaction.\n      --memo <memo>\n          Attach a plaintext memo to the transaction.\n      --validator <validator>\n          Validator address.\n      --amount <amount>\n          Amount of tokens to unbond from a bond.\n      --source <source>\n          Source address for unbonding from delegations. For unbonding from self-bonds, the validator is also the source.\n  -h, --help\n          Print help",
  "namada client unjail-validator": "Send a signed transaction to unjail a jailed validator.\n\nUsage: namada client unjail-validator [OPTIONS] --validator <validator>\n\nOptions:\n      --dry-run\n          Simulate the transaction application.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --dry-run-wrapper\n          Simulate the complete transaction application. This estimates the gas cost of the transaction.\n      --dump-tx\n          Dump transaction bytes to a file.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --force\n          Submit the transaction even if it doesn't pass client checks.\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n      --broadcast-only\n          Do not wait for the transaction to be applied. This will return once the transaction is added to the mempool.\n      --node <node>\n          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --alias <alias>\n          If any new account is initialized by the tx, use the given alias to save it in the wallet. If multiple accounts are initialized, the alias will be the prefix of each new address joined with a number.\n      --gas-price <gas-price>\n          The amount being paid, per gas unit, for the inclusion of this transaction\n      --gas-token <gas-token>\n          The token for paying the gas\n      --gas-spending-key <gas-spending-key>\n          The spending key to be used for fee unshielding. If none is provided, fee will be paid from the unshielded balance only.\n      --gas-limit <gas-limit>\n          The multiplier of the gas limit resolution defining the maximum amount of gas needed to run transaction.\n      --wallet-alias-force\n          Override the alias without confirmation if it already exists.\n      --expiration <expiration>\n          The expiration datetime of the transaction, after which the tx won't be accepted anymore. All of these examples are equivalent:\n          2012-12-12T12:12:12Z\n          2012-12-12 12:12:12Z\n          2012-  12-12T12:  12:12Z\n      --disposable-gas-payer\n          Generates an ephemeral, disposable keypair to sign the wrapper transaction. This keypair will be immediately discarded after use.\n      --signing-keys <signing-keys>...\n          Sign the transaction with the key for the given public key, public key hash or alias from your wallet.\n      --signatures <signatures>...\n          List of file paths containing a serialized signature to be attached to a transaction. Requires to provide a gas payer.\n      --output-folder-path <output-folder-path>\n          The output folder path where the artifact will be stored.\n      --chain-id <chain-id>\n          The chain ID.\n      --gas-payer <gas-payer>\n          The implicit address of the gas payer. It defaults to the address associated to the first key passed to --signing-keys.\n      --use-device\n          Use an attached hardware wallet device to sign the transaction.\n      --memo <memo>\n          Attach a plaintext memo to the transaction.\n      --validator <validator>\n          The address of the jailed validator to unjail.\n  -h, --help\n          Print help",
  "namada client withdraw": "Withdraw tokens from previously unbonded PoS bond.\n\nUsage: namada client withdraw [OPTIONS] --validator <validator>\n\nOptions:\n      --dry-run\n          Simulate the transaction application.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --dry-run-wrapper\n          Simulate the complete transaction application. This estimates the gas cost of the transaction.\n      --dump-tx\n          Dump transaction bytes to a file.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --force\n          Submit the transaction even if it doesn't pass client checks.\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n      --broadcast-only\n          Do not wait for the transaction to be applied. This will return once the transaction is added to the mempool.\n      --node <node>\n          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --alias <alias>\n          If any new account is initialized by the tx, use the given alias to save it in the wallet. If multiple accounts are initialized, the alias will be the prefix of each new address joined with a number.\n      --gas-price <gas-price>\n          The amount being paid, per gas unit, for the inclusion of this transaction\n      --gas-token <gas-token>\n          The token for paying the gas\n      --gas-spending-key <gas-spending-key>\n          The spending key to be used for fee unshielding. If none is provided, fee will be paid from the unshielded balance only.\n      --gas-limit <gas-limit>\n          The multiplier of the gas limit resolution defining the maximum amount of gas needed to run transaction.\n      --wallet-alias-force\n          Override the alias without confirmation if it already exists.\n      --expiration <expiration>\n          The expiration datetime of the transaction, after which the tx won't be accepted anymore. All of these examples are equivalent:\n          2012-12-12T12:12:12Z\n          2012-12-12 12:12:12Z\n          2012-  12-12T12:  12:12Z\n      --disposable-gas-payer\n          Generates an ephemeral, disposable keypair to sign the wrapper transaction. This keypair will be immediately discarded after use.\n      --signing-keys <signing-keys>...\n          Sign the transaction with the key for the given public key, public key hash or alias from your wallet.\n      --signatures <signatures>...\n          List of file paths containing a serialized signature to be attached to a transaction. Requires to provide a gas payer.\n      --output-folder-path <output-folder-path>\n          The output folder path where the artifact will be stored.\n      --chain-id <chain-id>\n          The chain ID.\n      --gas-payer <gas-payer>\n          The implicit address of the gas payer. It defaults to the address associated to the first key passed to --signing-keys.\n      --use-device\n          Use an attached hardware wallet device to sign the transaction.\n      --memo <memo>\n          Attach a plaintext memo to the transaction.\n      --validator <validator>\n          Validator address.\n      --source <source>\n          Source address for withdrawing from delegations. For withdrawing from self-bonds, this arg does not need to be supplied.\n  -h, --help\n          Print help",
  "namada client add-erc20-transfer": "Add a new transfer to the Ethereum Bridge pool.\n\nUsage: namada client add-erc20-transfer [OPTIONS] --erc20 <erc20> --target <target> --source <source> --amount <amount>\n\nOptions:\n      --dry-run\n          Simulate the transaction application.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --dry-run-wrapper\n          Simulate the complete transaction application. This estimates the gas cost of the transaction.\n      --dump-tx\n          Dump transaction bytes to a file.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --force\n          Submit the transaction even if it doesn't pass client checks.\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n      --broadcast-only\n          Do not wait for the transaction to be applied. This will return once the transaction is added to the mempool.\n      --node <node>\n          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --alias <alias>\n          If any new account is initialized by the tx, use the given alias to save it in the wallet. If multiple accounts are initialized, the alias will be the prefix of each new address joined with a number.\n      --gas-price <gas-price>\n          The amount being paid, per gas unit, for the inclusion of this transaction\n      --gas-token <gas-token>\n          The token for paying the gas\n      --gas-spending-key <gas-spending-key>\n          The spending key to be used for fee unshielding. If none is provided, fee will be paid from the unshielded balance only.\n      --gas-limit <gas-limit>\n          The multiplier of the gas limit resolution defining the maximum amount of gas needed to run transaction.\n      --wallet-alias-force\n          Override the alias without confirmation if it already exists.\n      --expiration <expiration>\n          The expiration datetime of the transaction, after which the tx won't be accepted anymore. All of these examples are equivalent:\n          2012-12-12T12:12:12Z\n          2012-12-12 12:12:12Z\n          2012-  12-12T12:  12:12Z\n      --disposable-gas-payer\n          Generates an ephemeral, disposable keypair to sign the wrapper transaction. This keypair will be immediately discarded after use.\n      --signing-keys <signing-keys>...\n          Sign the transaction with the key for the given public key, public key hash or alias from your wallet.\n      --signatures <signatures>...\n          List of file paths containing a serialized signature to be attached to a transaction. Requires to provide a gas payer.\n      --output-folder-path <output-folder-path>\n          The output folder path where the artifact will be stored.\n      --chain-id <chain-id>\n          The chain ID.\n      --gas-payer <gas-payer>\n          The implicit address of the gas payer. It defaults to the address associated to the first key passed to --signing-keys.\n      --use-device\n          Use an attached hardware wallet device to sign the transaction.\n      --memo <memo>\n          Attach a plaintext memo to the transaction.\n      --erc20 <erc20>\n          The Ethereum address of the ERC20 token.\n      --target <target>\n          The Ethereum address receiving the tokens.\n      --source <source>\n          The Namada address sending the tokens.\n      --amount <amount>\n          The amount of tokens being sent across the bridge.\n      --pool-gas-amount <pool-gas-amount>\n          The amount of gas you wish to pay to have this transfer relayed to Ethereum.\n      --pool-gas-payer <pool-gas-payer>\n          The Namada address of the account paying the gas. By default, it is the same as the source.\n      --pool-gas-token <pool-gas-token>\n          The token for paying the Bridge pool gas fees. Defaults to NAM.\n      --nut\n          Add Non Usable Tokens (NUTs) to the Bridge pool. These are usually obtained from invalid transfers to Namada.\n  -h, --help\n          Print help",
  "namada client resign-steward": "Craft a transaction to resign as a steward.\n\nUsage: namada client resign-steward [OPTIONS] --steward <steward>\n\nOptions:\n      --dry-run\n          Simulate the transaction application.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --dry-run-wrapper\n          Simulate the complete transaction application. This estimates the gas cost of the transaction.\n      --dump-tx\n          Dump transaction bytes to a file.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --force\n          Submit the transaction even if it doesn't pass client checks.\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n      --broadcast-only\n          Do not wait for the transaction to be applied. This will return once the transaction is added to the mempool.\n      --node <node>\n          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --alias <alias>\n          If any new account is initialized by the tx, use the given alias to save it in the wallet. If multiple accounts are initialized, the alias will be the prefix of each new address joined with a number.\n      --gas-price <gas-price>\n          The amount being paid, per gas unit, for the inclusion of this transaction\n      --gas-token <gas-token>\n          The token for paying the gas\n      --gas-spending-key <gas-spending-key>\n          The spending key to be used for fee unshielding. If none is provided, fee will be paid from the unshielded balance only.\n      --gas-limit <gas-limit>\n          The multiplier of the gas limit resolution defining the maximum amount of gas needed to run transaction.\n      --wallet-alias-force\n          Override the alias without confirmation if it already exists.\n      --expiration <expiration>\n          The expiration datetime of the transaction, after which the tx won't be accepted anymore. All of these examples are equivalent:\n          2012-12-12T12:12:12Z\n          2012-12-12 12:12:12Z\n          2012-  12-12T12:  12:12Z\n      --disposable-gas-payer\n          Generates an ephemeral, disposable keypair to sign the wrapper transaction. This keypair will be immediately discarded after use.\n      --signing-keys <signing-keys>...\n          Sign the transaction with the key for the given public key, public key hash or alias from your wallet.\n      --signatures <signatures>...\n          List of file paths containing a serialized signature to be attached to a transaction. Requires to provide a gas payer.\n      --output-folder-path <output-folder-path>\n          The output folder path where the artifact will be stored.\n      --chain-id <chain-id>\n          The chain ID.\n      --gas-payer <gas-payer>\n          The implicit address of the gas payer. It defaults to the address associated to the first key passed to --signing-keys.\n      --use-device\n          Use an attached hardware wallet device to sign the transaction.\n      --memo <memo>\n          Attach a plaintext memo to the transaction.\n      --steward <steward>\n          Steward address.\n  -h, --help\n          Print help",
  "namada client update-steward-rewards": "Update how steward commissions are split.\n\nUsage: namada client update-steward-rewards [OPTIONS] --steward <steward> --data-path <data-path>\n\nOptions:\n      --dry-run\n          Simulate the transaction application.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --dry-run-wrapper\n          Simulate the complete transaction application. This estimates the gas cost of the transaction.\n      --dump-tx\n          Dump transaction bytes to a file.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --force\n          Submit the transaction even if it doesn't pass client checks.\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n      --broadcast-only\n          Do not wait for the transaction to be applied. This will return once the transaction is added to the mempool.\n      --node <node>\n          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --alias <alias>\n          If any new account is initialized by the tx, use the given alias to save it in the wallet. If multiple accounts are initialized, the alias will be the prefix of each new address joined with a number.\n      --gas-price <gas-price>\n          The amount being paid, per gas unit, for the inclusion of this transaction\n      --gas-token <gas-token>\n          The token for paying the gas\n      --gas-spending-key <gas-spending-key>\n          The spending key to be used for fee unshielding. If none is provided, fee will be paid from the unshielded balance only.\n      --gas-limit <gas-limit>\n          The multiplier of the gas limit resolution defining the maximum amount of gas needed to run transaction.\n      --wallet-alias-force\n          Override the alias without confirmation if it already exists.\n      --expiration <expiration>\n          The expiration datetime of the transaction, after which the tx won't be accepted anymore. All of these examples are equivalent:\n          2012-12-12T12:12:12Z\n          2012-12-12 12:12:12Z\n          2012-  12-12T12:  12:12Z\n      --disposable-gas-payer\n          Generates an ephemeral, disposable keypair to sign the wrapper transaction. This keypair will be immediately discarded after use.\n      --signing-keys <signing-keys>...\n          Sign the transaction with the key for the given public key, public key hash or alias from your wallet.\n      --signatures <signatures>...\n          List of file paths containing a serialized signature to be attached to a transaction. Requires to provide a gas payer.\n      --output-folder-path <output-folder-path>\n          The output folder path where the artifact will be stored.\n      --chain-id <chain-id>\n          The chain ID.\n      --gas-payer <gas-payer>\n          The implicit address of the gas payer. It defaults to the address associated to the first key passed to --signing-keys.\n      --use-device\n          Use an attached hardware wallet device to sign the transaction.\n      --memo <memo>\n          Attach a plaintext memo to the transaction.\n      --steward <steward>\n          Steward address.\n      --data-path <data-path>\n          The path to the file that describes the commission split. The file must contain a map from namada address to a percentage. Percentages must sum to 1 or less.\n  -h, --help\n          Print help",
  "namada client balance": "Query balance(s) of tokens.\n\nUsage: namada client balance [OPTIONS]\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --node <node>          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --owner <owner>        The account address whose balance to query.\n      --token <token>        The token's address whose balance to query.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --no-conversions       Whether not to automatically perform conversions.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada client block": "Query the last committed block.\n\nUsage: namada client block [OPTIONS]\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --node <node>          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada client bonded-stake": "Query PoS bonded stake.\n\nUsage: namada client bonded-stake [OPTIONS]\n\nOptions:\n      --chain-id <chain-id>    The chain ID.\n      --node <node>            Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>    The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --validator <validator>  The validator's address whose bonded stake to query.\n      --epoch <epoch>          The epoch at which to query (corresponding to the last committed block, if not specified).\n      --wasm-dir <wasm-dir>    Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis            Dispatch pre-genesis specific logic.\n  -h, --help                   Print help",
  "namada client bonds": "Query PoS bond(s).\n\nUsage: namada client bonds [OPTIONS]\n\nOptions:\n      --chain-id <chain-id>    The chain ID.\n      --node <node>            Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>    The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --owner <owner>          The owner account address whose bonds to query.\n      --validator <validator>  The validator's address whose bonds to query.\n      --wasm-dir <wasm-dir>    Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis            Dispatch pre-genesis specific logic.\n  -h, --help                   Print help",
  "namada client commission-rate": "Query a validator's commission rate.\n\nUsage: namada client commission-rate [OPTIONS] --validator <validator>\n\nOptions:\n      --chain-id <chain-id>    The chain ID.\n      --node <node>            Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>    The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --validator <validator>  The validator's address whose commission rate to query.\n      --epoch <epoch>          The epoch at which to query (corresponding to the last committed block, if not specified).\n      --wasm-dir <wasm-dir>    Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis            Dispatch pre-genesis specific logic.\n  -h, --help                   Print help",
  "namada client conversions": "Query currently applicable conversions.\n\nUsage: namada client conversions [OPTIONS]\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --node <node>          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --epoch <epoch>        The epoch for which to query conversions.\n      --token <token>        The token address for which to query conversions.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada client delegations": "Find PoS delegations from the given owner address.\n\nUsage: namada client delegations [OPTIONS] --owner <owner>\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --node <node>          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --owner <owner>        The address of the owner of the delegations to find.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada client epoch": "Query the epoch of the last committed block.\n\nUsage: namada client epoch [OPTIONS]\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --node <node>          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada client find-validator": "Find a PoS validator and its consensus key by its native address or Tendermint address.\n\nUsage: namada client find-validator [OPTIONS]\n\nOptions:\n      --chain-id <chain-id>      The chain ID.\n      --node <node>              Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>      The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --tm-address <tm-address>  The address of the validator in Tendermint.\n      --validator <validator>    The native address of the validator.\n      --wasm-dir <wasm-dir>      Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis              Dispatch pre-genesis specific logic.\n  -h, --help                     Print help",
  "namada client masp-reward-tokens": "Query the tokens which can earn MASP rewards while shielded.\n\nUsage: namada client masp-reward-tokens [OPTIONS]\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --node <node>          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada client next-epoch-info": "Query some info to help discern when the next epoch will begin.\n\nUsage: namada client next-epoch-info [OPTIONS]\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --node <node>          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada client query-account": "Query the substorage space of a specific enstablished address.\n\nUsage: namada client query-account [OPTIONS] --owner <owner>\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --node <node>          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --owner <owner>        The substorage space address to query.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada client query-bytes": "Query the raw bytes of a given storage key\n\nUsage: namada client query-bytes [OPTIONS] --storage-key <storage-key>\n\nOptions:\n      --chain-id <chain-id>        The chain ID.\n      --node <node>                Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>        The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --storage-key <storage-key>  Storage key\n      --wasm-dir <wasm-dir>        Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis                Dispatch pre-genesis specific logic.\n  -h, --help                       Print help",
  "namada client query-pgf": "Query pgf stewards and continuous funding.\n\nUsage: namada client query-pgf [OPTIONS]\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --node <node>          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada client query-proposal": "Query proposals.\n\nUsage: namada client query-proposal [OPTIONS]\n\nOptions:\n      --chain-id <chain-id>        The chain ID.\n      --node <node>                Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>        The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --proposal-id <proposal-id>  The proposal identifier.\n      --wasm-dir <wasm-dir>        Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis                Dispatch pre-genesis specific logic.\n  -h, --help                       Print help",
  "namada client query-proposal-result": "Query proposals result.\n\nUsage: namada client query-proposal-result [OPTIONS]\n\nOptions:\n      --chain-id <chain-id>        The chain ID.\n      --node <node>                Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>        The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --proposal-id <proposal-id>  The proposal identifier.\n      --offline                    Flag if the proposal result should run on offline data.\n      --wasm-dir <wasm-dir>        Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --data-path <data-path>      The path to the folder containing the proposal and votes files in json format.\n      --pre-genesis                Dispatch pre-genesis specific logic.\n  -h, --help                       Print help",
  "namada client query-proposal-votes": "Query votes for the proposal.\n\nUsage: namada client query-proposal-votes [OPTIONS]\n\nOptions:\n      --chain-id <chain-id>        The chain ID.\n      --node <node>                Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>        The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --proposal-id <proposal-id>  The proposal identifier.\n      --voter <voter>              The address of the proposal voter.\n      --wasm-dir <wasm-dir>        Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis                Dispatch pre-genesis specific logic.\n  -h, --help                       Print help",
  "namada client query-protocol-parameters": "Query protocol parameters.\n\nUsage: namada client query-protocol-parameters [OPTIONS]\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --node <node>          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada client rewards": "Query the latest rewards available to claim for a given delegation (or self-bond).\n\nUsage: namada client rewards [OPTIONS] --validator <validator>\n\nOptions:\n      --chain-id <chain-id>    The chain ID.\n      --node <node>            Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>    The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --source <source>        Source address for the rewards query. For self-bonds, this arg does not need to be supplied.\n      --validator <validator>  Validator address for the rewards query.\n      --wasm-dir <wasm-dir>    Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis            Dispatch pre-genesis specific logic.\n  -h, --help                   Print help",
  "namada client show-transfers": "Query the accepted transfers to date.\n\nUsage: namada client show-transfers [OPTIONS]\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --node <node>          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --owner <owner>        The account address that queried transfers must involve.\n      --token <token>        The token address that queried transfers must involve.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada client slashes": "Query PoS applied slashes.\n\nUsage: namada client slashes [OPTIONS]\n\nOptions:\n      --chain-id <chain-id>    The chain ID.\n      --node <node>            Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>    The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --validator <validator>  The validator's address whose slashes to query.\n      --wasm-dir <wasm-dir>    Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis            Dispatch pre-genesis specific logic.\n  -h, --help                   Print help",
  "namada client status": "Query the node's status.\n\nUsage: namada client status [OPTIONS]\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --node <node>          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada client tx-result": "Query the result of a transaction.\n\nUsage: namada client tx-result [OPTIONS] --tx-hash <tx-hash>\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --node <node>          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --tx-hash <tx-hash>    The hash of the transaction being looked up.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada client validator-metadata": "Query a validator's metadata.\n\nUsage: namada client validator-metadata [OPTIONS] --validator <validator>\n\nOptions:\n      --chain-id <chain-id>    The chain ID.\n      --node <node>            Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>    The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --validator <validator>  The validator's address whose metadata to query.\n      --wasm-dir <wasm-dir>    Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis            Dispatch pre-genesis specific logic.\n  -h, --help                   Print help",
  "namada client validator-state": "Query the state of a PoS validator.\n\nUsage: namada client validator-state [OPTIONS] --validator <validator>\n\nOptions:\n      --chain-id <chain-id>    The chain ID.\n      --node <node>            Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>    The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --validator <validator>  The validator's address whose state is queried.\n      --epoch <epoch>          The epoch at which to query (corresponding to the last committed block, if not specified).\n      --wasm-dir <wasm-dir>    Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis            Dispatch pre-genesis specific logic.\n  -h, --help                   Print help",
  "namada client ibc-gen-shielded": "Generate shielded transfer for IBC.\n\nUsage: namada client ibc-gen-shielded [OPTIONS] --target <target> --token <token> --amount <amount> --channel-id <channel-id>\n\nOptions:\n      --chain-id <chain-id>\n          The chain ID.\n      --node <node>\n          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --output-folder-path <output-folder-path>\n          The output folder path where the artifact will be stored.\n      --target <target>\n          The target address.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n      --token <token>\n          The transfer token.\n      --amount <amount>\n          The amount to transfer in decimal.\n      --port-id <port-id>\n          The port ID via which the token is received.\n      --channel-id <channel-id>\n          The channel ID via which the token is received.\n  -h, --help\n          Print help",
  "namada client shielded-sync": "Sync the local shielded context with MASP notes owned by the provided viewing / spending keys up to an optional specified block height.\n\nUsage: namada client shielded-sync [OPTIONS]\n\nOptions:\n      --chain-id <chain-id>\n          The chain ID.\n      --node <node>\n          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --batch-size <batch-size>\n          Optional batch size which determines how many txs to fetch before caching locally. Default is 1.\n      --height <height>\n          Option block height to sync up to. Default is latest.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n      --spending-keys <spending-keys>...\n          List of new spending keys with which to check note ownership. These will be added to the shielded context.\n      --viewing-keys <viewing-keys>...\n          List of new viewing keys with which to check note ownership. These will be added to the shielded context.\n  -h, --help\n          Print help",
  "namada client sign-tx": "Sign a transaction offline.\n\nUsage: namada client sign-tx [OPTIONS] --tx-path <tx-path> --owner <owner>\n\nOptions:\n      --dry-run\n          Simulate the transaction application.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --dry-run-wrapper\n          Simulate the complete transaction application. This estimates the gas cost of the transaction.\n      --dump-tx\n          Dump transaction bytes to a file.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --force\n          Submit the transaction even if it doesn't pass client checks.\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n      --broadcast-only\n          Do not wait for the transaction to be applied. This will return once the transaction is added to the mempool.\n      --node <node>\n          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --alias <alias>\n          If any new account is initialized by the tx, use the given alias to save it in the wallet. If multiple accounts are initialized, the alias will be the prefix of each new address joined with a number.\n      --gas-price <gas-price>\n          The amount being paid, per gas unit, for the inclusion of this transaction\n      --gas-token <gas-token>\n          The token for paying the gas\n      --gas-spending-key <gas-spending-key>\n          The spending key to be used for fee unshielding. If none is provided, fee will be paid from the unshielded balance only.\n      --gas-limit <gas-limit>\n          The multiplier of the gas limit resolution defining the maximum amount of gas needed to run transaction.\n      --wallet-alias-force\n          Override the alias without confirmation if it already exists.\n      --expiration <expiration>\n          The expiration datetime of the transaction, after which the tx won't be accepted anymore. All of these examples are equivalent:\n          2012-12-12T12:12:12Z\n          2012-12-12 12:12:12Z\n          2012-  12-12T12:  12:12Z\n      --disposable-gas-payer\n          Generates an ephemeral, disposable keypair to sign the wrapper transaction. This keypair will be immediately discarded after use.\n      --signing-keys <signing-keys>...\n          Sign the transaction with the key for the given public key, public key hash or alias from your wallet.\n      --signatures <signatures>...\n          List of file paths containing a serialized signature to be attached to a transaction. Requires to provide a gas payer.\n      --output-folder-path <output-folder-path>\n          The output folder path where the artifact will be stored.\n      --chain-id <chain-id>\n          The chain ID.\n      --gas-payer <gas-payer>\n          The implicit address of the gas payer. It defaults to the address associated to the first key passed to --signing-keys.\n      --use-device\n          Use an attached hardware wallet device to sign the transaction.\n      --memo <memo>\n          Attach a plaintext memo to the transaction.\n      --tx-path <tx-path>\n          The path to the tx file with the serialized tx.\n      --owner <owner>\n          The address of the account owner\n  -h, --help\n          Print help",
  "namada client utils": "Utilities.\n\nUsage: namada client utils [OPTIONS] <COMMAND>\n\nCommands:\n  join-network                      Configure Namada to join an existing network.\n  fetch-wasms                       Ensure pre-built wasms are present\n  validate-wasm                     Check that the provided wasm code is valid by the Namada standards.\n  init-network                      Initialize a new test network.\n  derive-genesis-addresses          Derive account addresses from a genesis txs toml file.\n  genesis-bond                      Bond to a validator at pre-genesis.\n  init-genesis-established-account  Initialize an established account available at genesis.\n  init-genesis-validator            Initialize genesis validator's address, consensus key and validator account key and use it in the ledger's node. Appends validator creation and self-bond txs to a .toml file containing an established account tx.\n  pk-to-tm                          Convert a validator's consensus public key to a Tendermint address.\n  default-base-dir                  Print the default base directory that would be used if --base-dir or NAMADA_BASE_DIR were not used to set the base directory.\n  epoch-sleep                       Query for the current epoch, then sleep until the next epoch.\n  validate-genesis-templates        Validate genesis templates.\n  test-genesis                      Dry run genesis files and get a report on problems that may be found.\n  sign-genesis-txs                  Sign genesis transaction(s).\n  help                              Print this message or the help of the given subcommand(s)\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada client utils join-network": "Configure Namada to join an existing network.\n\nUsage: namada client utils join-network [OPTIONS] --chain-id <chain-id>\n\nOptions:\n      --chain-id <chain-id>\n          The chain ID. The chain must be known in the repository: https://github.com/heliaxdev/anoma-network-config\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --genesis-validator <genesis-validator>\n          The alias of the genesis validator that you want to set up as, if any.\n      --pre-genesis-path <pre-genesis-path>\n          The path to the pre-genesis directory for genesis validator, if any. Defaults to \"{base-dir}/pre-genesis/{genesis-validator}\".\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --dont-prefetch-wasm\n          Do not pre-fetch WASM.\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n      --allow-duplicate-ip\n          Toggle to disable guard against peers connecting from the same IP. This option shouldn't be used in mainnet.\n  -h, --help\n          Print help",
  "namada client utils fetch-wasms": "Ensure pre-built wasms are present\n\nUsage: namada client utils fetch-wasms [OPTIONS] --chain-id <chain-id>\n\nOptions:\n      --chain-id <chain-id>  The chain ID. The chain must be known in the https://github.com/heliaxdev/anoma-network-config repository, in which case it should have pre-built wasms available for download.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada client utils validate-wasm": "Check that the provided wasm code is valid by the Namada standards.\n\nUsage: namada client utils validate-wasm [OPTIONS] --code-path <code-path>\n\nOptions:\n      --chain-id <chain-id>    The chain ID.\n      --code-path <code-path>  The path to the wasm file to validate.\n      --base-dir <base-dir>    The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>    Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis            Dispatch pre-genesis specific logic.\n  -h, --help                   Print help",
  "namada client utils init-network": "Initialize a new test network.\n\nUsage: namada client utils init-network [OPTIONS] --templates-path <templates-path> --wasm-checksums-path <wasm-checksums-path> --chain-prefix <chain-prefix> --genesis-time <genesis-time>\n\nOptions:\n      --chain-id <chain-id>\n          The chain ID.\n      --templates-path <templates-path>\n          Path to the directory with genesis templates to be used to initialize the network.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-checksums-path <wasm-checksums-path>\n          Path to the WASM checksums file.\n      --chain-prefix <chain-prefix>\n          The chain ID prefix. Up to 19 alphanumeric, '.', '-' or '_' characters.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --genesis-time <genesis-time>\n          The start time of the network in RFC 3339 and ISO 8601 format. For example: \"2021-12-31T00:00:00Z\".\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n      --consensus-timeout-commit <consensus-timeout-commit>\n          The Tendermint consensus timeout_commit configuration as e.g. `1s` or `1000ms`. Defaults to 10 seconds.\n      --dont-archive\n          Do NOT create the release archive.\n      --archive-dir <archive-dir>\n          Specify a directory into which to store the archive. Default is the current working directory.\n  -h, --help\n          Print help",
  "namada client utils derive-genesis-addresses": "Derive account addresses from a genesis txs toml file.\n\nUsage: namada client utils derive-genesis-addresses [OPTIONS] --path <path>\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --path <path>          Path to the genesis txs toml file.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada client utils genesis-bond": "Bond to a validator at pre-genesis.\n\nUsage: namada client utils genesis-bond [OPTIONS] --validator <validator> --amount <amount> --path <path>\n\nOptions:\n      --chain-id <chain-id>    The chain ID.\n      --validator <validator>  Validator address.\n      --amount <amount>        Amount of tokens to stake in a bond.\n      --base-dir <base-dir>    The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --source <source>        Source address for delegations. For self-bonds, the validator is also the source.\n      --wasm-dir <wasm-dir>    Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --path <path>            Output toml file to write transactions to.\n      --pre-genesis            Dispatch pre-genesis specific logic.\n  -h, --help                   Print help",
  "namada client utils init-genesis-established-account": "Initialize an established account available at genesis.\n\nUsage: namada client utils init-genesis-established-account [OPTIONS] --path <path>\n\nOptions:\n      --aliases <aliases>...   Comma separated list of aliases of the keys to use from the wallet.\n      --chain-id <chain-id>    The chain ID.\n      --base-dir <base-dir>    The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --threshold <threshold>  The minimum number of signatures to be provided for authorization. Must be less than or equal to the maximum number of key aliases provided.\n      --vp <vp>                The validity predicate of the account. Defaults to `vp_user`.\n      --wasm-dir <wasm-dir>    Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --path <path>            The path of the .toml file to write the established account transaction to. Overwrites the file if it exists.\n      --pre-genesis            Dispatch pre-genesis specific logic.\n  -h, --help                   Print help",
  "namada client utils init-genesis-validator": "Initialize genesis validator's address, consensus key and validator account key and use it in the ledger's node. Appends validator creation and self-bond txs to a .toml file containing an established account tx.\n\nUsage: namada client utils init-genesis-validator [OPTIONS] --alias <alias> --address <address> --path <path> --net-address <net-address> --commission-rate <commission-rate> --max-commission-rate-change <max-commission-rate-change> --self-bond-amount <self-bond-amount> --email <email>\n\nOptions:\n      --alias <alias>\n          The validator address alias.\n      --chain-id <chain-id>\n          The chain ID.\n      --address <address>\n          The address of an established account to be promoted to a validator.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --path <path>\n          The .toml file containing an established account tx from which to create a validator.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --net-address <net-address>\n          Static {host:port} of your validator node's P2P address. Namada uses port `26656` for P2P connections by default, but you can configure a different value.\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n      --commission-rate <commission-rate>\n          The commission rate charged by the validator for delegation rewards. This is a required parameter.\n      --max-commission-rate-change <max-commission-rate-change>\n          The maximum change per epoch in the commission rate charged by the validator for delegation rewards. This is a required parameter.\n      --unsafe-dont-encrypt\n          UNSAFE: Do not encrypt the generated keypairs. Do not use this for keys used in a live network.\n      --scheme <scheme>\n          The key scheme/type used for the validator keys. Currently supports ed25519 and secp256k1.\n      --self-bond-amount <self-bond-amount>\n          The amount of native token to self-bond in PoS.\n      --email <email>\n          The email address of the validator. This is a required parameter.\n      --description <description>\n          The validator's description. This is an optional parameter.\n      --website <website>\n          The validator's website. This is an optional parameter.\n      --discord-handle <discord-handle>\n          The validator's discord handle. This is an optional parameter.\n      --avatar <avatar>\n          The validator's avatar. This is an optional parameter.\n  -h, --help\n          Print help",
  "namada client utils pk-to-tm": "Convert a validator's consensus public key to a Tendermint address.\n\nUsage: namada client utils pk-to-tm [OPTIONS] --public-key <public-key>\n\nOptions:\n      --chain-id <chain-id>      The chain ID.\n      --public-key <public-key>  The consensus public key to be converted to Tendermint address.\n      --base-dir <base-dir>      The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>      Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis              Dispatch pre-genesis specific logic.\n  -h, --help                     Print help",
  "namada client utils default-base-dir": "Print the default base directory that would be used if --base-dir or NAMADA_BASE_DIR were not used to set the base directory.\n\nUsage: namada client utils default-base-dir [OPTIONS]\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada client utils epoch-sleep": "Query for the current epoch, then sleep until the next epoch.\n\nUsage: namada client utils epoch-sleep [OPTIONS]\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --node <node>          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada client utils validate-genesis-templates": "Validate genesis templates.\n\nUsage: namada client utils validate-genesis-templates [OPTIONS] --path <path>\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --path <path>          Path to the directory with the template files.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada client utils test-genesis": "Dry run genesis files and get a report on problems that may be found.\n\nUsage: namada client utils test-genesis [OPTIONS] --path <path>\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --path <path>          Path to the directory with the template files.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>  Optional wasm directory to provide as part of verifying genesis template files\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada client utils sign-genesis-txs": "Sign genesis transaction(s).\n\nUsage: namada client utils sign-genesis-txs [OPTIONS] --path <path>\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --path <path>          Path to the unsigned transactions TOML file.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --output <output>      Save the output to a TOML file. When not supplied, the signed transactions will be printed to stdout instead.\n      --alias <alias>        Optional alias to a validator wallet.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n      --use-device           Derive an address and public key from the seed stored on the connected hardware wallet.\n  -h, --help                 Print help",
  "namada wallet": "Wallet sub-commands.\n\nUsage: namada wallet [OPTIONS] <COMMAND>\n\nCommands:\n  gen               Generates a new transparent / shielded secret key.\n  derive            Derive transparent / shielded key from the mnemonic code or a seed stored on the hardware wallet device.\n  gen-payment-addr  Generates a payment address from the given spending key.\n  list              List known keys and addresses in the wallet.\n  find              Find known keys and addresses in the wallet.\n  export            Exports a transparent keypair / shielded spending key to a file.\n  convert           Convert to tendermint priv_validator_key.json with your consensus key alias\n  import            Imports a transparent keypair / shielded spending key from a file.\n  add               Adds the given key or address to the wallet.\n  remove            Remove the given alias and all associated keys / addresses from the wallet.\n  help              Print this message or the help of the given subcommand(s)\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada wallet gen": "In the transparent setting, generates a keypair with a given alias and derives the implicit address from its public key. The address will be stored with the same alias.\nIn the shielded setting, generates a new spending key with a given alias.\nIn both settings, by default, an HD-key with a default derivation path is generated, with a random mnemonic code.\n\nUsage: namada wallet gen [OPTIONS] --alias <alias>\n\nOptions:\n      --chain-id <chain-id>\n          The chain ID.\n\n      --scheme <scheme>\n          For the transparent pool, the type of key that should be generated. Argument must be either ed25519 or secp256k1. If none provided, the default key scheme is ed25519.\n          Not applicable for the shielded pool.\n\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n\n      --shielded\n          Generate a spending key for the shielded pool.\n\n      --raw\n          Generate a random non-HD secret / spending key. No mnemonic code is generated.\n\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n\n      --alias <alias>\n          The key and address alias.\n\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n\n      --alias-force\n          Override the alias without confirmation if it already exists.\n\n      --unsafe-dont-encrypt\n          UNSAFE: Do not encrypt the keypair. Do not use this for keys used in a live network.\n\n      --hd-path <hd-path>\n          HD key derivation path. Use keyword `default` to refer to a scheme default path:\n          - m/44'/60'/0'/0/0 for the transparent secp256k1 scheme\n          - m/44'/877'/0'/0'/0' for the transparent ed25519 scheme\n          - m/32'/877'/0' for the shielded setting\n          For ed25519 scheme, all path indices will be promoted to hardened indexes. If none is specified, the scheme default path is used.\n\n      --allow-non-compliant\n          Allow non-compliant HD derivation path. The compliant derivation path schemes include:\n          - m/44'/60'/account'/change/address_index for the transparent secp256k1 scheme\n          - m/44'/877'/account'/change'/address_index' for the transparent ed25519 scheme\n          - m/32'/877'/account' and\n          - m/32'/877'/account'/address_index for the shielded setting\n\n      --bip39-passphrase\n          Use an additional passphrase for HD-key generation.\n\n  -h, --help\n          Print help (see a summary with '-h')",
  "namada wallet derive": "In the transparent setting, derives a keypair from the given mnemonic code and HD derivation path and derives the implicit address from its public key. Stores the keypair and the address with the given alias.\nIn the shielded setting, derives a spending key.\nA hardware wallet can be used, in which case the private key is not derivable.\n\nUsage: namada wallet derive [OPTIONS] --alias <alias>\n\nOptions:\n      --chain-id <chain-id>\n          The chain ID.\n\n      --scheme <scheme>\n          For the transparent pool, the type of key that should be derived. Argument must be either ed25519 or secp256k1. If none provided, the default key scheme is ed25519.\n          Not applicable for the shielded pool.\n\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n\n      --shielded\n          Derive a spending key for the shielded pool.\n\n      --alias <alias>\n          The key and address alias.\n\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n\n      --alias-force\n          Force overwrite the alias if it already exists.\n\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n\n      --unsafe-dont-encrypt\n          UNSAFE: Do not encrypt the keypair. Do not use this for keys used in a live network.\n\n      --use-device\n          Derive an address and public key from the seed stored on the connected hardware wallet.\n\n      --hd-path <hd-path>\n          HD key derivation path. Use keyword `default` to refer to a scheme default path:\n          - m/44'/60'/0'/0/0 for the transparent secp256k1 scheme\n          - m/44'/877'/0'/0'/0' for the transparent ed25519 scheme\n          - m/32'/877'/0' for the shielded setting\n          For ed25519 scheme, all path indices will be promoted to hardened indexes. If none is specified, the scheme default path is used.\n\n      --allow-non-compliant\n          Allow non-compliant HD derivation path. The compliant derivation path schemes include:\n          - m/44'/60'/account'/change/address_index for the transparent secp256k1 scheme\n          - m/44'/877'/account'/change'/address_index' for the transparent ed25519 scheme\n          - m/32'/877'/account' and\n          - m/32'/877'/account'/address_index for the shielded setting\n\n      --bip39-passphrase\n          Use an additional passphrase for HD-key generation.\n\n  -h, --help\n          Print help (see a summary with '-h')",
  "namada wallet gen-payment-addr": "Generates a payment address from the given spending key.\n\nUsage: namada wallet gen-payment-addr [OPTIONS] --alias <alias> --key <key>\n\nOptions:\n      --alias <alias>        An alias to be associated with the payment address.\n      --chain-id <chain-id>  The chain ID.\n      --alias-force          Override the alias without confirmation if it already exists.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --key <key>            The viewing key.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pin                  Require that the single transaction to this address be pinned.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada wallet list": "In the transparent setting, list known keypairs and addresses.\nIn the shielded setting, list known spending / viewing keys and payment addresses.\n\nUsage: namada wallet list [OPTIONS]\n\nOptions:\n      --chain-id <chain-id>\n          The chain ID.\n\n      --transparent\n          List transparent keys / addresses only.\n\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n\n      --shielded\n          List keys / addresses of the shielded pool only.\n\n      --keys\n          List keys only.\n\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n\n      --addr\n          List addresses only.\n\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n\n      --decrypt\n          Decrypt keys that are encrypted.\n\n      --unsafe-show-secret\n          UNSAFE: Print the secret / spending keys.\n\n  -h, --help\n          Print help (see a summary with '-h')",
  "namada wallet find": "In the transparent setting, searches for a keypair / address by a given alias, public key, or a public key hash. Looks up an alias of the given address.\nIn the shielded setting, searches for a spending / viewing key and payment address by a given alias. Looks up an alias of the given payment address.\n\nUsage: namada wallet find [OPTIONS] <--alias <alias>|--address <address>|--public-key <public-key>|--public-key-hash <public-key-hash>|--payment-address <payment-address>>\n\nOptions:\n      --alias <alias>\n          An alias associated with the keys / addresses.\n\n      --chain-id <chain-id>\n          The chain ID.\n\n      --address <address>\n          The bech32m encoded string of a transparent address.\n\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n\n      --public-key <public-key>\n          A public key associated with the transparent keypair.\n\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n\n      --public-key-hash <public-key-hash>\n          A public key hash associated with the transparent keypair.\n\n      --payment-address <payment-address>\n          The bech32m encoded string of a shielded payment address.\n\n      --keys\n          Find keys only.\n\n      --addr\n          Find addresses only.\n\n      --pre-genesis\n          Use pre-genesis wallet, instead of for the current chain, if any.\n\n      --decrypt\n          Decrypt keys that are encrypted.\n\n      --unsafe-show-secret\n          UNSAFE: Print the secret / spending key.\n\n  -h, --help\n          Print help (see a summary with '-h')",
  "namada wallet export": "Exports a transparent keypair / shielded spending key to a file.\n\nUsage: namada wallet export [OPTIONS] --alias <alias>\n\nOptions:\n      --alias <alias>        The alias of the key you wish to export.\n      --chain-id <chain-id>  The chain ID.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada wallet convert": "Convert to tendermint priv_validator_key.json with your consensus key alias\n\nUsage: namada wallet convert [OPTIONS] --alias <alias>\n\nOptions:\n      --alias <alias>        The alias of the key you wish to export.\n      --chain-id <chain-id>  The chain ID.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada wallet import": "Imports a transparent keypair / shielded spending key from a file.\n\nUsage: namada wallet import [OPTIONS] --file <file> --alias <alias>\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --file <file>          Path to the file containing the key you wish to import.\n      --alias <alias>        The alias assigned to the.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --alias-force          An alias to be associated with the imported entry.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n      --unsafe-dont-encrypt  UNSAFE: Do not encrypt the imported keys. Do not use this for keys used in a live network.\n  -h, --help                 Print help",
  "namada wallet add": "Adds the given key or address to the wallet.\n\nUsage: namada wallet add [OPTIONS] --alias <alias> --value <value>\n\nOptions:\n      --alias <alias>        An alias to be associated with the new entry.\n      --chain-id <chain-id>  The chain ID.\n      --alias-force          Override the alias without confirmation if it already exists.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --value <value>        Any value of the following:\n                             - transparent pool secret key\n                             - transparent pool public key\n                             - transparent pool address\n                             - shielded pool spending key\n                             - shielded pool viewing key\n                             - shielded pool payment address \n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n      --unsafe-dont-encrypt  UNSAFE: Do not encrypt the added keys. Do not use this for keys used in a live network.\n  -h, --help                 Print help",
  "namada wallet remove": "Remove the given alias and all associated keys / addresses from the wallet.\n\nUsage: namada wallet remove [OPTIONS] --alias <alias> --do-it\n\nOptions:\n      --alias <alias>        An alias to be removed.\n      --chain-id <chain-id>  The chain ID.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --do-it                Confirm alias removal.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada ethereum-bridge-pool": "Functionality for interacting with the Ethereum bridge pool. This pool holds transfers waiting to be relayed to Ethereum.\n\nUsage: namada ethereum-bridge-pool [OPTIONS] <COMMAND>\n\nCommands:\n  construct-proof  Construct a merkle proof that the given transfers are in the pool.\n  query            Get the contents of the Ethereum Bridge pool.\n  query-relayed    Get the confirmation status of transfers to Ethereum.\n  query-signed     Get the contents of the Ethereum Bridge pool with a signed Merkle root.\n  recommend-batch  Get a recommended batch of transfers from the bridge pool to relay to Ethereum.\n  relay-proof      Construct a merkle proof that the given transfers are in the pool and relay it to Ethereum.\n  help             Print this message or the help of the given subcommand(s)\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada ethereum-bridge-pool construct-proof": "Construct a merkle proof that the given transfers are in the pool.\n\nUsage: namada ethereum-bridge-pool construct-proof [OPTIONS] --hash-list <hash-list> --relayer <relayer>\n\nOptions:\n      --chain-id <chain-id>    The chain ID.\n      --node <node>            Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>    The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --hash-list <hash-list>  Whitespace separated Keccak hash list of transfers in the Bridge pool.\n      --relayer <relayer>      The rewards address for relaying this proof.\n      --wasm-dir <wasm-dir>    Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis            Dispatch pre-genesis specific logic.\n  -h, --help                   Print help",
  "namada ethereum-bridge-pool query": "Get the contents of the Ethereum Bridge pool.\n\nUsage: namada ethereum-bridge-pool query [OPTIONS]\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --node <node>          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada ethereum-bridge-pool query-relayed": "Get the confirmation status of transfers to Ethereum.\n\nUsage: namada ethereum-bridge-pool query-relayed [OPTIONS]\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --node <node>          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada ethereum-bridge-pool query-signed": "Get the contents of the Ethereum Bridge pool with a signed Merkle root.\n\nUsage: namada ethereum-bridge-pool query-signed [OPTIONS]\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --node <node>          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada ethereum-bridge-pool recommend-batch": "Get a recommended batch of transfers from the bridge pool to relay to Ethereum.\n\nUsage: namada ethereum-bridge-pool recommend-batch [OPTIONS] --conversion-table <conversion-table>\n\nOptions:\n      --chain-id <chain-id>\n          The chain ID.\n      --node <node>\n          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --max_eth-gas <max_eth-gas>\n          The maximum amount Ethereum gas that can be spent during the relay call.\n      --eth-gas <eth-gas>\n          Under ideal conditions, relaying transfers will yield a net profit. If that is not possible, setting this optional value will result in a batch transfer that costs as close to the given value as possible without exceeding it.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --conversion-table <conversion-table>\n          Path to a JSON object containing a mapping between token aliases (or addresses) and their conversion rates in gwei\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n  -h, --help\n          Print help",
  "namada ethereum-bridge-pool relay-proof": "Construct a merkle proof that the given transfers are in the pool and relay it to Ethereum.\n\nUsage: namada ethereum-bridge-pool relay-proof [OPTIONS] --hash-list <hash-list> --relayer <relayer> --confirmations <confirmations>\n\nOptions:\n      --chain-id <chain-id>\n          The chain ID.\n      --node <node>\n          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --safe-mode\n          Safe mode overrides keyboard interrupt signals, to ensure Ethereum transfers aren't canceled midway through.\n      --hash-list <hash-list>\n          Whitespace separated Keccak hash list of transfers in the Bridge pool.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n      --relayer <relayer>\n          The rewards address for relaying this proof.\n      --ethereum-address <ethereum-address>\n          The address of the Ethereum wallet to pay the gas fees. If unset, the default wallet is used.\n      --eth-gas <eth-gas>\n          The Ethereum gas that can be spent during the relay call.\n      --eth-gas-price <eth-gas-price>\n          The price of Ethereum gas, during the relay call.\n      --eth-rpc-endpoint <eth-rpc-endpoint>\n          The Ethereum RPC endpoint.\n      --confirmations <confirmations>\n          The number of block confirmations on Ethereum.\n      --sync\n          Synchronize with the network, or exit immediately, if the Ethereum node has fallen behind.\n  -h, --help\n          Print help",
  "namada ledger": "Ledger node sub-commands. If no sub-command specified, defaults to run the node.\n\nUsage: namada ledger [OPTIONS] [COMMAND]\n\nCommands:\n  run        Run Namada ledger node.\n  run-until  Run Namada ledger node until a given height. Then halt or suspend.\n  reset      Delete Namada ledger node's and Tendermint node's storage data.\n  dump-db    Dump Namada ledger node's DB from a block into a file.\n  rollback   Roll Namada state back to the previous height. This command does not create a backup of neither the Namada nor the Tendermint state before execution: for extra safety, it is recommended to make a backup in advance.\n  help       Print this message or the help of the given subcommand(s)\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada ledger run": "Run Namada ledger node.\n\nUsage: namada ledger run [OPTIONS]\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --time <time>          The start time of the ledger. Accepts a relaxed form of RFC3339. A space or a 'T' are accepted as the separator between the date and time components. Additional spaces are allowed between each component.\n                             All of these examples are equivalent:\n                             2023-01-20T12:12:12Z\n                             2023-01-20 12:12:12Z\n                             2023-  01-20T12:  12:12Z\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada ledger run-until": "Run Namada ledger node until a given height. Then halt or suspend.\n\nUsage: namada ledger run-until [OPTIONS] --block-height <block-height> <--halt|--suspend>\n\nOptions:\n      --chain-id <chain-id>          The chain ID.\n      --time <time>                  The start time of the ledger.\n      --base-dir <base-dir>          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --block-height <block-height>  The block height to run until.\n      --halt                         Halt at the given block height\n      --wasm-dir <wasm-dir>          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis                  Dispatch pre-genesis specific logic.\n      --suspend                      Suspend consensus at the given block height\n  -h, --help                         Print help",
  "namada ledger reset": "Delete Namada ledger node's and Tendermint node's storage data.\n\nUsage: namada ledger reset [OPTIONS]\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada ledger dump-db": "Dump Namada ledger node's DB from a block into a file.\n\nUsage: namada ledger dump-db [OPTIONS]\n\nOptions:\n      --chain-id <chain-id>            The chain ID.\n      --height <height>                The block height to dump. Defaults to latest committed\n                                                       block.\n      --base-dir <base-dir>            The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --out-file-path <out-file-path>  Path for the output file (omitting file extension). Defaults to \"db_dump.{block_height}.toml\" in the current working directory.\n      --historic                       If provided, dump also the diff of the last height\n      --wasm-dir <wasm-dir>            Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis                    Dispatch pre-genesis specific logic.\n  -h, --help                           Print help",
  "namada ledger rollback": "Roll Namada state back to the previous height. This command does not create a backup of neither the Namada nor the Tendermint state before execution: for extra safety, it is recommended to make a backup in advance.\n\nUsage: namada ledger rollback [OPTIONS]\n\nOptions:\n      --chain-id <chain-id>  The chain ID.\n      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --pre-genesis          Dispatch pre-genesis specific logic.\n  -h, --help                 Print help",
  "namada tx": "Send a transaction with custom WASM code.\n\nUsage: namada tx [OPTIONS] --owner <owner>\n\nOptions:\n      --dry-run\n          Simulate the transaction application.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --dry-run-wrapper\n          Simulate the complete transaction application. This estimates the gas cost of the transaction.\n      --dump-tx\n          Dump transaction bytes to a file.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --force\n          Submit the transaction even if it doesn't pass client checks.\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n      --broadcast-only\n          Do not wait for the transaction to be applied. This will return once the transaction is added to the mempool.\n      --node <node>\n          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --alias <alias>\n          If any new account is initialized by the tx, use the given alias to save it in the wallet. If multiple accounts are initialized, the alias will be the prefix of each new address joined with a number.\n      --gas-price <gas-price>\n          The amount being paid, per gas unit, for the inclusion of this transaction\n      --gas-token <gas-token>\n          The token for paying the gas\n      --gas-spending-key <gas-spending-key>\n          The spending key to be used for fee unshielding. If none is provided, fee will be paid from the unshielded balance only.\n      --gas-limit <gas-limit>\n          The multiplier of the gas limit resolution defining the maximum amount of gas needed to run transaction.\n      --wallet-alias-force\n          Override the alias without confirmation if it already exists.\n      --expiration <expiration>\n          The expiration datetime of the transaction, after which the tx won't be accepted anymore. All of these examples are equivalent:\n          2012-12-12T12:12:12Z\n          2012-12-12 12:12:12Z\n          2012-  12-12T12:  12:12Z\n      --disposable-gas-payer\n          Generates an ephemeral, disposable keypair to sign the wrapper transaction. This keypair will be immediately discarded after use.\n      --signing-keys <signing-keys>...\n          Sign the transaction with the key for the given public key, public key hash or alias from your wallet.\n      --signatures <signatures>...\n          List of file paths containing a serialized signature to be attached to a transaction. Requires to provide a gas payer.\n      --output-folder-path <output-folder-path>\n          The output folder path where the artifact will be stored.\n      --chain-id <chain-id>\n          The chain ID.\n      --gas-payer <gas-payer>\n          The implicit address of the gas payer. It defaults to the address associated to the first key passed to --signing-keys.\n      --use-device\n          Use an attached hardware wallet device to sign the transaction.\n      --memo <memo>\n          Attach a plaintext memo to the transaction.\n      --code-path <code-path>\n          The path to the transaction's WASM code.\n      --data-path <data-path>\n          The data file at this path containing arbitrary bytes will be passed to the transaction code when it's executed.\n      --tx-path <tx-path>\n          The path to a serialized transaction.\n      --owner <owner>\n          The address corresponding to the signatures or signing keys.\n  -h, --help\n          Print help",
  "namada transfer": "Send a signed transfer transaction.\n\nUsage: namada transfer [OPTIONS] --source <source> --target <target> --token <token> --amount <amount>\n\nOptions:\n      --dry-run\n          Simulate the transaction application.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --dry-run-wrapper\n          Simulate the complete transaction application. This estimates the gas cost of the transaction.\n      --dump-tx\n          Dump transaction bytes to a file.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --force\n          Submit the transaction even if it doesn't pass client checks.\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n      --broadcast-only\n          Do not wait for the transaction to be applied. This will return once the transaction is added to the mempool.\n      --node <node>\n          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --alias <alias>\n          If any new account is initialized by the tx, use the given alias to save it in the wallet. If multiple accounts are initialized, the alias will be the prefix of each new address joined with a number.\n      --gas-price <gas-price>\n          The amount being paid, per gas unit, for the inclusion of this transaction\n      --gas-token <gas-token>\n          The token for paying the gas\n      --gas-spending-key <gas-spending-key>\n          The spending key to be used for fee unshielding. If none is provided, fee will be paid from the unshielded balance only.\n      --gas-limit <gas-limit>\n          The multiplier of the gas limit resolution defining the maximum amount of gas needed to run transaction.\n      --wallet-alias-force\n          Override the alias without confirmation if it already exists.\n      --expiration <expiration>\n          The expiration datetime of the transaction, after which the tx won't be accepted anymore. All of these examples are equivalent:\n          2012-12-12T12:12:12Z\n          2012-12-12 12:12:12Z\n          2012-  12-12T12:  12:12Z\n      --disposable-gas-payer\n          Generates an ephemeral, disposable keypair to sign the wrapper transaction. This keypair will be immediately discarded after use.\n      --signing-keys <signing-keys>...\n          Sign the transaction with the key for the given public key, public key hash or alias from your wallet.\n      --signatures <signatures>...\n          List of file paths containing a serialized signature to be attached to a transaction. Requires to provide a gas payer.\n      --output-folder-path <output-folder-path>\n          The output folder path where the artifact will be stored.\n      --chain-id <chain-id>\n          The chain ID.\n      --gas-payer <gas-payer>\n          The implicit address of the gas payer. It defaults to the address associated to the first key passed to --signing-keys.\n      --use-device\n          Use an attached hardware wallet device to sign the transaction.\n      --memo <memo>\n          Attach a plaintext memo to the transaction.\n      --source <source>\n          The source account address. The source's key may be used to produce the signature.\n      --target <target>\n          The target account address. The target's key may be used to produce the signature.\n      --token <token>\n          The transfer token.\n      --amount <amount>\n          The amount to transfer in decimal.\n  -h, --help\n          Print help",
  "namada ibc-transfer": "Send a signed IBC transfer transaction.\n\nUsage: namada ibc-transfer [OPTIONS] --source <source> --receiver <receiver> --token <token> --amount <amount> --channel-id <channel-id>\n\nOptions:\n      --dry-run\n          Simulate the transaction application.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --dry-run-wrapper\n          Simulate the complete transaction application. This estimates the gas cost of the transaction.\n      --dump-tx\n          Dump transaction bytes to a file.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --force\n          Submit the transaction even if it doesn't pass client checks.\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n      --broadcast-only\n          Do not wait for the transaction to be applied. This will return once the transaction is added to the mempool.\n      --node <node>\n          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --alias <alias>\n          If any new account is initialized by the tx, use the given alias to save it in the wallet. If multiple accounts are initialized, the alias will be the prefix of each new address joined with a number.\n      --gas-price <gas-price>\n          The amount being paid, per gas unit, for the inclusion of this transaction\n      --gas-token <gas-token>\n          The token for paying the gas\n      --gas-spending-key <gas-spending-key>\n          The spending key to be used for fee unshielding. If none is provided, fee will be paid from the unshielded balance only.\n      --gas-limit <gas-limit>\n          The multiplier of the gas limit resolution defining the maximum amount of gas needed to run transaction.\n      --wallet-alias-force\n          Override the alias without confirmation if it already exists.\n      --expiration <expiration>\n          The expiration datetime of the transaction, after which the tx won't be accepted anymore. All of these examples are equivalent:\n          2012-12-12T12:12:12Z\n          2012-12-12 12:12:12Z\n          2012-  12-12T12:  12:12Z\n      --disposable-gas-payer\n          Generates an ephemeral, disposable keypair to sign the wrapper transaction. This keypair will be immediately discarded after use.\n      --signing-keys <signing-keys>...\n          Sign the transaction with the key for the given public key, public key hash or alias from your wallet.\n      --signatures <signatures>...\n          List of file paths containing a serialized signature to be attached to a transaction. Requires to provide a gas payer.\n      --output-folder-path <output-folder-path>\n          The output folder path where the artifact will be stored.\n      --chain-id <chain-id>\n          The chain ID.\n      --gas-payer <gas-payer>\n          The implicit address of the gas payer. It defaults to the address associated to the first key passed to --signing-keys.\n      --use-device\n          Use an attached hardware wallet device to sign the transaction.\n      --memo <memo>\n          Attach a plaintext memo to the transaction.\n      --source <source>\n          The source account address. The source's key is used to produce the signature.\n      --receiver <receiver>\n          The receiver address on the destination chain as string.\n      --token <token>\n          The transfer token.\n      --amount <amount>\n          The amount to transfer in decimal.\n      --port-id <port-id>\n          The port ID.\n      --channel-id <channel-id>\n          The channel ID.\n      --timeout-height <timeout-height>\n          The timeout height of the destination chain.\n      --timeout-sec-offset <timeout-sec-offset>\n          The timeout as seconds.\n      --memo-path <memo-path>\n          The path for the memo field of ICS20 transfer.\n  -h, --help\n          Print help",
  "namada update-account": "Send a signed transaction to update account's validity predicate.\n\nUsage: namada update-account [OPTIONS] --address <address>\n\nOptions:\n      --dry-run\n          Simulate the transaction application.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --dry-run-wrapper\n          Simulate the complete transaction application. This estimates the gas cost of the transaction.\n      --dump-tx\n          Dump transaction bytes to a file.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --force\n          Submit the transaction even if it doesn't pass client checks.\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n      --broadcast-only\n          Do not wait for the transaction to be applied. This will return once the transaction is added to the mempool.\n      --node <node>\n          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --alias <alias>\n          If any new account is initialized by the tx, use the given alias to save it in the wallet. If multiple accounts are initialized, the alias will be the prefix of each new address joined with a number.\n      --gas-price <gas-price>\n          The amount being paid, per gas unit, for the inclusion of this transaction\n      --gas-token <gas-token>\n          The token for paying the gas\n      --gas-spending-key <gas-spending-key>\n          The spending key to be used for fee unshielding. If none is provided, fee will be paid from the unshielded balance only.\n      --gas-limit <gas-limit>\n          The multiplier of the gas limit resolution defining the maximum amount of gas needed to run transaction.\n      --wallet-alias-force\n          Override the alias without confirmation if it already exists.\n      --expiration <expiration>\n          The expiration datetime of the transaction, after which the tx won't be accepted anymore. All of these examples are equivalent:\n          2012-12-12T12:12:12Z\n          2012-12-12 12:12:12Z\n          2012-  12-12T12:  12:12Z\n      --disposable-gas-payer\n          Generates an ephemeral, disposable keypair to sign the wrapper transaction. This keypair will be immediately discarded after use.\n      --signing-keys <signing-keys>...\n          Sign the transaction with the key for the given public key, public key hash or alias from your wallet.\n      --signatures <signatures>...\n          List of file paths containing a serialized signature to be attached to a transaction. Requires to provide a gas payer.\n      --output-folder-path <output-folder-path>\n          The output folder path where the artifact will be stored.\n      --chain-id <chain-id>\n          The chain ID.\n      --gas-payer <gas-payer>\n          The implicit address of the gas payer. It defaults to the address associated to the first key passed to --signing-keys.\n      --use-device\n          Use an attached hardware wallet device to sign the transaction.\n      --memo <memo>\n          Attach a plaintext memo to the transaction.\n      --code-path <code-path>\n          The path to the new validity predicate WASM code.\n      --address <address>\n          The account's address. It's key is used to produce the signature.\n      --public-keys <public-keys>...\n          A list public keys to be associated with the new account in hexadecimal encoding.\n      --threshold <threshold>\n          The minimum number of signature to be provided for authorization. Must be less then the maximum number of public keys provided.\n  -h, --help\n          Print help",
  "namada init-proposal": "Create a new proposal.\n\nUsage: namada init-proposal [OPTIONS] --data-path <data-path>\n\nOptions:\n      --dry-run\n          Simulate the transaction application.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --dry-run-wrapper\n          Simulate the complete transaction application. This estimates the gas cost of the transaction.\n      --dump-tx\n          Dump transaction bytes to a file.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --force\n          Submit the transaction even if it doesn't pass client checks.\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n      --broadcast-only\n          Do not wait for the transaction to be applied. This will return once the transaction is added to the mempool.\n      --node <node>\n          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --alias <alias>\n          If any new account is initialized by the tx, use the given alias to save it in the wallet. If multiple accounts are initialized, the alias will be the prefix of each new address joined with a number.\n      --gas-price <gas-price>\n          The amount being paid, per gas unit, for the inclusion of this transaction\n      --gas-token <gas-token>\n          The token for paying the gas\n      --gas-spending-key <gas-spending-key>\n          The spending key to be used for fee unshielding. If none is provided, fee will be paid from the unshielded balance only.\n      --gas-limit <gas-limit>\n          The multiplier of the gas limit resolution defining the maximum amount of gas needed to run transaction.\n      --wallet-alias-force\n          Override the alias without confirmation if it already exists.\n      --expiration <expiration>\n          The expiration datetime of the transaction, after which the tx won't be accepted anymore. All of these examples are equivalent:\n          2012-12-12T12:12:12Z\n          2012-12-12 12:12:12Z\n          2012-  12-12T12:  12:12Z\n      --disposable-gas-payer\n          Generates an ephemeral, disposable keypair to sign the wrapper transaction. This keypair will be immediately discarded after use.\n      --signing-keys <signing-keys>...\n          Sign the transaction with the key for the given public key, public key hash or alias from your wallet.\n      --signatures <signatures>...\n          List of file paths containing a serialized signature to be attached to a transaction. Requires to provide a gas payer.\n      --output-folder-path <output-folder-path>\n          The output folder path where the artifact will be stored.\n      --chain-id <chain-id>\n          The chain ID.\n      --gas-payer <gas-payer>\n          The implicit address of the gas payer. It defaults to the address associated to the first key passed to --signing-keys.\n      --use-device\n          Use an attached hardware wallet device to sign the transaction.\n      --memo <memo>\n          Attach a plaintext memo to the transaction.\n      --data-path <data-path>\n          The data path file (json) that describes the proposal.\n      --offline\n          Flag if the proposal should be serialized offline (only for default types).\n      --eth\n          Flag if the proposal is of type eth.\n      --pgf-stewards\n          Flag if the proposal is of type pgf-stewards. Used to elect/remove stewards.\n      --pgf-funding\n          Flag if the proposal is of type pgf-funding. Used to control continuous/retro pgf fundings.\n  -h, --help\n          Print help",
  "namada vote-proposal": "Vote a proposal.\n\nUsage: namada vote-proposal [OPTIONS] --vote <vote> --address <address>\n\nOptions:\n      --dry-run\n          Simulate the transaction application.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --dry-run-wrapper\n          Simulate the complete transaction application. This estimates the gas cost of the transaction.\n      --dump-tx\n          Dump transaction bytes to a file.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --force\n          Submit the transaction even if it doesn't pass client checks.\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n      --broadcast-only\n          Do not wait for the transaction to be applied. This will return once the transaction is added to the mempool.\n      --node <node>\n          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --alias <alias>\n          If any new account is initialized by the tx, use the given alias to save it in the wallet. If multiple accounts are initialized, the alias will be the prefix of each new address joined with a number.\n      --gas-price <gas-price>\n          The amount being paid, per gas unit, for the inclusion of this transaction\n      --gas-token <gas-token>\n          The token for paying the gas\n      --gas-spending-key <gas-spending-key>\n          The spending key to be used for fee unshielding. If none is provided, fee will be paid from the unshielded balance only.\n      --gas-limit <gas-limit>\n          The multiplier of the gas limit resolution defining the maximum amount of gas needed to run transaction.\n      --wallet-alias-force\n          Override the alias without confirmation if it already exists.\n      --expiration <expiration>\n          The expiration datetime of the transaction, after which the tx won't be accepted anymore. All of these examples are equivalent:\n          2012-12-12T12:12:12Z\n          2012-12-12 12:12:12Z\n          2012-  12-12T12:  12:12Z\n      --disposable-gas-payer\n          Generates an ephemeral, disposable keypair to sign the wrapper transaction. This keypair will be immediately discarded after use.\n      --signing-keys <signing-keys>...\n          Sign the transaction with the key for the given public key, public key hash or alias from your wallet.\n      --signatures <signatures>...\n          List of file paths containing a serialized signature to be attached to a transaction. Requires to provide a gas payer.\n      --output-folder-path <output-folder-path>\n          The output folder path where the artifact will be stored.\n      --chain-id <chain-id>\n          The chain ID.\n      --gas-payer <gas-payer>\n          The implicit address of the gas payer. It defaults to the address associated to the first key passed to --signing-keys.\n      --use-device\n          Use an attached hardware wallet device to sign the transaction.\n      --memo <memo>\n          Attach a plaintext memo to the transaction.\n      --proposal-id <proposal-id>\n          The proposal identifier.\n      --vote <vote>\n          The vote for the proposal. Either yay, nay, or abstain.\n      --offline\n          Flag if the proposal vote should run offline.\n      --data-path <data-path>\n          The data path file (json) that describes the proposal.\n      --address <address>\n          The address of the voter.\n  -h, --help\n          Print help",
  "namada reveal-pk": "Submit a tx to reveal the public key an implicit account. Typically, you don't have to do this manually and the client will detect when a tx to reveal PK is needed and submit it automatically. This will write the PK into the account's storage so that it can be used for signature verification on transactions authorized by this account.\n\nUsage: namada reveal-pk [OPTIONS] --public-key <public-key>\n\nOptions:\n      --dry-run\n          Simulate the transaction application.\n      --base-dir <base-dir>\n          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\\Namada` on Windows.\n      --dry-run-wrapper\n          Simulate the complete transaction application. This estimates the gas cost of the transaction.\n      --dump-tx\n          Dump transaction bytes to a file.\n      --wasm-dir <wasm-dir>\n          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.\n      --force\n          Submit the transaction even if it doesn't pass client checks.\n      --pre-genesis\n          Dispatch pre-genesis specific logic.\n      --broadcast-only\n          Do not wait for the transaction to be applied. This will return once the transaction is added to the mempool.\n      --node <node>\n          Address of a ledger node as \"{scheme}://{host}:{port}\". If the scheme is not supplied, it is assumed to be TCP.\n      --alias <alias>\n          If any new account is initialized by the tx, use the given alias to save it in the wallet. If multiple accounts are initialized, the alias will be the prefix of each new address joined with a number.\n      --gas-price <gas-price>\n          The amount being paid, per gas unit, for the inclusion of this transaction\n      --gas-token <gas-token>\n          The token for paying the gas\n      --gas-spending-key <gas-spending-key>\n          The spending key to be used for fee unshielding. If none is provided, fee will be paid from the unshielded balance only.\n      --gas-limit <gas-limit>\n          The multiplier of the gas limit resolution defining the maximum amount of gas needed to run transaction.\n      --wallet-alias-force\n          Override the alias without confirmation if it already exists.\n      --expiration <expiration>\n          The expiration datetime of the transaction, after which the tx won't be accepted anymore. All of these examples are equivalent:\n          2012-12-12T12:12:12Z\n          2012-12-12 12:12:12Z\n          2012-  12-12T12:  12:12Z\n      --disposable-gas-payer\n          Generates an ephemeral, disposable keypair to sign the wrapper transaction. This keypair will be immediately discarded after use.\n      --signing-keys <signing-keys>...\n          Sign the transaction with the key for the given public key, public key hash or alias from your wallet.\n      --signatures <signatures>...\n          List of file paths containing a serialized signature to be attached to a transaction. Requires to provide a gas payer.\n      --output-folder-path <output-folder-path>\n          The output folder path where the artifact will be stored.\n      --chain-id <chain-id>\n          The chain ID.\n      --gas-payer <gas-payer>\n          The implicit address of the gas payer. It defaults to the address associated to the first key passed to --signing-keys.\n      --use-device\n          Use an attached hardware wallet device to sign the transaction.\n      --memo <memo>\n          Attach a plaintext memo to the transaction.\n      --public-key <public-key>\n          A public key to reveal.\n  -h, --help\n          Print help",
  "osmosisd": "Start osmosis app\n\nUsage:\n  osmosisd [command]\n\nAvailable Commands:\n  add-genesis-account     Add a genesis account to genesis.json\n  collect-gentxs          Collect genesis txs and output a genesis.json file\n  config                  Create or query an application CLI configuration file\n  debug                   Tool for helping with debugging your application\n  enable-cli-autocomplete Generates cli completion scripts\n  export                  Export state to JSON\n  export-derive-balances  Export a derive balances from a provided genesis export\n  forceprune              Forceprune option prunes and compacts blockstore.db and state.db.\n  gentx                   Generate a genesis tx carrying a self delegation\n  get-env                 Prints the current environment\n  help                    Help about any command\n  in-place-testnet        Create and start a testnet from current local state\n  init                    Initialize private validator, p2p, genesis, and application configuration files\n  keys                    Manage your application's keys\n  list-env                listing all available environments.\n  migrate                 Migrate genesis to a specified target version\n  prepare-genesis         Prepare a genesis file with initial setup\n  query                   Querying subcommands\n  rollback                rollback cosmos-sdk and tendermint state by one height\n  rosetta                 spin up a rosetta server\n  set-env                 Set home environment variables for commands\n  staked-to-csv           Export a airdrop csv from a provided balances export\n  start                   Run the full node\n  status                  Query remote node for status\n  tendermint              Tendermint subcommands\n  testnet                 Initialize files for a simapp testnet\n  tx                      Transactions subcommands\n  update-asset-list       Updates asset list used by the CLI to replace ibc denoms with human readable names\n  validate-genesis        validates the genesis file at the default location or at the location passed as an arg\n  version                 Print the application binary version information\n\nFlags:\n  -h, --help                help for osmosisd\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd [command] --help\" for more information about a command.",
  "osmosisd add-genesis-account": "Add a genesis account to genesis.json. The provided account must specify\nthe account address or key name and a list of initial coins. If a key name is given,\nthe address will be looked up in the local Keybase. The list of initial tokens must\ncontain valid denominations. Accounts may optionally be supplied with vesting parameters.\n\nUsage:\n  osmosisd add-genesis-account [address_or_key_name] [coin][,[coin]] [flags]\n\nFlags:\n      --grpc-addr string         the gRPC endpoint to use for this chain\n      --grpc-insecure            allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int               Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help                     help for add-genesis-account\n      --home string              The application home directory (default \"/home/ubuntu/.osmosisd\")\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test) (default \"os\")\n      --node string              <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string            Output format (text|json) (default \"text\")\n      --vesting-amount string    amount of coins for vesting accounts\n      --vesting-end-time int     schedule end time (unix epoch) for vesting accounts\n      --vesting-start-time int   schedule start time (unix epoch) for vesting accounts\n\nGlobal Flags:\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd collect-gentxs": "Collect genesis txs and output a genesis.json file\n\nUsage:\n  osmosisd collect-gentxs [flags]\n\nFlags:\n      --gentx-dir string   override default \"gentx\" directory from which collect and execute genesis transactions; default [--home]/config/gentx/\n  -h, --help               help for collect-gentxs\n      --home string        The application home directory (default \"/home/ubuntu/.osmosisd\")\n\nGlobal Flags:\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd config": "Create or query an application CLI configuration file\n\nUsage:\n  osmosisd config <key> [value] [flags]\n\nFlags:\n  -h, --help   help for config\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd debug": "Tool for helping with debugging your application\n\nUsage:\n  osmosisd debug [flags]\n  osmosisd debug [command]\n\nAvailable Commands:\n  addr                   Convert an address between hex and bech32\n  bech32-convert         Convert any bech32 string to the osmo prefix\n  prefixes               List prefixes used for Human-Readable Part (HRP) in Bech32\n  proto-marshalled-bytes Convert request proto struct into proto marhsalled bytes \n  pubkey                 Decode a pubkey from proto JSON\n  pubkey-raw             Decode a ED25519 or secp256k1 pubkey from hex, base64, or bech32\n  raw-bytes              Convert raw bytes output (eg. [10 21 13 255]) to hex\n\nFlags:\n  -h, --help   help for debug\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd debug [command] --help\" for more information about a command.",
  "osmosisd debug addr": "Convert an address between hex encoding and bech32.\n\nExample:\n$ osmosisd debug addr cosmos1e0jnq2sun3dzjh8p2xq95kk0expwmd7shwjpfg\n\nUsage:\n  osmosisd debug addr [address] [flags]\n\nFlags:\n  -h, --help   help for addr\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd debug bech32-convert": "Convert any bech32 string to the osmo prefix\nEspecially useful for converting cosmos addresses to osmo addresses\n\nExample:\n\tosmosisd bech32-convert cosmos1ey69r37gfxvxg62sh4r0ktpuc46pzjrmz29g45\n\nUsage:\n  osmosisd debug bech32-convert [bech32 string] [flags]\n\nFlags:\n  -h, --help            help for bech32-convert\n  -p, --prefix string   Bech32 Prefix to encode to (default \"osmo\")\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd debug prefixes": "List prefixes used in Bech32 addresses.\n\nUsage:\n  osmosisd debug prefixes [flags]\n\nExamples:\n$ osmosisd debug prefixes\n\nFlags:\n  -h, --help   help for prefixes\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd debug proto-marshalled-bytes": "Convert request proto struct into proto marshalled bytes.\nEspecially useful when debugging proto marshalled bytes or debugging stargate queries\n\nExample:\n\tosmosisd debug proto-marshalled-bytes \"/cosmos.bank.v1beta1.Query/Balance\" bank QueryBalanceRequest \"osmo1t7egva48prqmzl59x5ngv4zx0dtrwewc9m7z44\" stake\n\nUsage:\n  osmosisd debug proto-marshalled-bytes [query-path] [module] [struct-name] [struct-arguments...] [flags]\n\nFlags:\n  -h, --help   help for proto-marshalled-bytes\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd debug pubkey": "Decode a pubkey from proto JSON and display it's address.\n\nExample:\n$ osmosisd debug pubkey '{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AurroA7jvfPd1AadmmOvWM2rJSwipXfRf8yD6pLbA2DJ\"}'\n\nUsage:\n  osmosisd debug pubkey [pubkey] [flags]\n\nFlags:\n  -h, --help   help for pubkey\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd debug pubkey-raw": "Decode a pubkey from hex, base64, or bech32.\nExample:\n$ osmosisd debug pubkey-raw TWFuIGlzIGRpc3Rpbmd1aXNoZWQsIG5vdCBvbmx5IGJ5IGhpcyByZWFzb24sIGJ1dCBieSB0aGlz\n$ osmosisd debug pubkey-raw cosmos1e0jnq2sun3dzjh8p2xq95kk0expwmd7shwjpfg\n\nUsage:\n  osmosisd debug pubkey-raw [pubkey] -t [{ed25519, secp256k1}] [flags]\n\nFlags:\n  -h, --help          help for pubkey-raw\n  -t, --type string   Pubkey type to decode (oneof secp256k1, ed25519) (default \"ed25519\")\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd debug raw-bytes": "Convert raw-bytes to hex.\n\nExample:\n$ osmosisd debug raw-bytes [72 101 108 108 111 44 32 112 108 97 121 103 114 111 117 110 100]\n\nUsage:\n  osmosisd debug raw-bytes [raw-bytes] [flags]\n\nFlags:\n  -h, --help   help for raw-bytes\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd enable-cli-autocomplete": "To configure your shell to load completions for each session, add to your profile:\n\n# bash example\necho '. <(osmosisd enable-cli-autocomplete bash)' >> ~/.bash_profile\nsource ~/.bash_profile\n\n# zsh example\necho '. <(osmosisd enable-cli-autocomplete zsh)' >> ~/.zshrc\nsource ~/.zshrc\n\nUsage:\n  osmosisd enable-cli-autocomplete [bash|zsh|fish|powershell]\n\nFlags:\n  -h, --help   help for enable-cli-autocomplete\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd export": "Export state to JSON\n\nUsage:\n  osmosisd export [flags]\n\nFlags:\n      --for-zero-height              Export state to start at height zero (perform preproccessing)\n      --height int                   Export state from a particular height (-1 means latest height) (default -1)\n  -h, --help                         help for export\n      --home string                  The application home directory (default \"/home/ubuntu/.osmosisd\")\n      --jail-allowed-addrs strings   Comma-separated list of operator addresses of jailed validators to unjail\n      --modules-to-export strings    Comma-separated list of modules to export. If empty, will export all modules\n      --output-document string       Exported state is written to the given file instead of STDOUT\n\nGlobal Flags:\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd export-derive-balances": "Export a derive balances from a provided genesis export\nExample:\n\tosmosisd export-derive-balances ../genesis.json ../snapshot.json\n\nUsage:\n  osmosisd export-derive-balances [input-genesis-file] [output-snapshot-json] [flags]\n\nFlags:\n      --breakdown-by-pool-ids string   Output a special breakdown for amount LP'd to the provided pools. Usage --breakdown-by-pool-ids=1,2,605\n  -h, --help                           help for export-derive-balances\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd forceprune": "Forceprune option prunes and compacts blockstore.db and state.db. One needs to shut down chain before running forceprune. By default it keeps last 188000 blocks (approximately 2 weeks of data) blockstore and state db (validator and consensus information) and 1000 blocks of abci responses from state.db. Everything beyond these heights in blockstore and state.db is pruned. ABCI Responses are stored in index db and so redundant especially if one is running pruned nodes. As a result we are removing ABCI data from state.db aggressively by default. One can override height for blockstore.db and state.db by using -f option and for abci response by using -m option. \nExample:\n\tosmosisd forceprune -f 188000 -m 1000,\nwhich would keep blockchain and state data of last 188000 blocks (approximately 2 weeks) and ABCI responses of last 1000 blocks.\n\nUsage:\n  osmosisd forceprune [flags]\n\nFlags:\n  -f, --full_height string   Full height to chop to (default \"188000\")\n  -h, --help                 help for forceprune\n  -m, --min_height string    Min height for ABCI to chop to (default \"1000\")\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd gentx": "Generate a genesis transaction that creates a validator with a self-delegation,\nthat is signed by the key in the Keyring referenced by a given name. A node ID and Bech32 consensus\npubkey may optionally be provided. If they are omitted, they will be retrieved from the priv_validator.json\nfile. The following default parameters are included:\n    \n\tdelegation amount:           100000000stake\n\tcommission rate:             0.1\n\tcommission max rate:         0.2\n\tcommission max change rate:  0.01\n\tminimum self delegation:     1\n\n\nExample:\n$ osmosisd gentx my-key-name 1000000stake --home=/path/to/home/dir --keyring-backend=os --chain-id=test-chain-1 \\\n    --moniker=\"myvalidator\" \\\n    --commission-max-change-rate=0.01 \\\n    --commission-max-rate=1.0 \\\n    --commission-rate=0.07 \\\n    --details=\"...\" \\\n    --security-contact=\"...\" \\\n    --website=\"...\"\n\nUsage:\n  osmosisd gentx [key_name] [amount] [flags]\n\nFlags:\n  -a, --account-number uint                 The account number of the signing account (offline mode only)\n      --amount string                       Amount of coins to bond\n      --aux                                 Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string               Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string                     The network chain ID\n      --commission-max-change-rate string   The maximum commission change rate percentage (per day)\n      --commission-max-rate string          The maximum commission rate percentage\n      --commission-rate string              The initial commission rate percentage\n      --details string                      The validator's (optional) details\n      --dry-run                             ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string                  Fee granter grants fees for the transaction\n      --fee-payer string                    Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string                         Fees to pay along with transaction; eg: 10uatom\n      --from string                         Name or address of private key with which to sign\n      --gas string                          gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float                adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string                   Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only                       Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                                help for gentx\n      --home string                         The application home directory (default \"/home/ubuntu/.osmosisd\")\n      --identity string                     The (optional) identity signature (ex. UPort or Keybase)\n      --ip string                           The node's public P2P IP (default \"141.94.243.95\")\n      --keyring-backend string              Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string                  The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                              Use a connected Ledger device\n      --min-self-delegation string          The minimum self delegation required on the validator\n      --moniker string                      The validator's (optional) moniker\n      --node string                         <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --node-id string                      The node's NodeID\n      --note string                         Note to add a description to the transaction (previously --memo)\n      --offline                             Offline mode (does not allow any online functionality)\n      --output-document string              Write the genesis transaction JSON document to the given file instead of the default location\n      --p2p-port uint                       The node's public P2P port (default 26656)\n      --pubkey string                       The validator's Protobuf JSON encoded public key\n      --security-contact string             The validator's (optional) security contact email\n  -s, --sequence uint                       The sequence number of the signing account (offline mode only)\n      --sign-mode string                    Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint                 Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string                          Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --website string                      The validator's (optional) website\n  -y, --yes                                 Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd get-env": "Prints the current environment\nExample:\n\tosmosisd get-env'\n\n\tReturns one of:\n\t- mainnet implying $HOME/.osmosisd\n\t- testnet implying $HOME/.osmosisd-test\n\t- localosmosis implying $HOME/.osmosisd-local\n\t- custom path\n\nUsage:\n  osmosisd get-env [flags]\n\nFlags:\n  -h, --help   help for get-env\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd in-place-testnet": "Create and start a testnet from current local state.\nAfter utilizing this command the network will start. If the network is stopped,\nthe normal \"start\" command should be used. Re-using this command on state that\nhas already been modified by this command could result in unexpected behavior.\n\nAdditionally, the first block may take up to one minute to be committed, depending\non how old the block is. For instance, if a snapshot was taken weeks ago and we want\nto turn this into a testnet, it is possible lots of pending state needs to be committed\n(expiring locks, etc.). It is recommended that you should wait for this block to be committed\nbefore stopping the daemon.\n\nIf the --trigger-testnet-upgrade flag is set, the upgrade handler specified by the flag will be run\non the first block of the testnet.\n\nRegardless of whether the flag is set or not, if any new stores are introduced in the daemon being run,\nthose stores will be registered in order to prevent panics. Therefore, you only need to set the flag if\nyou want to test the upgrade handler itself.\n\nUsage:\n  osmosisd in-place-testnet [newChainID] [newOperatorAddress] [flags]\n\nExamples:\nin-place-testnet localosmosis osmo12smx2wdlyttvyzvzg54y2vnqwq2qjateuf7thj\n\nFlags:\n      --abci string                                     specify abci transport (socket | grpc) (default \"socket\")\n      --address string                                  Listen address (default \"tcp://0.0.0.0:26658\")\n      --api.address string                              the API server address to listen on (default \"tcp://localhost:1317\")\n      --api.enable                                      Define if the API server should be enabled\n      --api.enabled-unsafe-cors                         Define if CORS should be enabled (unsafe - use it at your own risk)\n      --api.max-open-connections uint                   Define the number of maximum open connections (default 1000)\n      --api.rpc-max-body-bytes uint                     Define the Tendermint maximum request body (in bytes) (default 1000000)\n      --api.rpc-read-timeout uint                       Define the Tendermint RPC read timeout (in seconds) (default 10)\n      --api.rpc-write-timeout uint                      Define the Tendermint RPC write timeout (in seconds)\n      --api.swagger                                     Define if swagger documentation should automatically be registered (Note: the API must also be enabled)\n      --block_sync                                      sync the block chain using the blocksync algorithm (default true)\n      --consensus.create_empty_blocks                   set this to false to only produce blocks when there are txs or when the AppHash changes (default true)\n      --consensus.create_empty_blocks_interval string   the possible interval between empty blocks (default \"0s\")\n      --consensus.double_sign_check_height int          how many blocks to look back to check existence of the node's consensus votes before joining consensus\n      --cpu-profile string                              Enable CPU profiling and write to the provided file\n      --db_backend string                               database backend: goleveldb | cleveldb | boltdb | rocksdb | badgerdb (default \"goleveldb\")\n      --db_dir string                                   database directory (default \"data\")\n      --genesis_hash bytesHex                           optional SHA-256 hash of the genesis file\n      --grpc-only                                       Start the node in gRPC query only mode (no Tendermint process is started)\n      --grpc-web.address string                         The gRPC-Web server address to listen on (default \"localhost:9091\")\n      --grpc-web.enable                                 Define if the gRPC-Web server should be enabled. (Note: gRPC must also be enabled) (default true)\n      --grpc.address string                             the gRPC server address to listen on (default \"localhost:9090\")\n      --grpc.enable                                     Define if the gRPC server should be enabled (default true)\n      --halt-height uint                                Block height at which to gracefully halt the chain and shutdown the node\n      --halt-time uint                                  Minimum block time (in Unix seconds) at which to gracefully halt the chain and shutdown the node\n  -h, --help                                            help for in-place-testnet\n      --home string                                     The application home directory (default \"/home/ubuntu/.osmosisd\")\n      --iavl-disable-fastnode                           Disable fast node for IAVL tree\n      --inter-block-cache                               Enable inter-block caching (default true)\n      --inv-check-period uint                           Assert registered invariants every N blocks\n      --mempool.max-txs int                             Sets MaxTx value for the app-side mempool\n      --min-retain-blocks uint                          Minimum block height offset during ABCI commit to prune Tendermint blocks\n      --minimum-gas-prices string                       Minimum gas prices to accept for transactions; Any fee in a tx must meet this minimum (e.g. 0.01photino;0.0001stake)\n      --moniker string                                  node name (default \"pistachio\")\n      --p2p.external-address string                     ip:port address to advertise to peers for them to dial\n      --p2p.laddr string                                node listen address. (0.0.0.0:0 means any interface, any port) (default \"tcp://0.0.0.0:26656\")\n      --p2p.persistent_peers string                     comma-delimited ID@host:port persistent peers\n      --p2p.pex                                         enable/disable Peer-Exchange (default true)\n      --p2p.private_peer_ids string                     comma-delimited private peer IDs\n      --p2p.seed_mode                                   enable/disable seed mode\n      --p2p.seeds string                                comma-delimited ID@host:port seed nodes\n      --p2p.unconditional_peer_ids string               comma-delimited IDs of unconditional peers\n      --priv_validator_laddr string                     socket address to listen on for connections from external priv_validator process\n      --proxy_app string                                proxy app address, or one of: 'kvstore', 'persistent_kvstore' or 'noop' for local testing. (default \"tcp://127.0.0.1:26658\")\n      --pruning string                                  Pruning strategy (default|nothing|everything|custom) (default \"default\")\n      --pruning-interval uint                           Height interval at which pruned heights are removed from disk (ignored if pruning is not 'custom')\n      --pruning-keep-recent uint                        Number of recent heights to keep on disk (ignored if pruning is not 'custom')\n      --rpc.grpc_laddr string                           GRPC listen address (BroadcastTx only). Port required\n      --rpc.laddr string                                RPC listen address. Port required (default \"tcp://127.0.0.1:26657\")\n      --rpc.pprof_laddr string                          pprof listen address (https://golang.org/pkg/net/http/pprof)\n      --rpc.unsafe                                      enabled unsafe rpc methods\n      --skip-confirmation                               Skip the confirmation prompt\n      --state-sync.snapshot-interval uint               State sync snapshot interval\n      --state-sync.snapshot-keep-recent uint32          State sync snapshot to keep (default 2)\n      --trace                                           Provide full stack traces for errors in ABCI Log\n      --trace-store string                              Enable KVStore tracing to an output file\n      --transport string                                Transport protocol: socket, grpc (default \"socket\")\n      --trigger-testnet-upgrade string                  If set (example: \"v21\"), triggers the v21 upgrade handler to run on the first block of the testnet\n      --unsafe-skip-upgrades ints                       Skip a set of upgrade heights to continue the old binary\n      --wasm.memory_cache_size uint32                   Sets the size in MiB (NOT bytes) of an in-memory cache for Wasm modules. Set to 0 to disable. (default 1000)\n      --wasm.query_gas_limit uint                       Set the max gas that can be spent on executing a query with a Wasm contract (default 3000000)\n      --wasm.simulation_gas_limit string                Set the max gas that can be spent when executing a simulation TX\n      --wasm.skip_wasmvm_version_check                  Skip check that ensures that libwasmvm version (the Rust project) and wasmvm version (the Go project) match\n      --with-tendermint                                 Run abci app embedded in-process with tendermint (default true)\n      --x-crisis-skip-assert-invariants                 Skip x/crisis invariants check on startup\n\nGlobal Flags:\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")",
  "osmosisd init": "Initialize validators's and node's configuration files.\n\nUsage:\n  osmosisd init [moniker] [flags]\n\nFlags:\n      --chain-id string   genesis file chain-id, if left blank will be randomly created\n  -h, --help              help for init\n      --home string       node's home directory (default \"/home/ubuntu/.osmosisd\")\n  -o, --overwrite         overwrite the genesis.json file\n      --recover           provide seed phrase to recover existing key instead of creating\n      --set-env           set and save current directory as home directory\n\nGlobal Flags:\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd keys": "Keyring management commands. These keys may be in any format supported by the\nTendermint crypto library and can be used by light-clients, full nodes, or any other application\nthat needs to sign with a private key.\n\nThe keyring supports the following backends:\n\n    os          Uses the operating system's default credentials store.\n    file        Uses encrypted file-based keystore within the app's configuration directory.\n                This keyring will request a password each time it is accessed, which may occur\n                multiple times in a single command resulting in repeated password prompts.\n    kwallet     Uses KDE Wallet Manager as a credentials management application.\n    pass        Uses the pass command line utility to store and retrieve keys.\n    test        Stores keys insecurely to disk. It does not prompt for a password to be unlocked\n                and it should be use only for testing purposes.\n\nkwallet and pass backends depend on external tools. Refer to their respective documentation for more\ninformation:\n    KWallet     https://github.com/KDE/kwallet\n    pass        https://www.passwordstore.org/\n\nThe pass backend requires GnuPG: https://gnupg.org/\n\nUsage:\n  osmosisd keys [command]\n\nAvailable Commands:\n  add            Add an encrypted private key (either newly generated or recovered), encrypt it, and save to <name> file\n  delete         Delete the given keys\n  export         Export private keys\n  import         Import private keys into the local keybase\n  import-hex     Import private keys into the local keybase\n  list           List all keys\n  list-key-types List all key types\n  migrate        Migrate keys from amino to proto serialization format\n  mnemonic       Compute the bip39 mnemonic for some input entropy\n  parse          Parse address from hex to bech32 and vice versa\n  rename         Rename an existing key\n  show           Retrieve key information by name or address\n\nFlags:\n  -h, --help                     help for keys\n      --home string              The application home directory (default \"/home/ubuntu/.osmosisd\")\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --output string            Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd keys [command] --help\" for more information about a command.",
  "osmosisd keys add": "Derive a new private key and encrypt to disk.\nOptionally specify a BIP39 mnemonic, a BIP39 passphrase to further secure the mnemonic,\nand a bip32 HD path to derive a specific account. The key will be stored under the given name\nand encrypted with the given password. The only input that is required is the encryption password.\n\nIf run with -i, it will prompt the user for BIP44 path, BIP39 mnemonic, and passphrase.\nThe flag --recover allows one to recover a key from a seed passphrase.\nIf run with --dry-run, a key would be generated (or recovered) but not stored to the\nlocal keystore.\nUse the --pubkey flag to add arbitrary public keys to the keystore for constructing\nmultisig transactions.\n\nYou can create and store a multisig key by passing the list of key names stored in a keyring\nand the minimum number of signatures required through --multisig-threshold. The keys are\nsorted by address, unless the flag --nosort is set.\nExample:\n\n    keys add mymultisig --multisig \"keyname1,keyname2,keyname3\" --multisig-threshold 2\n\nUsage:\n  osmosisd keys add <name> [flags]\n\nFlags:\n      --account uint32           Account number for HD derivation (less than equal 2147483647)\n      --coin-type uint32         coin type number for HD derivation (default 118)\n      --dry-run                  Perform action, but don't add key to local keystore\n      --hd-path string           Manual HD Path derivation (overrides BIP44 config)\n  -h, --help                     help for add\n      --index uint32             Address index number for HD derivation (less than equal 2147483647)\n  -i, --interactive              Interactively prompt user for BIP39 passphrase and mnemonic\n      --key-type string          Key signing algorithm to generate keys for (default \"secp256k1\")\n      --ledger                   Store a local reference to a private key on a Ledger device\n      --multisig strings         List of key names stored in keyring to construct a public legacy multisig key\n      --multisig-threshold int   K out of N required signatures. For use in conjunction with --multisig (default 1)\n      --no-backup                Don't print out seed phrase (if others are watching the terminal)\n      --nosort                   Keys passed to --multisig are taken in the order they're supplied\n      --pubkey string            Parse a public key in JSON format and saves key info to <name> file.\n      --recover                  Provide seed phrase to recover existing key instead of creating\n\nGlobal Flags:\n      --home string              The application home directory (default \"/home/ubuntu/.osmosisd\")\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --log_format string        The logging format (json|plain) (default \"plain\")\n      --log_level string         The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --output string            Output format (text|json) (default \"text\")\n      --trace                    print out full stack trace on errors",
  "osmosisd keys delete": "Delete keys from the Keybase backend.\n\nNote that removing offline or ledger keys will remove\nonly the public key references stored locally, i.e.\nprivate keys stored in a ledger device cannot be deleted with the CLI.\n\nUsage:\n  osmosisd keys delete <name>... [flags]\n\nFlags:\n  -f, --force   Remove the key unconditionally without asking for the passphrase. Deprecated.\n  -h, --help    help for delete\n  -y, --yes     Skip confirmation prompt when deleting offline or ledger key references\n\nGlobal Flags:\n      --home string              The application home directory (default \"/home/ubuntu/.osmosisd\")\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --log_format string        The logging format (json|plain) (default \"plain\")\n      --log_level string         The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --output string            Output format (text|json) (default \"text\")\n      --trace                    print out full stack trace on errors",
  "osmosisd keys export": "Export a private key from the local keyring in ASCII-armored encrypted format.\n\nWhen both the --unarmored-hex and --unsafe flags are selected, cryptographic\nprivate key material is exported in an INSECURE fashion that is designed to\nallow users to import their keys in hot wallets. This feature is for advanced\nusers only that are confident about how to handle private keys work and are\nFULLY AWARE OF THE RISKS. If you are unsure, you may want to do some research\nand export your keys in ASCII-armored encrypted format.\n\nUsage:\n  osmosisd keys export <name> [flags]\n\nFlags:\n  -h, --help            help for export\n      --unarmored-hex   Export unarmored hex privkey. Requires --unsafe.\n      --unsafe          Enable unsafe operations. This flag must be switched on along with all unsafe operation-specific options.\n\nGlobal Flags:\n      --home string              The application home directory (default \"/home/ubuntu/.osmosisd\")\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --log_format string        The logging format (json|plain) (default \"plain\")\n      --log_level string         The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --output string            Output format (text|json) (default \"text\")\n      --trace                    print out full stack trace on errors",
  "osmosisd keys import": "Import a ASCII armored private key into the local keybase.\n\nUsage:\n  osmosisd keys import <name> <keyfile> [flags]\n\nFlags:\n  -h, --help   help for import\n\nGlobal Flags:\n      --home string              The application home directory (default \"/home/ubuntu/.osmosisd\")\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --log_format string        The logging format (json|plain) (default \"plain\")\n      --log_level string         The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --output string            Output format (text|json) (default \"text\")\n      --trace                    print out full stack trace on errors",
  "osmosisd keys import-hex": "Import hex encoded private key into the local keybase.\nSupported key-types can be obtained with:\nosmosisd list-key-types\n\nUsage:\n  osmosisd keys import-hex <name> <hex> [flags]\n\nFlags:\n  -h, --help              help for import-hex\n      --key-type string   private key signing algorithm kind (default \"secp256k1\")\n\nGlobal Flags:\n      --home string              The application home directory (default \"/home/ubuntu/.osmosisd\")\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --log_format string        The logging format (json|plain) (default \"plain\")\n      --log_level string         The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --output string            Output format (text|json) (default \"text\")\n      --trace                    print out full stack trace on errors",
  "osmosisd keys list": "Return a list of all public keys stored by this key manager\nalong with their associated name and address.\n\nUsage:\n  osmosisd keys list [flags]\n\nFlags:\n  -h, --help         help for list\n  -n, --list-names   List names only\n\nGlobal Flags:\n      --home string              The application home directory (default \"/home/ubuntu/.osmosisd\")\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --log_format string        The logging format (json|plain) (default \"plain\")\n      --log_level string         The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --output string            Output format (text|json) (default \"text\")\n      --trace                    print out full stack trace on errors",
  "osmosisd keys list-key-types": "Return a list of all supported key types (also known as algos)\n\nUsage:\n  osmosisd keys list-key-types [flags]\n\nFlags:\n  -h, --help   help for list-key-types\n\nGlobal Flags:\n      --home string              The application home directory (default \"/home/ubuntu/.osmosisd\")\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --log_format string        The logging format (json|plain) (default \"plain\")\n      --log_level string         The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --output string            Output format (text|json) (default \"text\")\n      --trace                    print out full stack trace on errors",
  "osmosisd keys migrate": "Migrate keys from Amino to Protocol Buffers records.\nFor each key material entry, the command will check if the key can be deserialized using proto.\nIf this is the case, the key is already migrated. Therefore, we skip it and continue with a next one. \nOtherwise, we try to deserialize it using Amino into LegacyInfo. If this attempt is successful, we serialize \nLegacyInfo to Protobuf serialization format and overwrite the keyring entry. If any error occurred, it will be \noutputted in CLI and migration will be continued until all keys in the keyring DB are exhausted.\nSee https://github.com/cosmos/cosmos-sdk/pull/9695 for more details.\n\nIt is recommended to run in 'dry-run' mode first to verify all key migration material.\n\nUsage:\n  osmosisd keys migrate [flags]\n\nFlags:\n  -h, --help   help for migrate\n\nGlobal Flags:\n      --home string              The application home directory (default \"/home/ubuntu/.osmosisd\")\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --log_format string        The logging format (json|plain) (default \"plain\")\n      --log_level string         The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --output string            Output format (text|json) (default \"text\")\n      --trace                    print out full stack trace on errors",
  "osmosisd keys mnemonic": "Create a bip39 mnemonic, sometimes called a seed phrase, by reading from the system entropy. To pass your own entropy, use --unsafe-entropy\n\nUsage:\n  osmosisd keys mnemonic [flags]\n\nFlags:\n  -h, --help             help for mnemonic\n      --unsafe-entropy   Prompt the user to supply their own entropy, instead of relying on the system\n\nGlobal Flags:\n      --home string              The application home directory (default \"/home/ubuntu/.osmosisd\")\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --log_format string        The logging format (json|plain) (default \"plain\")\n      --log_level string         The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --output string            Output format (text|json) (default \"text\")\n      --trace                    print out full stack trace on errors",
  "osmosisd keys parse": "Convert and print to stdout key addresses and fingerprints from\nhexadecimal into bech32 cosmos prefixed format and vice versa.\n\nUsage:\n  osmosisd keys parse <hex-or-bech32-address> [flags]\n\nFlags:\n  -h, --help   help for parse\n\nGlobal Flags:\n      --home string              The application home directory (default \"/home/ubuntu/.osmosisd\")\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --log_format string        The logging format (json|plain) (default \"plain\")\n      --log_level string         The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --output string            Output format (text|json) (default \"text\")\n      --trace                    print out full stack trace on errors",
  "osmosisd keys rename": "Rename a key from the Keybase backend.\n\nNote that renaming offline or ledger keys will rename\nonly the public key references stored locally, i.e.\nprivate keys stored in a ledger device cannot be renamed with the CLI.\n\nUsage:\n  osmosisd keys rename <old_name> <new_name> [flags]\n\nFlags:\n  -h, --help   help for rename\n  -y, --yes    Skip confirmation prompt when renaming offline or ledger key references\n\nGlobal Flags:\n      --home string              The application home directory (default \"/home/ubuntu/.osmosisd\")\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --log_format string        The logging format (json|plain) (default \"plain\")\n      --log_level string         The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --output string            Output format (text|json) (default \"text\")\n      --trace                    print out full stack trace on errors",
  "osmosisd keys show": "Display keys details. If multiple names or addresses are provided,\nthen an ephemeral multisig key will be created under the name \"multi\"\nconsisting of all the keys provided by name and multisig threshold.\n\nUsage:\n  osmosisd keys show [name_or_address [name_or_address...]] [flags]\n\nFlags:\n  -a, --address                  Output the address only (overrides --output)\n      --bech string              The Bech32 prefix encoding for a key (acc|val|cons) (default \"acc\")\n  -d, --device                   Output the address in a ledger device\n  -h, --help                     help for show\n      --multisig-threshold int   K out of N required signatures (default 1)\n  -p, --pubkey                   Output the public key only (overrides --output)\n\nGlobal Flags:\n      --home string              The application home directory (default \"/home/ubuntu/.osmosisd\")\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --log_format string        The logging format (json|plain) (default \"plain\")\n      --log_level string         The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --output string            Output format (text|json) (default \"text\")\n      --trace                    print out full stack trace on errors",
  "osmosisd list-env": "listing all available environments.\nExample:\n\tosmosisd list-env'\n\tReturns all EnvironmentCmd\n\nUsage:\n  osmosisd list-env  [flags]\n\nFlags:\n  -h, --help   help for list-env\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd migrate": "Migrate the source genesis into the target version and print to STDOUT.\n\nExample:\n$ osmosisd migrate v0.36 /path/to/genesis.json --chain-id=cosmoshub-3 --genesis-time=2019-04-22T17:00:00Z\n\nUsage:\n  osmosisd migrate [target-version] [genesis-file] [flags]\n\nFlags:\n      --chain-id string       override chain_id with this flag\n      --genesis-time string   override genesis_time with this flag\n  -h, --help                  help for migrate\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd prepare-genesis": "Prepare a genesis file with initial setup.\nExamples include:\n\t- Setting module initial params\n\t- Setting denom metadata\nExample:\n\tosmosisd prepare-genesis mainnet osmosis-1\n\t- Check input genesis:\n\t\tfile is at ~/.osmosisd/config/genesis.json\n\nUsage:\n  osmosisd prepare-genesis [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for prepare-genesis\n      --home string        The application home directory (default \"/home/ubuntu/.osmosisd\")\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query": "Querying subcommands\n\nUsage:\n  osmosisd query [flags]\n  osmosisd query [command]\n\nAliases:\n  query, q\n\nAvailable Commands:\n  account                  Query for account by address\n  auth                     Querying commands for the auth module\n  authz                    Querying commands for the authz module\n  bank                     Querying commands for the bank module\n  block                    Get verified data for the block at given height\n  concentratedliquidity    Querying commands for the concentratedliquidity module\n  cosmwasmpool             Querying commands for the cosmwasmpool module\n  distribution             Querying commands for the distribution module\n  downtimedetector         Querying commands for the downtimedetector module\n  epochs                   Querying commands for the epochs module\n  evidence                 Query for evidence by hash or for all (paginated) submitted evidence\n  gamm                     Querying commands for the gamm module\n  gov                      Querying commands for the governance module\n  ibc                      Querying commands for the IBC module\n  ibc-transfer             IBC fungible token transfer query subcommands\n  ibchooks                 Querying commands for the ibchooks module\n  incentives               Querying commands for the incentives module\n  interchain-accounts      IBC interchain accounts query subcommands\n  interchainquery          Querying commands for the interchainquery module\n  lockup                   Querying commands for the lockup module\n  mint                     Querying commands for the mint module\n  packetforward            Querying commands for the packetforward module\n  params                   Querying commands for the params module\n  poolincentives           Querying commands for the poolincentives module\n  poolmanager              Querying commands for the poolmanager module\n  protorev                 Querying commands for the protorev module\n  rate-limited-ibc         Querying commands for the rate-limited-ibc module\n  slashing                 Querying commands for the slashing module\n  staking                  Querying commands for the staking module\n  superfluid               Querying commands for the superfluid module\n  tendermint-validator-set Get the full tendermint validator set at given height\n  tokenfactory             Querying commands for the tokenfactory module\n  twap                     Querying commands for the twap module\n  tx                       Query for a transaction by hash, \"<addr>/<seq>\" combination or comma-separated signatures in a committed block\n  txfees                   Querying commands for the txfees module\n  txs                      Query for paginated transactions that match a set of events\n  upgrade                  Querying commands for the upgrade module\n  valsetpref               Querying commands for the valsetpref module\n  wasm                     Querying commands for the wasm module\n\nFlags:\n      --chain-id string   The network chain ID\n  -h, --help              help for query\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd query [command] --help\" for more information about a command.",
  "osmosisd query account": "Query for account by address\n\nUsage:\n  osmosisd query account [address] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for account\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query auth": "Querying commands for the auth module\n\nUsage:\n  osmosisd query auth [flags]\n  osmosisd query auth [command]\n\nAvailable Commands:\n  account            Query for account by address\n  accounts           Query all the accounts\n  address-by-acc-num Query for an address by account number\n  module-account     Query module account info by module name\n  module-accounts    Query all module accounts\n  params             Query the current auth parameters\n\nFlags:\n  -h, --help   help for auth\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd query auth [command] --help\" for more information about a command.",
  "osmosisd query auth account": "Query for account by address\n\nUsage:\n  osmosisd query auth account [address] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for account\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query auth accounts": "Query all the accounts\n\nUsage:\n  osmosisd query auth accounts [flags]\n\nFlags:\n      --count-total        count total number of records in all-accounts to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for accounts\n      --limit uint         pagination limit of all-accounts to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of all-accounts to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of all-accounts to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of all-accounts to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query auth address-by-acc-num": "Query for an address by account number\n\nUsage:\n  osmosisd query auth address-by-acc-num [acc-num] [flags]\n\nAliases:\n  address-by-acc-num, address-by-id\n\nExamples:\nosmosisd q auth address-by-acc-num 1\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for address-by-acc-num\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query auth module-account": "Query module account info by module name\n\nUsage:\n  osmosisd query auth module-account [module-name] [flags]\n\nExamples:\nosmosisd q auth module-account auth\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for module-account\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query auth module-accounts": "Query all module accounts\n\nUsage:\n  osmosisd query auth module-accounts [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for module-accounts\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query auth params": "Query the current auth parameters:\n\n$ <appd> query auth params\n\nUsage:\n  osmosisd query auth params [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for params\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query authz": "Querying commands for the authz module\n\nUsage:\n  osmosisd query authz [flags]\n  osmosisd query authz [command]\n\nAvailable Commands:\n  grants            query grants for a granter-grantee pair and optionally a msg-type-url\n  grants-by-grantee query authorization grants granted to a grantee\n  grants-by-granter query authorization grants granted by granter\n\nFlags:\n  -h, --help   help for authz\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd query authz [command] --help\" for more information about a command.",
  "osmosisd query authz grants": "Query authorization grants for a granter-grantee pair. If msg-type-url\nis set, it will select grants only for that msg type.\nExamples:\n$ osmosisd query authz grants cosmos1skj.. cosmos1skjwj..\n$ osmosisd query authz grants cosmos1skjw.. cosmos1skjwj.. /cosmos.bank.v1beta1.MsgSend\n\nUsage:\n  osmosisd query authz grants [granter-addr] [grantee-addr] [msg-type-url]? [flags]\n\nFlags:\n      --count-total        count total number of records in grants to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for grants\n      --limit uint         pagination limit of grants to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of grants to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of grants to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of grants to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query authz grants-by-grantee": "Query authorization grants granted to a grantee.\nExamples:\n$ osmosisd q authz grants-by-grantee cosmos1skj..\n\nUsage:\n  osmosisd query authz grants-by-grantee [grantee-addr] [flags]\n\nFlags:\n      --count-total        count total number of records in grantee-grants to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for grants-by-grantee\n      --limit uint         pagination limit of grantee-grants to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of grantee-grants to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of grantee-grants to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of grantee-grants to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query authz grants-by-granter": "Query authorization grants granted by granter.\nExamples:\n$ osmosisd q authz grants-by-granter cosmos1skj..\n\nUsage:\n  osmosisd query authz grants-by-granter [granter-addr] [flags]\n\nFlags:\n      --count-total        count total number of records in granter-grants to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for grants-by-granter\n      --limit uint         pagination limit of granter-grants to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of granter-grants to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of granter-grants to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of granter-grants to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query bank": "Querying commands for the bank module\n\nUsage:\n  osmosisd query bank [flags]\n  osmosisd query bank [command]\n\nAvailable Commands:\n  balances           Query for account balances by address\n  denom-metadata     Query the client metadata for coin denominations\n  send-enabled       Query for send enabled entries\n  spendable-balances Query for account spendable balances by address\n  total              Query the total supply of coins of the chain\n\nFlags:\n  -h, --help   help for bank\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd query bank [command] --help\" for more information about a command.",
  "osmosisd query bank balances": "Query the total balance of an account or of a specific denomination.\n\nExample:\n  $ osmosisd query bank balances [address]\n  $ osmosisd query bank balances [address] --denom=[denom]\n\nUsage:\n  osmosisd query bank balances [address] [flags]\n\nFlags:\n      --count-total        count total number of records in all balances to query for\n      --denom string       The specific balance denomination to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for balances\n      --limit uint         pagination limit of all balances to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of all balances to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of all balances to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of all balances to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query bank denom-metadata": "Query the client metadata for all the registered coin denominations\n\nExample:\n  To query for the client metadata of all coin denominations use:\n  $ osmosisd query bank denom-metadata\n\nTo query for the client metadata of a specific coin denomination use:\n  $ osmosisd query bank denom-metadata --denom=[denom]\n\nUsage:\n  osmosisd query bank denom-metadata [flags]\n\nFlags:\n      --denom string       The specific denomination to query client metadata for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for denom-metadata\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query bank send-enabled": "Query for send enabled entries that have been specifically set.\n\nTo look up one or more specific denoms, supply them as arguments to this command.\nTo look up all denoms, do not provide any arguments.\n\nUsage:\n  osmosisd query bank send-enabled [denom1 ...] [flags]\n\nExamples:\nGetting one specific entry:\n  $ osmosisd query bank send-enabled foocoin\n\nGetting two specific entries:\n  $ osmosisd query bank send-enabled foocoin barcoin\n\nGetting all entries:\n  $ osmosisd query bank send-enabled\n\nFlags:\n      --count-total        count total number of records in send enabled entries to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for send-enabled\n      --limit uint         pagination limit of send enabled entries to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of send enabled entries to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of send enabled entries to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of send enabled entries to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query bank spendable-balances": "Query for account spendable balances by address\n\nUsage:\n  osmosisd query bank spendable-balances [address] [flags]\n\nExamples:\n$ osmosisd query bank spendable-balances [address]\n\nFlags:\n      --count-total        count total number of records in spendable balances to query for\n      --denom string       The specific balance denomination to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for spendable-balances\n      --limit uint         pagination limit of spendable balances to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of spendable balances to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of spendable balances to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of spendable balances to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query bank total": "Query total supply of coins that are held by accounts in the chain.\n\nExample:\n  $ osmosisd query bank total\n\nTo query for the total supply of a specific coin denomination use:\n  $ osmosisd query bank total --denom=[denom]\n\nUsage:\n  osmosisd query bank total [flags]\n\nFlags:\n      --count-total        count total number of records in all supply totals to query for\n      --denom string       The specific balance denomination to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for total\n      --limit uint         pagination limit of all supply totals to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of all supply totals to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of all supply totals to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of all supply totals to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query block": "Get verified data for the block at given height\n\nUsage:\n  osmosisd query block [height] [flags]\n\nFlags:\n  -h, --help          help for block\n  -n, --node string   Node to connect to (default \"tcp://localhost:26657\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query concentratedliquidity": "Querying commands for the concentratedliquidity module\n\nUsage:\n  osmosisd query concentratedliquidity [command]\n  \nAvailable Commands:\n  cfmm-pool-link-from-cl     Query cfmm pool id link from concentrated pool id\n  claimable-incentives       Query claimable incentives\n  claimable-spread-rewards   Query claimable spread rewards\n  incentive-records          Query incentive records for a given pool\n  liquidity-net-in-direction Query liquidity net in direction\n  liquidity-per-tick-range   Query liquidity per tick range\n  params                     Get the params for the x/concentratedliquidity module\n  pool-accumulator-rewards   Query pool accumulator rewards\n  pools                      Query pools\n  position-by-id             Query position by ID\n  tick-accumulator-trackers  Query tick accumulator trackers\n  user-positions             Query user's positions\n\nUse \"osmosisd query concentratedliquidity [command] --help\" for more information about a command.",
  "osmosisd query concentratedliquidity cfmm-pool-link-from-cl": "Query cfmm pool id link from concentrated pool id\n\nExample:\n$ osmosisd q concentratedliquidity cfmm-pool-link-from-cl 1\n\nUsage:\n  osmosisd query concentratedliquidity cfmm-pool-link-from-cl [concentrated-pool-id] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for cfmm-pool-link-from-cl\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query concentratedliquidity claimable-incentives": "Query claimable incentives\n\nExample:\n$ osmosisd q concentratedliquidity claimable-incentives 53\n\nUsage:\n  osmosisd query concentratedliquidity claimable-incentives [position-id] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for claimable-incentives\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query concentratedliquidity claimable-spread-rewards": "Query claimable spread rewards\n\nExample:\n$ osmosisd q concentratedliquidity claimable-spread-rewards 53\n\nUsage:\n  osmosisd query concentratedliquidity claimable-spread-rewards [position-id] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for claimable-spread-rewards\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query concentratedliquidity incentive-records": "Query incentive records for a given pool\n\nExample:\n$ osmosisd q concentratedliquidity incentive-records 1\n\nUsage:\n  osmosisd query concentratedliquidity incentive-records [pool-id] [flags]\n\nFlags:\n      --count-total        count total number of records in incentive-records to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for incentive-records\n      --limit uint         pagination limit of incentive-records to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of incentive-records to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of incentive-records to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of incentive-records to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query concentratedliquidity liquidity-net-in-direction": "Query liquidity net in direction\n\nExample:\n$ osmosisd q concentratedliquidity 4 uosmo \"[-18000000]\" true \"[-9000000]\" true\n\n[poolid] [inputDenom] [start tick] [use cur tick] [bound tick] [use_no_bound]\nTODO: What does any of that mean...?\n\nUsage:\n  osmosisd query concentratedliquidity liquidity-net-in-direction [pool-id] [token-in] [start-tick] [use-cur-tick] [bound-tick] [use-no-bound] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for liquidity-net-in-direction\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query concentratedliquidity liquidity-per-tick-range": "Query liquidity per tick range\n\nExample:\n$ osmosisd q concentratedliquidity 1\n\n[poolid]\n\nUsage:\n  osmosisd query concentratedliquidity liquidity-per-tick-range [pool-id] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for liquidity-per-tick-range\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query concentratedliquidity params": "Get the params for the x/concentratedliquidity module\n\nUsage:\n  osmosisd query concentratedliquidity params [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for params\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query concentratedliquidity pool-accumulator-rewards": "Query pool accumulator rewards\n\nExample:\n$ osmosisd q concentratedliquidity pool-accumulator-rewards 1\n\nUsage:\n  osmosisd query concentratedliquidity pool-accumulator-rewards [pool-id] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for pool-accumulator-rewards\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query concentratedliquidity pools": "Query pools\n\nExample:\n$ osmosisd q concentratedliquidity pools\n\nUsage:\n  osmosisd query concentratedliquidity pools [flags]\n\nFlags:\n      --count-total        count total number of records in pools to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for pools\n      --limit uint         pagination limit of pools to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of pools to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of pools to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of pools to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query concentratedliquidity position-by-id": "Query position by ID\n\nExample:\n$ osmosisd q concentratedliquidity position-by-id 53\n\nUsage:\n  osmosisd query concentratedliquidity position-by-id [position-id] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for position-by-id\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query concentratedliquidity tick-accumulator-trackers": "Query tick accumulator trackers\n\nExample:\n$ osmosisd q concentratedliquidity tick-accumulator-trackers 1 \"[-18000000]\"\n\nUsage:\n  osmosisd query concentratedliquidity tick-accumulator-trackers [pool-id] [tick-index] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for tick-accumulator-trackers\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query concentratedliquidity user-positions": "Query user's positions\n\nExample:\n$ osmosisd q concentratedliquidity user-positions osmo12smx2wdlyttvyzvzg54y2vnqwq2qjateuf7thj\n\nUsage:\n  osmosisd query concentratedliquidity user-positions [address] [pool-id] [flags]\n\nFlags:\n      --count-total        count total number of records in user-positions to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for user-positions\n      --limit uint         pagination limit of user-positions to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of user-positions to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of user-positions to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of user-positions to query for\n      --pool-id uint       The id of pool\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query cosmwasmpool": "Querying commands for the cosmwasmpool module\n\nUsage:\n  osmosisd query cosmwasmpool [command]\n  \nAvailable Commands:\n  contract-info Query contract info by pool id\n  params        Get the params for the x/cosmwasmpool module\n  pools         Query pools\n\nUse \"osmosisd query cosmwasmpool [command] --help\" for more information about a command.",
  "osmosisd query cosmwasmpool contract-info": "Query contract info by pool id\n\nExample:\n$ osmosisd q cosmwasmpool pools\n\nUsage:\n  osmosisd query cosmwasmpool contract-info [pool-id] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for contract-info\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query cosmwasmpool params": "Get the params for the x/cosmwasmpool module\n\nUsage:\n  osmosisd query cosmwasmpool params [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for params\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query cosmwasmpool pools": "Query pools\n\nExample:\n$ osmosisd q cosmwasmpool pools\n\nUsage:\n  osmosisd query cosmwasmpool pools [flags]\n\nFlags:\n      --count-total        count total number of records in pools to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for pools\n      --limit uint         pagination limit of pools to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of pools to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of pools to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of pools to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query distribution": "Querying commands for the distribution module\n\nUsage:\n  osmosisd query distribution [flags]\n  osmosisd query distribution [command]\n\nAvailable Commands:\n  commission                    Query distribution validator commission\n  community-pool                Query the amount of coins in the community pool\n  params                        Query distribution params\n  rewards                       Query all distribution delegator rewards or rewards from a particular validator\n  slashes                       Query distribution validator slashes\n  validator-distribution-info   Query validator distribution info\n  validator-outstanding-rewards Query distribution outstanding (un-withdrawn) rewards for a validator and all their delegations\n\nFlags:\n  -h, --help   help for distribution\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd query distribution [command] --help\" for more information about a command.",
  "osmosisd query distribution commission": "Query validator commission rewards from delegators to that validator.\n\nExample:\n$ osmosisd query distribution commission osmovaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\n\nUsage:\n  osmosisd query distribution commission [validator] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for commission\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query distribution community-pool": "Query all coins in the community pool which is under Governance control.\n\nExample:\n$ osmosisd query distribution community-pool\n\nUsage:\n  osmosisd query distribution community-pool [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for community-pool\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query distribution params": "Query distribution params\n\nUsage:\n  osmosisd query distribution params [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for params\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query distribution rewards": "Query all rewards earned by a delegator, optionally restrict to rewards from a single validator.\n\nExample:\n$ osmosisd query distribution rewards osmo1gghjut3ccd8ay0zduzj64hwre2fxs9ld75ru9p\n$ osmosisd query distribution rewards osmo1gghjut3ccd8ay0zduzj64hwre2fxs9ld75ru9p osmovaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\n\nUsage:\n  osmosisd query distribution rewards [delegator-addr] [validator-addr] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for rewards\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query distribution slashes": "Query all slashes of a validator for a given block range.\n\nExample:\n$ osmosisd query distribution slashes osmovalopervaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj 0 100\n\nUsage:\n  osmosisd query distribution slashes [validator] [start-height] [end-height] [flags]\n\nFlags:\n      --count-total        count total number of records in validator slashes to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for slashes\n      --limit uint         pagination limit of validator slashes to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of validator slashes to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of validator slashes to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of validator slashes to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query distribution validator-distribution-info": "Query validator distribution info.\nExample:\n$ osmosisd query distribution validator-distribution-info osmovaloper1lwjmdnks33xwnmfayc64ycprww49n33mtm92ne\n\nUsage:\n  osmosisd query distribution validator-distribution-info [validator] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for validator-distribution-info\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query distribution validator-outstanding-rewards": "Query distribution outstanding (un-withdrawn) rewards for a validator and all their delegations.\n\nExample:\n$ osmosisd query distribution validator-outstanding-rewards osmovaloper1lwjmdnks33xwnmfayc64ycprww49n33mtm92ne\n\nUsage:\n  osmosisd query distribution validator-outstanding-rewards [validator] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for validator-outstanding-rewards\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query downtimedetector": "Querying commands for the downtimedetector module\n\nUsage:\n  osmosisd query downtimedetector [command]\n  \nAvailable Commands:\n  recovered-since Queries if it has been at least <recovery-duration> since the chain was down for <downtime-duration>\n\nUse \"osmosisd query downtimedetector [command] --help\" for more information about a command.",
  "osmosisd query downtimedetector recovered-since": "Queries if it has been at least <recovery-duration> since the chain was down for <downtime-duration>\ndowntime-duration is a duration, but is restricted to a smaller set. Heres a few from the set: 30s, 1m, 5m, 10m, 30m, 1h, 3 h, 6h, 12h, 24h, 36h, 48h]\n\n\nExample:\n$ osmosisd q downtimedetector recovered-since 24h 30m\n\nUsage:\n  osmosisd query downtimedetector recovered-since downtime-duration recovery-duration [downtime] [recovery] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for recovered-since\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query epochs": "Querying commands for the epochs module\n\nUsage:\n  osmosisd query epochs [command]\n  \nAvailable Commands:\n  current-epoch Query current epoch by specified identifier.\n  epoch-infos   Query running epoch infos.\n\nUse \"osmosisd query epochs [command] --help\" for more information about a command.",
  "osmosisd query epochs current-epoch": "Query current epoch by specified identifier.\n\nExample:\n$ osmosisd q epochs day\n\nUsage:\n  osmosisd query epochs current-epoch [identifier] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for current-epoch\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query epochs epoch-infos": "Query running epoch infos.\n\nExample:\n$ osmosisd q epochs\n\nUsage:\n  osmosisd query epochs epoch-infos [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for epoch-infos\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query evidence": "Query for specific submitted evidence by hash or query for all (paginated) evidence:\n\nExample:\n$ osmosisd query evidence DF0C23E8634E480F84B9D5674A7CDC9816466DEC28A3358F73260F68D28D7660\n$ osmosisd query evidence --page=2 --limit=50\n\nUsage:\n  osmosisd query evidence [flags]\n\nFlags:\n      --count-total        count total number of records in evidence to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for evidence\n      --limit uint         pagination limit of evidence to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of evidence to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of evidence to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of evidence to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query gamm": "Querying commands for the gamm module\n\nUsage:\n  osmosisd query gamm [command]\n  \nAvailable Commands:\n  cfmm-cl-pool-links             Query all concentrated pool and cfmm pool id links\n  cl-pool-link-from-cfmm         Query concentrated pool id link from cfmm pool id\n  estimate-swap-exact-amount-in  Query estimate-swap-exact-amount-in\n  estimate-swap-exact-amount-out Query estimate-swap-exact-amount-out\n  num-pools                      Query number of pools\n  pool                           Query pool\n  pool-params                    Query pool-params\n  pool-type                      Query pool type\n  pools                          Query pools\n  pools-with-filter              Query pools with filter\n  spot-price                     Query spot-price (LEGACY, arguments are reversed!!)\n  total-liquidity                Query total-liquidity\n  total-pool-liquidity           Query total-pool-liquidity\n  total-share                    Query total-share\n\nUse \"osmosisd query gamm [command] --help\" for more information about a command.",
  "osmosisd query gamm cfmm-cl-pool-links": "Query all concentrated pool and cfmm pool id links\n\nExample:\n$ osmosisd q gamm cfmm-cl-pool-links\n\nUsage:\n  osmosisd query gamm cfmm-cl-pool-links [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for cfmm-cl-pool-links\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query gamm cl-pool-link-from-cfmm": "Query concentrated pool id link from cfmm pool id\n\nExample:\n$ osmosisd q gamm cl-pool-link-from-cfmm 1\n\nUsage:\n  osmosisd query gamm cl-pool-link-from-cfmm [cfmm-pool-id] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for cl-pool-link-from-cfmm\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query gamm estimate-swap-exact-amount-in": "Query estimate-swap-exact-amount-in.\n\nExample:\n$ osmosisd q gamm estimate-swap-exact-amount-in 1 osm11vmx8jtggpd9u7qr0t8vxclycz85u925sazglr7 1000stake --swap-route-pool-ids=2 --swap-route-pool-ids=3\n\nUsage:\n  osmosisd query gamm estimate-swap-exact-amount-in [pool-id] [token-in] [routes] [flags]\n\nFlags:\n      --grpc-addr string             the gRPC endpoint to use for this chain\n      --grpc-insecure                allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int                   Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help                         help for estimate-swap-exact-amount-in\n      --node string                  <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string                Output format (text|json) (default \"text\")\n      --swap-route-denoms string     swap route amount\n      --swap-route-pool-ids string   swap route pool id\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query gamm estimate-swap-exact-amount-out": "Query estimate-swap-exact-amount-out.\n\nExample:\n$ osmosisd q gamm estimate-swap-exact-amount-out 1 osm11vmx8jtggpd9u7qr0t8vxclycz85u925sazglr7 1000stake --swap-route-pool-ids=2 --swap-route-pool-ids=3\n\nUsage:\n  osmosisd query gamm estimate-swap-exact-amount-out [pool-id] [routes] [token-out] [flags]\n\nFlags:\n      --grpc-addr string             the gRPC endpoint to use for this chain\n      --grpc-insecure                allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int                   Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help                         help for estimate-swap-exact-amount-out\n      --node string                  <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string                Output format (text|json) (default \"text\")\n      --swap-route-denoms string     swap route amount\n      --swap-route-pool-ids string   swap route pool id\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query gamm num-pools": "Query number of pools\n\nUsage:\n  osmosisd query gamm num-pools [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for num-pools\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query gamm pool": "Query pool\n\nExample:\n$ osmosisd q gamm pool 1\n\nUsage:\n  osmosisd query gamm pool [pool-id] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for pool\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query gamm pool-params": "Query pool-params.\nExample:\n$ osmosisd query gamm pool-params 1\n\nUsage:\n  osmosisd query gamm pool-params <poolID> [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for pool-params\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query gamm pool-type": "Query pool type\nExample:\n$ osmosisd q gamm pool-type <pool_id>\n\nUsage:\n  osmosisd query gamm pool-type [pool-id] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for pool-type\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query gamm pools": "Query pools\n\nExample:\n$ osmosisd q gamm pools\n\nUsage:\n  osmosisd query gamm pools [flags]\n\nFlags:\n      --count-total        count total number of records in pools to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for pools\n      --limit uint         pagination limit of pools to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of pools to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of pools to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of pools to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query gamm pools-with-filter": "Query pools with filter. The possible filter options are:\n\n1. By Pool type: Either \"Balancer\" or \"Stableswap\"\n2. By min pool liquidity by providing min coins\n\nNote that if both filters are to be applied, \"min_liquidity\" always needs to be provided as the first argument.\n\nExample:\n$ osmosisd query gamm pools-with-filter <min_liquidity> <pool_type>\n\nUsage:\n  osmosisd query gamm pools-with-filter <min_liquidity> <pool_type> [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for pools-with-filter\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query gamm spot-price": "Query spot price (Legacy).\n\nExample:\n$ osmosisd q gamm spot-price 1 uosmo ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\n\nUsage:\n  osmosisd query gamm spot-price [pool-id] [base-asset-denom] [quote-asset-denom] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for spot-price\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query gamm total-liquidity": "Query total-liquidity.\nExample:\n$ osmosisd q gamm total-liquidity\n\nUsage:\n  osmosisd query gamm total-liquidity [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for total-liquidity\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query gamm total-pool-liquidity": "Query total-pool-liquidity.\nExample:\n$ osmosisd q gamm total-pool-liquidity 1\n\nUsage:\n  osmosisd query gamm total-pool-liquidity [pool-id] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for total-pool-liquidity\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query gamm total-share": "Query total-share.\nExample:\n$ osmosisd q gamm total-share 1\n\nUsage:\n  osmosisd query gamm total-share [pool-id] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for total-share\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query gov": "Querying commands for the governance module\n\nUsage:\n  osmosisd query gov [flags]\n  osmosisd query gov [command]\n\nAvailable Commands:\n  deposit     Query details of a deposit\n  deposits    Query deposits on a proposal\n  param       Query the parameters (voting|tallying|deposit) of the governance process\n  params      Query the parameters of the governance process\n  proposal    Query details of a single proposal\n  proposals   Query proposals with optional filters\n  proposer    Query the proposer of a governance proposal\n  tally       Get the tally of a proposal vote\n  vote        Query details of a single vote\n  votes       Query votes on a proposal\n\nFlags:\n  -h, --help   help for gov\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd query gov [command] --help\" for more information about a command.",
  "osmosisd query gov deposit": "Query details for a single proposal deposit on a proposal by its identifier.\n\nExample:\n$ osmosisd query gov deposit 1 cosmos1skjwj5whet0lpe65qaq4rpq03hjxlwd9nf39lk\n\nUsage:\n  osmosisd query gov deposit [proposal-id] [depositer-addr] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for deposit\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query gov deposits": "Query details for all deposits on a proposal.\nYou can find the proposal-id by running \"osmosisd query gov proposals\".\n\nExample:\n$ osmosisd query gov deposits 1\n\nUsage:\n  osmosisd query gov deposits [proposal-id] [flags]\n\nFlags:\n      --count-total        count total number of records in deposits to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for deposits\n      --limit uint         pagination limit of deposits to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of deposits to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of deposits to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of deposits to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query gov param": "Query the all the parameters for the governance process.\nExample:\n$ osmosisd query gov param voting\n$ osmosisd query gov param tallying\n$ osmosisd query gov param deposit\n\nUsage:\n  osmosisd query gov param [param-type] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for param\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query gov params": "Query the all the parameters for the governance process.\n\nExample:\n$ osmosisd query gov params\n\nUsage:\n  osmosisd query gov params [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for params\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query gov proposal": "Query details for a proposal. You can find the\nproposal-id by running \"osmosisd query gov proposals\".\n\nExample:\n$ osmosisd query gov proposal 1\n\nUsage:\n  osmosisd query gov proposal [proposal-id] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for proposal\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query gov proposals": "Query for a all paginated proposals that match optional filters:\n\nExample:\n$ osmosisd query gov proposals --depositor cosmos1skjwj5whet0lpe65qaq4rpq03hjxlwd9nf39lk\n$ osmosisd query gov proposals --voter cosmos1skjwj5whet0lpe65qaq4rpq03hjxlwd9nf39lk\n$ osmosisd query gov proposals --status (DepositPeriod|VotingPeriod|Passed|Rejected)\n$ osmosisd query gov proposals --page=2 --limit=100\n\nUsage:\n  osmosisd query gov proposals [flags]\n\nFlags:\n      --count-total        count total number of records in proposals to query for\n      --depositor string   (optional) filter by proposals deposited on by depositor\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for proposals\n      --limit uint         pagination limit of proposals to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of proposals to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of proposals to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of proposals to query for\n      --reverse            results are sorted in descending order\n      --status string      (optional) filter proposals by proposal status, status: deposit_period/voting_period/passed/rejected\n      --voter string       (optional) filter by proposals voted on by voted\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query gov proposer": "Query which address proposed a proposal with a given ID.\n\nExample:\n$ osmosisd query gov proposer 1\n\nUsage:\n  osmosisd query gov proposer [proposal-id] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for proposer\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query gov tally": "Query tally of votes on a proposal. You can find\nthe proposal-id by running \"osmosisd query gov proposals\".\n\nExample:\n$ osmosisd query gov tally 1\n\nUsage:\n  osmosisd query gov tally [proposal-id] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for tally\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query gov vote": "Query details for a single vote on a proposal given its identifier.\n\nExample:\n$ osmosisd query gov vote 1 cosmos1skjwj5whet0lpe65qaq4rpq03hjxlwd9nf39lk\n\nUsage:\n  osmosisd query gov vote [proposal-id] [voter-addr] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for vote\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query gov votes": "Query vote details for a single proposal by its identifier.\n\nExample:\n$ osmosisd query gov votes 1\n$ osmosisd query gov votes 1 --page=2 --limit=100\n\nUsage:\n  osmosisd query gov votes [proposal-id] [flags]\n\nFlags:\n      --count-total        count total number of records in votes to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for votes\n      --limit uint         pagination limit of votes to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of votes to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of votes to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of votes to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query ibc": "Querying commands for the IBC module\n\nUsage:\n  osmosisd query ibc [flags]\n  osmosisd query ibc [command]\n\nAvailable Commands:\n  channel     IBC channel query subcommands\n  client      IBC client query subcommands\n  connection  IBC connection query subcommands\n\nFlags:\n  -h, --help   help for ibc\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd query ibc [command] --help\" for more information about a command.",
  "osmosisd query ibc channel": "IBC channel query subcommands\n\nUsage:\n  osmosisd query ibc channel [flags]\n  osmosisd query ibc channel [command]\n\nAvailable Commands:\n  channels              Query all channels\n  client-state          Query the client state associated with a channel\n  connections           Query all channels associated with a connection\n  end                   Query a channel end\n  next-sequence-receive Query a next receive sequence\n  packet-ack            Query a packet acknowledgement\n  packet-commitment     Query a packet commitment\n  packet-commitments    Query all packet commitments associated with a channel\n  packet-receipt        Query a packet receipt\n  unreceived-acks       Query all the unreceived acks associated with a channel\n  unreceived-packets    Query all the unreceived packets associated with a channel\n\nFlags:\n  -h, --help   help for channel\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd query ibc channel [command] --help\" for more information about a command.",
  "osmosisd query ibc channel channels": "Query all channels from a chain\n\nUsage:\n  osmosisd query ibc channel channels [flags]\n\nExamples:\nosmosisd query ibc channel channels\n\nFlags:\n      --count-total        count total number of records in channels to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for channels\n      --limit uint         pagination limit of channels to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of channels to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of channels to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of channels to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query ibc channel client-state": "Query the client state associated with a channel, by providing its port and channel identifiers.\n\nUsage:\n  osmosisd query ibc channel client-state [port-id] [channel-id] [flags]\n\nExamples:\nosmosisd query ibc channel client-state [port-id] [channel-id]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for client-state\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query ibc channel connections": "Query all channels associated with a connection\n\nUsage:\n  osmosisd query ibc channel connections [connection-id] [flags]\n\nExamples:\nosmosisd query ibc channel connections [connection-id]\n\nFlags:\n      --count-total        count total number of records in channels associated with a connection to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for connections\n      --limit uint         pagination limit of channels associated with a connection to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of channels associated with a connection to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of channels associated with a connection to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of channels associated with a connection to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query ibc channel end": "Query an IBC channel end from a port and channel identifiers\n\nUsage:\n  osmosisd query ibc channel end [port-id] [channel-id] [flags]\n\nExamples:\nosmosisd query ibc channel end [port-id] [channel-id]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for end\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n      --prove              show proofs for the query results (default true)\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query ibc channel next-sequence-receive": "Query the next receive sequence for a given channel\n\nUsage:\n  osmosisd query ibc channel next-sequence-receive [port-id] [channel-id] [flags]\n\nExamples:\nosmosisd query ibc channel next-sequence-receive [port-id] [channel-id]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for next-sequence-receive\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n      --prove              show proofs for the query results (default true)\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query ibc channel packet-ack": "Query a packet acknowledgement\n\nUsage:\n  osmosisd query ibc channel packet-ack [port-id] [channel-id] [sequence] [flags]\n\nExamples:\nosmosisd query ibc channel packet-ack [port-id] [channel-id] [sequence]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for packet-ack\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n      --prove              show proofs for the query results (default true)\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query ibc channel packet-commitment": "Query a packet commitment\n\nUsage:\n  osmosisd query ibc channel packet-commitment [port-id] [channel-id] [sequence] [flags]\n\nExamples:\nosmosisd query ibc channel packet-commitment [port-id] [channel-id] [sequence]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for packet-commitment\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n      --prove              show proofs for the query results (default true)\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query ibc channel packet-commitments": "Query all packet commitments associated with a channel\n\nUsage:\n  osmosisd query ibc channel packet-commitments [port-id] [channel-id] [flags]\n\nExamples:\nosmosisd query ibc channel packet-commitments [port-id] [channel-id]\n\nFlags:\n      --count-total        count total number of records in packet commitments associated with a channel to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for packet-commitments\n      --limit uint         pagination limit of packet commitments associated with a channel to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of packet commitments associated with a channel to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of packet commitments associated with a channel to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of packet commitments associated with a channel to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query ibc channel packet-receipt": "Query a packet receipt\n\nUsage:\n  osmosisd query ibc channel packet-receipt [port-id] [channel-id] [sequence] [flags]\n\nExamples:\nosmosisd query ibc channel packet-receipt [port-id] [channel-id] [sequence]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for packet-receipt\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n      --prove              show proofs for the query results (default true)\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query ibc channel unreceived-acks": "Given a list of acknowledgement sequences from counterparty, determine if an ack on the counterparty chain has been received on the executing chain.\n\nThe return value represents:\n- Unreceived packet acknowledgement: packet commitment exists on original sending (executing) chain and ack exists on receiving chain.\n\nUsage:\n  osmosisd query ibc channel unreceived-acks [port-id] [channel-id] [flags]\n\nExamples:\nosmosisd query ibc channel unreceived-acks [port-id] [channel-id] --sequences=1,2,3\n\nFlags:\n      --grpc-addr string       the gRPC endpoint to use for this chain\n      --grpc-insecure          allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int             Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help                   help for unreceived-acks\n      --node string            <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string          Output format (text|json) (default \"text\")\n      --sequences int64Slice   comma separated list of packet sequence numbers (default [])\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query ibc channel unreceived-packets": "Determine if a packet, given a list of packet commitment sequences, is unreceived.\n\nThe return value represents:\n- Unreceived packet commitments: no acknowledgement exists on receiving chain for the given packet commitment sequence on sending chain.\n\nUsage:\n  osmosisd query ibc channel unreceived-packets [port-id] [channel-id] [flags]\n\nExamples:\nosmosisd query ibc channel unreceived-packets [port-id] [channel-id] --sequences=1,2,3\n\nFlags:\n      --grpc-addr string       the gRPC endpoint to use for this chain\n      --grpc-insecure          allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int             Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help                   help for unreceived-packets\n      --node string            <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string          Output format (text|json) (default \"text\")\n      --sequences int64Slice   comma separated list of packet sequence numbers (default [])\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query ibc client": "IBC client query subcommands\n\nUsage:\n  osmosisd query ibc client [flags]\n  osmosisd query ibc client [command]\n\nAvailable Commands:\n  consensus-state         Query the consensus state of a client at a given height\n  consensus-state-heights Query the heights of all consensus states of a client.\n  consensus-states        Query all the consensus states of a client.\n  header                  Query the latest header of the running chain\n  params                  Query the current ibc client parameters\n  self-consensus-state    Query the self consensus state for this chain\n  state                   Query a client state\n  states                  Query all available light clients\n  status                  Query client status\n\nFlags:\n  -h, --help   help for client\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd query ibc client [command] --help\" for more information about a command.",
  "osmosisd query ibc client consensus-state": "Query the consensus state for a particular light client at a given height.\nIf the '--latest' flag is included, the query returns the latest consensus state, overriding the height argument.\n\nUsage:\n  osmosisd query ibc client consensus-state [client-id] [height] [flags]\n\nExamples:\nosmosisd query ibc client  consensus-state [client-id] [height]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for consensus-state\n      --latest-height      return latest stored consensus state\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n      --prove              show proofs for the query results (default true)\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query ibc client consensus-state-heights": "Query the heights of all consensus states associated with the provided client ID.\n\nUsage:\n  osmosisd query ibc client consensus-state-heights [client-id] [flags]\n\nExamples:\nosmosisd query ibc client consensus-state-heights [client-id]\n\nFlags:\n      --count-total        count total number of records in consensus state heights to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for consensus-state-heights\n      --limit uint         pagination limit of consensus state heights to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of consensus state heights to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of consensus state heights to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of consensus state heights to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query ibc client consensus-states": "Query all the consensus states from a given client state.\n\nUsage:\n  osmosisd query ibc client consensus-states [client-id] [flags]\n\nExamples:\nosmosisd query ibc client consensus-states [client-id]\n\nFlags:\n      --count-total        count total number of records in consensus states to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for consensus-states\n      --limit uint         pagination limit of consensus states to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of consensus states to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of consensus states to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of consensus states to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query ibc client header": "Query the latest Tendermint header of the running chain\n\nUsage:\n  osmosisd query ibc client header [flags]\n\nExamples:\nosmosisd query ibc client  header\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for header\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query ibc client params": "Query the current ibc client parameters\n\nUsage:\n  osmosisd query ibc client params [flags]\n\nExamples:\nosmosisd query ibc client params\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for params\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query ibc client self-consensus-state": "Query the self consensus state for this chain. This result may be used for verifying IBC clients representing this chain which are hosted on counterparty chains.\n\nUsage:\n  osmosisd query ibc client self-consensus-state [flags]\n\nExamples:\nosmosisd query ibc client self-consensus-state\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for self-consensus-state\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query ibc client state": "Query stored client state\n\nUsage:\n  osmosisd query ibc client state [client-id] [flags]\n\nExamples:\nosmosisd query ibc client state [client-id]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for state\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n      --prove              show proofs for the query results (default true)\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query ibc client states": "Query all available light clients\n\nUsage:\n  osmosisd query ibc client states [flags]\n\nExamples:\nosmosisd query ibc client states\n\nFlags:\n      --count-total        count total number of records in client states to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for states\n      --limit uint         pagination limit of client states to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of client states to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of client states to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of client states to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query ibc client status": "Query client activity status. Any client without an 'Active' status is considered inactive\n\nUsage:\n  osmosisd query ibc client status [client-id] [flags]\n\nExamples:\nosmosisd query ibc client status [client-id]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for status\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query ibc connection": "IBC connection query subcommands\n\nUsage:\n  osmosisd query ibc connection [command]\n\nAvailable Commands:\n  connections Query all connections\n  end         Query stored connection end\n  params      Query the current ibc connection parameters\n  path        Query stored client connection paths\n\nFlags:\n  -h, --help   help for connection\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd query ibc connection [command] --help\" for more information about a command.",
  "osmosisd query ibc connection connections": "Query all connections ends from a chain\n\nUsage:\n  osmosisd query ibc connection connections [flags]\n\nExamples:\nosmosisd query ibc connection connections\n\nFlags:\n      --count-total        count total number of records in connection ends to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for connections\n      --limit uint         pagination limit of connection ends to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of connection ends to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of connection ends to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of connection ends to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query ibc connection end": "Query stored connection end\n\nUsage:\n  osmosisd query ibc connection end [connection-id] [flags]\n\nExamples:\nosmosisd query ibc connection end [connection-id]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for end\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n      --prove              show proofs for the query results (default true)\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query ibc connection params": "Query the current ibc connection parameters\n\nUsage:\n  osmosisd query ibc connection params [flags]\n\nExamples:\nosmosisd query ibc connection params\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for params\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query ibc connection path": "Query stored client connection paths\n\nUsage:\n  osmosisd query ibc connection path [client-id] [flags]\n\nExamples:\nosmosisd query  ibc connection path [client-id]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for path\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n      --prove              show proofs for the query results (default true)\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query ibc-transfer": "IBC fungible token transfer query subcommands\n\nUsage:\n  osmosisd query ibc-transfer [command]\n\nAvailable Commands:\n  denom-hash     Query the denom hash info from a given denom trace\n  denom-trace    Query the denom trace info from a given trace hash or ibc denom\n  denom-traces   Query the trace info for all token denominations\n  escrow-address Get the escrow address for a channel\n  params         Query the current ibc-transfer parameters\n  total-escrow   Query the total amount of tokens in escrow for a denom\n\nFlags:\n  -h, --help   help for ibc-transfer\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd query ibc-transfer [command] --help\" for more information about a command.",
  "osmosisd query ibc-transfer denom-hash": "Query the denom hash info from a given denom trace\n\nUsage:\n  osmosisd query ibc-transfer denom-hash [trace] [flags]\n\nExamples:\nosmosisd query ibc-transfer denom-hash transfer/channel-0/uatom\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for denom-hash\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query ibc-transfer denom-trace": "Query the denom trace info from a given trace hash or ibc denom\n\nUsage:\n  osmosisd query ibc-transfer denom-trace [hash/denom] [flags]\n\nExamples:\nosmosisd query ibc-transfer denom-trace 27A6394C3F9FF9C9DCF5DFFADF9BB5FE9A37C7E92B006199894CF1824DF9AC7C\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for denom-trace\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query ibc-transfer denom-traces": "Query the trace info for all token denominations\n\nUsage:\n  osmosisd query ibc-transfer denom-traces [flags]\n\nExamples:\nosmosisd query ibc-transfer denom-traces\n\nFlags:\n      --count-total        count total number of records in denominations trace to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for denom-traces\n      --limit uint         pagination limit of denominations trace to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of denominations trace to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of denominations trace to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of denominations trace to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query ibc-transfer escrow-address": "Get the escrow address for a channel\n\nUsage:\n  osmosisd query ibc-transfer escrow-address [flags]\n\nExamples:\nosmosisd query ibc-transfer escrow-address [port] [channel-id]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for escrow-address\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query ibc-transfer params": "Query the current ibc-transfer parameters\n\nUsage:\n  osmosisd query ibc-transfer params [flags]\n\nExamples:\nosmosisd query ibc-transfer params\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for params\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query ibc-transfer total-escrow": "Query the total amount of tokens in escrow for a denom\n\nUsage:\n  osmosisd query ibc-transfer total-escrow [denom] [flags]\n\nExamples:\nosmosisd query ibc-transfer total-escrow uosmo\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for total-escrow\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query ibchooks": "Querying commands for the ibchooks module\n\nUsage:\n  osmosisd query ibchooks [command]\n  \nAvailable Commands:\n  wasm-sender Generate the local address for a wasm hooks sender\n\nUse \"osmosisd query ibchooks [command] --help\" for more information about a command.",
  "osmosisd query ibchooks wasm-sender": "Generate the local address for a wasm hooks sender.\nExample:\n$ osmosisd query ibc-hooks wasm-hooks-sender channel-42 juno12smx2wdlyttvyzvzg54y2vnqwq2qjatezqwqxu\n\nUsage:\n  osmosisd query ibchooks wasm-sender <channelID> <originalSender> [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for wasm-sender\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query incentives": "Querying commands for the incentives module\n\nUsage:\n  osmosisd query incentives [command]\n  \nAvailable Commands:\n  active-gauges                    Query active gauges\n  active-gauges-per-denom          Query active gauges per denom\n  all-groups                       Query all groups\n  all-groups-gauges                Query all group gauges\n  all-groups-with-gauge            Query all groups with their respective group gauge\n  current-weight-by-group-gauge-id Query current incentives distribution weight since epoch for each gauge respectively from a group gauge ID\n  gauge-by-id                      Query gauge by id.\n  gauges                           Query all available gauges\n  group-by-group-gauge-id          Query a group it's respective group gauge ID\n  rewards-estimation               Query rewards estimation\n  to-distribute-coins              Query coins that is going to be distributed\n  upcoming-gauges                  Query upcoming gauges\n  upcoming-gauges-per-denom        Query scheduled gauges per denom\n\nUse \"osmosisd query incentives [command] --help\" for more information about a command.",
  "osmosisd query incentives active-gauges": "Query active gauges\n\nUsage:\n  osmosisd query incentives active-gauges [flags]\n\nFlags:\n      --count-total        count total number of records in active-gauges to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for active-gauges\n      --limit uint         pagination limit of active-gauges to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of active-gauges to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of active-gauges to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of active-gauges to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query incentives active-gauges-per-denom": "Query active gauges per denom\n\nExample:\n$ osmosisd q incentives active-gauges-per-denom gamm/pool/1\n\nUsage:\n  osmosisd query incentives active-gauges-per-denom [denom] [flags]\n\nFlags:\n      --count-total        count total number of records in active-gauges-per-denom to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for active-gauges-per-denom\n      --limit uint         pagination limit of active-gauges-per-denom to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of active-gauges-per-denom to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of active-gauges-per-denom to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of active-gauges-per-denom to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query incentives all-groups": "Query all groups\n\nUsage:\n  osmosisd query incentives all-groups [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for all-groups\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query incentives all-groups-gauges": "Query all group gauges\n\nUsage:\n  osmosisd query incentives all-groups-gauges [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for all-groups-gauges\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query incentives all-groups-with-gauge": "Query all groups with their respective group gauge\n\nUsage:\n  osmosisd query incentives all-groups-with-gauge [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for all-groups-with-gauge\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query incentives current-weight-by-group-gauge-id": "Query current incentives distribution weight since epoch for each gauge respectively from a group gauge ID\n\nUsage:\n  osmosisd query incentives current-weight-by-group-gauge-id [group-gauge-id] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for current-weight-by-group-gauge-id\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query incentives gauge-by-id": "Query gauge by id.\n\nExample:\n$ osmosisd q incentives gauge-by-id 1\n\nUsage:\n  osmosisd query incentives gauge-by-id [id] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for gauge-by-id\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query incentives gauges": "Query all available gauges\n\nUsage:\n  osmosisd query incentives gauges [flags]\n\nFlags:\n      --count-total        count total number of records in gauges to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for gauges\n      --limit uint         pagination limit of gauges to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of gauges to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of gauges to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of gauges to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query incentives group-by-group-gauge-id": "Query a group it's respective group gauge ID\n\nUsage:\n  osmosisd query incentives group-by-group-gauge-id [group-gauge-id] [id] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for group-by-group-gauge-id\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query incentives rewards-estimation": "Query rewards estimation.\n\nExample:\n$ osmosisd query incentives rewards-estimation\n\nUsage:\n  osmosisd query incentives rewards-estimation [flags]\n\nFlags:\n      --end-epoch int      the end epoch number to participate in rewards calculation\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for rewards-estimation\n      --lock-ids string    the lock ids to receive rewards, when it is empty, all lock ids of the owner are used\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n      --owner string       Owner to receive rewards, optionally used when lock-ids flag is NOT set\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query incentives to-distribute-coins": "Query coins that is going to be distributed\n\nUsage:\n  osmosisd query incentives to-distribute-coins [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for to-distribute-coins\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query incentives upcoming-gauges": "Query upcoming gauges\n\nUsage:\n  osmosisd query incentives upcoming-gauges [flags]\n\nFlags:\n      --count-total        count total number of records in upcoming-gauges to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for upcoming-gauges\n      --limit uint         pagination limit of upcoming-gauges to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of upcoming-gauges to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of upcoming-gauges to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of upcoming-gauges to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query incentives upcoming-gauges-per-denom": "Query scheduled gauges per denom\n\nUsage:\n  osmosisd query incentives upcoming-gauges-per-denom [denom] [flags]\n\nFlags:\n      --count-total        count total number of records in upcoming-gauges-per-denom to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for upcoming-gauges-per-denom\n      --limit uint         pagination limit of upcoming-gauges-per-denom to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of upcoming-gauges-per-denom to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of upcoming-gauges-per-denom to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of upcoming-gauges-per-denom to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query interchain-accounts": "IBC interchain accounts query subcommands\n\nUsage:\n  osmosisd query interchain-accounts [command]\n\nAliases:\n  interchain-accounts, ica\n\nAvailable Commands:\n  controller  IBC interchain accounts controller query subcommands\n  host        IBC interchain accounts host query subcommands\n\nFlags:\n  -h, --help   help for interchain-accounts\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd query interchain-accounts [command] --help\" for more information about a command.",
  "osmosisd query interchain-accounts controller": "IBC interchain accounts controller query subcommands\n\nUsage:\n  osmosisd query interchain-accounts controller [command]\n\nAvailable Commands:\n  interchain-account Query the interchain account address for a given owner on a particular connection\n  params             Query the current interchain-accounts controller submodule parameters\n\nFlags:\n  -h, --help   help for controller\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd query interchain-accounts controller [command] --help\" for more information about a command.",
  "osmosisd query interchain-accounts controller interchain-account": "Query the controller submodule for the interchain account address for a given owner on a particular connection\n\nUsage:\n  osmosisd query interchain-accounts controller interchain-account [owner] [connection-id] [flags]\n\nExamples:\nosmosisd query interchain-accounts controller interchain-account cosmos1layxcsmyye0dc0har9sdfzwckaz8sjwlfsj8zs connection-0\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for interchain-account\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query interchain-accounts controller params": "Query the current interchain-accounts controller submodule parameters\n\nUsage:\n  osmosisd query interchain-accounts controller params [flags]\n\nExamples:\nosmosisd query interchain-accounts controller params\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for params\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query interchain-accounts host": "IBC interchain accounts host query subcommands\n\nUsage:\n  osmosisd query interchain-accounts host [command]\n\nAvailable Commands:\n  packet-events Query the interchain-accounts host submodule packet events\n  params        Query the current interchain-accounts host submodule parameters\n\nFlags:\n  -h, --help   help for host\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd query interchain-accounts host [command] --help\" for more information about a command.",
  "osmosisd query interchain-accounts host packet-events": "Query the interchain-accounts host submodule packet events for a particular channel and sequence\n\nUsage:\n  osmosisd query interchain-accounts host packet-events [channel-id] [sequence] [flags]\n\nExamples:\nosmosisd query interchain-accounts host packet-events channel-0 100\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for packet-events\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query interchain-accounts host params": "Query the current interchain-accounts host submodule parameters\n\nUsage:\n  osmosisd query interchain-accounts host params [flags]\n\nExamples:\nosmosisd query interchain-accounts host params\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for params\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query interchainquery": "Querying commands for the interchainquery module\n\nUsage:\n  osmosisd query interchainquery [command]\n\nAvailable Commands:\n  params      Query the current parameters\n\nFlags:\n  -h, --help   help for interchainquery\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd query interchainquery [command] --help\" for more information about a command.",
  "osmosisd query interchainquery params": "Query the current parameters\n\nUsage:\n  osmosisd query interchainquery params [flags]\n\nExamples:\nosmosisd query interchainquery params\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for params\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query lockup": "Querying commands for the lockup module\n\nUsage:\n  osmosisd query lockup [command]\n  \nAvailable Commands:\n  account-locked-beforetime                    Query account's unlocked records before specific time\n  account-locked-coins                         Query account's locked coins\n  account-locked-duration                      Query account locked records with a specific duration\n  account-locked-longer-duration               Query account locked records with longer duration\n  account-locked-longer-duration-denom         Query locked records for a denom with longer duration\n  account-locked-longer-duration-not-unlocking Query account locked records with longer duration from unlocking only queue\n  account-locked-pastime                       Query locked records of an account with unlock time beyond timestamp\n  account-locked-pastime-denom                 Query account's lock records by address, timestamp, denom\n  account-locked-pastime-not-unlocking         Query locked records of an account with unlock time beyond timestamp within not unlocking queue.\n  account-unlockable-coins                     Query account's unlockable coins\n  account-unlocking-coins                      Query account's unlocking coins\n  lock-by-id                                   Query account's lock record by id\n  lock-reward-receiver                         Query lock's reward receiver\n  module-balance                               Query module balance\n  module-locked-amount                         Query locked amount\n  next-lock-id                                 Query next lock id to be created\n  output-all-locks                             output all locks into a json file\n  params                                       Get the params for the x/lockup module\n  synthetic-lockup-by-lock-id                  Query synthetic lock by underlying lockup id\n  synthetic-lockups-by-lock-id                 Query synthetic lockups by lockup id (is deprecated for synthetic-lockup-by-lock-id)\n  total-locked-of-denom                        Query locked amount for a specific denom bigger then duration provided\n\nUse \"osmosisd query lockup [command] --help\" for more information about a command.",
  "osmosisd query lockup account-locked-beforetime": "Query account's unlocked records before specific time\nTimestamp is UNIX time in seconds.\n\nExample:\n$ osmosisd q lockup account-locked-pastime <address> <timestamp>\n\nUsage:\n  osmosisd query lockup account-locked-beforetime [timestamp] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for account-locked-beforetime\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query lockup account-locked-coins": "Query account's locked coins\n\nExample:\n$ osmosisd q lockup account-locked-coins <address>\n\nUsage:\n  osmosisd query lockup account-locked-coins [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for account-locked-coins\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query lockup account-locked-duration": "Query account locked records with a specific duration\n\nExample:\n$ osmosisd q lockup account-locked-duration osmo1yl6hdjhmkf37639730gffanpzndzdpmhxy9ep3 604800s\n\nUsage:\n  osmosisd query lockup account-locked-duration [duration] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for account-locked-duration\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query lockup account-locked-longer-duration": "Query account locked records with longer duration\n\nUsage:\n  osmosisd query lockup account-locked-longer-duration [duration] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for account-locked-longer-duration\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query lockup account-locked-longer-duration-denom": "Query locked records for a denom with longer duration\n\nUsage:\n  osmosisd query lockup account-locked-longer-duration-denom [duration] [denom] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for account-locked-longer-duration-denom\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query lockup account-locked-longer-duration-not-unlocking": "Query account locked records with longer duration from unlocking only queue\n\nUsage:\n  osmosisd query lockup account-locked-longer-duration-not-unlocking  [duration] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for account-locked-longer-duration-not-unlocking\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query lockup account-locked-pastime": "Query locked records of an account with unlock time beyond timestamp\n\nExample:\n$ osmosisd q lockup account-locked-pastime <address> <timestamp>\n\nUsage:\n  osmosisd query lockup account-locked-pastime [timestamp] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for account-locked-pastime\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query lockup account-locked-pastime-denom": "Query account's lock records by address, timestamp, denom\nTimestamp is UNIX time in seconds.\n\nExample:\n$ osmosisd q lockup account-locked-pastime-denom <address> <timestamp> <denom>\n\nUsage:\n  osmosisd query lockup account-locked-pastime-denom [timestamp] [denom] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for account-locked-pastime-denom\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query lockup account-locked-pastime-not-unlocking": "Query locked records of an account with unlock time beyond timestamp within not unlocking queue.\nTimestamp is UNIX time in seconds.\n\nExample:\n$ osmosisd q lockup account-locked-pastime-not-unlocking <address> <timestamp>\n\nUsage:\n  osmosisd query lockup account-locked-pastime-not-unlocking [timestamp] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for account-locked-pastime-not-unlocking\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query lockup account-unlockable-coins": "Query account's unlockable coins.\n\nExample:\n$ osmosisd query lockup account-unlockable-coins <address>\n\nUsage:\n  osmosisd query lockup account-unlockable-coins <address> [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for account-unlockable-coins\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query lockup account-unlocking-coins": "Query account's unlocking coins\n\nExample:\n$ osmosisd q lockup account-unlocking-coins <address>\n\nUsage:\n  osmosisd query lockup account-unlocking-coins [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for account-unlocking-coins\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query lockup lock-by-id": "Query account's lock record by id\n\nExample:\n$ osmosisd q lockup lock-by-id 1\n\nUsage:\n  osmosisd query lockup lock-by-id [lock-id] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for lock-by-id\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query lockup lock-reward-receiver": "Query lock's reward receiver\n\nExample:\n$ osmosisd q lockup lock-reward-receiver 1\n\nUsage:\n  osmosisd query lockup lock-reward-receiver [lock-id] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for lock-reward-receiver\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query lockup module-balance": "Query module balance\n\nUsage:\n  osmosisd query lockup module-balance [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for module-balance\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query lockup module-locked-amount": "Query locked amount\n\nUsage:\n  osmosisd query lockup module-locked-amount [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for module-locked-amount\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query lockup next-lock-id": "Query next lock id to be created\n\nUsage:\n  osmosisd query lockup next-lock-id [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for next-lock-id\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query lockup output-all-locks": "Output all locks into a json file.\nExample:\n$ osmosisd query lockup output-all-locks <max lock ID>\n\nUsage:\n  osmosisd query lockup output-all-locks <max lock ID> [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for output-all-locks\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query lockup params": "Get the params for the x/lockup module\n\nUsage:\n  osmosisd query lockup params [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for params\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query lockup synthetic-lockup-by-lock-id": "Query synthetic lock by underlying lockup id\n\nUsage:\n  osmosisd query lockup synthetic-lockup-by-lock-id [lock-id] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for synthetic-lockup-by-lock-id\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query lockup synthetic-lockups-by-lock-id": "Query synthetic lockups by lockup id (is deprecated for synthetic-lockup-by-lock-id)\n\nUsage:\n  osmosisd query lockup synthetic-lockups-by-lock-id [lock-id] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for synthetic-lockups-by-lock-id\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query lockup total-locked-of-denom": "Example:\n$ osmosisd q lockup total-locked-of-denom uosmo --min-duration=0s\n\nUsage:\n  osmosisd query lockup total-locked-of-denom [denom] [flags]\n\nFlags:\n      --grpc-addr string      the gRPC endpoint to use for this chain\n      --grpc-insecure         allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int            Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help                  help for total-locked-of-denom\n      --min-duration string   The minimum duration of token bonded. e.g. 24h, 168h, 336h (default \"336h\")\n      --node string           <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string         Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query mint": "Querying commands for the mint module\n\nUsage:\n  osmosisd query mint [command]\n  \nAvailable Commands:\n  epoch-provisions Query the current minting epoch provisions value\n  params           Query the current minting parameters\n\nUse \"osmosisd query mint [command] --help\" for more information about a command.",
  "osmosisd query mint epoch-provisions": "Query the current minting epoch provisions value\n\nUsage:\n  osmosisd query mint epoch-provisions [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for epoch-provisions\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query mint params": "Query the current minting parameters\n\nUsage:\n  osmosisd query mint params [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for params\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query packetforward": "Querying commands for the packetforward module\n\nUsage:\n  osmosisd query packetforward [command]\n\nAvailable Commands:\n  params      Query the current packetforward parameters\n\nFlags:\n  -h, --help   help for packetforward\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd query packetforward [command] --help\" for more information about a command.",
  "osmosisd query packetforward params": "Query the current packetforward parameters\n\nUsage:\n  osmosisd query packetforward params [flags]\n\nExamples:\nosmosisd query packetforward params\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for params\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query params": "Querying commands for the params module\n\nUsage:\n  osmosisd query params [flags]\n  osmosisd query params [command]\n\nAvailable Commands:\n  subspace    Query for raw parameters by subspace and key\n\nFlags:\n  -h, --help   help for params\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd query params [command] --help\" for more information about a command.",
  "osmosisd query params subspace": "Query for raw parameters by subspace and key\n\nUsage:\n  osmosisd query params subspace [subspace] [key] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for subspace\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query poolincentives": "Querying commands for the poolincentives module\n\nUsage:\n  osmosisd query poolincentives [command]\n  \nAvailable Commands:\n  distr-info                   Query distribution info\n  external-incentivized-gauges Query external incentivized gauges\n  gauge-ids                    Query the matching gauge ids and durations by pool id\n  incentivized-pools           Query incentivized pools\n  lockable-durations           Query lockable durations\n  params                       Get the params for the x/poolincentives module\n\nUse \"osmosisd query poolincentives [command] --help\" for more information about a command.",
  "osmosisd query poolincentives distr-info": "Query distribution info\n\nExample:\n$ osmosisd q poolincentives distr-info\n\nUsage:\n  osmosisd query poolincentives distr-info [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for distr-info\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query poolincentives external-incentivized-gauges": "Query external incentivized gauges\n\nExample:\n$ osmosisd q poolincentives external-incentivized-gauges\n\nUsage:\n  osmosisd query poolincentives external-incentivized-gauges [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for external-incentivized-gauges\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query poolincentives gauge-ids": "Query the matching gauge ids and durations by pool id\n\nExample:\n$ osmosisd q poolincentives gauge-ids 1\n\nUsage:\n  osmosisd query poolincentives gauge-ids [pool-id] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for gauge-ids\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query poolincentives incentivized-pools": "Query incentivized pools.\n\nExample:\n$ osmosisd q poolincentives incentivized-pools\n\nUsage:\n  osmosisd query poolincentives incentivized-pools [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for incentivized-pools\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query poolincentives lockable-durations": "Query distribution info.\n\nExample:\n$ osmosisd q poolincentives lockable-durations\n\nUsage:\n  osmosisd query poolincentives lockable-durations [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for lockable-durations\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query poolincentives params": "Get the params for the x/poolincentives module\n\nUsage:\n  osmosisd query poolincentives params [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for params\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query poolmanager": "Querying commands for the poolmanager module\n\nUsage:\n  osmosisd query poolmanager [command]\n  \nAvailable Commands:\n  all-pools                                  Query all pools on the Osmosis chain\n  estimate-single-pool-swap-exact-amount-in  Query estimate-single-pool-swap-exact-amount-in\n  estimate-single-pool-swap-exact-amount-out Query estimate-single-pool-swap-exact-amount-out\n  estimate-swap-exact-amount-in              Query estimate-swap-exact-amount-in\n  estimate-swap-exact-amount-out             Query estimate-swap-exact-amount-out\n  estimate-trade-based-on-price-impact       Query estimate-trade-based-on-price-impact\n  list-pools-by-denom                        Query list-pools-by-denom\n  num-pools                                  Query number of pools\n  params                                     Get the params for the x/poolmanager module\n  pool                                       Query pool\n  spot-price                                 Query spot-price\n  total-pool-liquidity                       Query total-pool-liquidity\n  total-volume-for-pool                      Query total-volume-for-pool\n  trading-pair-taker-fee                     Query trading pair taker fee\n\nUse \"osmosisd query poolmanager [command] --help\" for more information about a command.",
  "osmosisd query poolmanager all-pools": "Query all pools on the Osmosis chain\n\nUsage:\n  osmosisd query poolmanager all-pools [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for all-pools\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query poolmanager estimate-single-pool-swap-exact-amount-in": "Query estimate-single-pool-swap-exact-amount-in.\n\nExample:\n$ osmosisd q poolmanager estimate-single-pool-swap-exact-amount-in 1 1000stake uosmo\n\nUsage:\n  osmosisd query poolmanager estimate-single-pool-swap-exact-amount-in [pool-id] [token-in] [token-out-denom] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for estimate-single-pool-swap-exact-amount-in\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query poolmanager estimate-single-pool-swap-exact-amount-out": "Query estimate-single-pool-swap-exact-amount-out.\n\nExample:\n$ osmosisd q poolmanager estimate-single-pool-swap-exact-amount-out 1 uosmo 1000stake\n\nUsage:\n  osmosisd query poolmanager estimate-single-pool-swap-exact-amount-out [pool-id] [token-in-denom] [token-out] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for estimate-single-pool-swap-exact-amount-out\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query poolmanager estimate-swap-exact-amount-in": "Query estimate-swap-exact-amount-in.\n\nExample:\n$ osmosisd q poolmanager estimate-swap-exact-amount-in 1000stake --swap-route-pool-ids=2 --swap-route-pool-ids=3\n\nUsage:\n  osmosisd query poolmanager estimate-swap-exact-amount-in [pool-id] [token-in] [routes] [flags]\n\nFlags:\n      --grpc-addr string             the gRPC endpoint to use for this chain\n      --grpc-insecure                allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int                   Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help                         help for estimate-swap-exact-amount-in\n      --node string                  <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string                Output format (text|json) (default \"text\")\n      --swap-route-denoms string     swap route amount\n      --swap-route-pool-ids string   swap route pool id\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query poolmanager estimate-swap-exact-amount-out": "Query estimate-swap-exact-amount-out.\n\nExample:\n$ osmosisd q poolmanager estimate-swap-exact-amount-out 1000stake --swap-route-pool-ids=2 --swap-route-pool-ids=3\n\nUsage:\n  osmosisd query poolmanager estimate-swap-exact-amount-out [pool-id] [routes] [token-out] [flags]\n\nFlags:\n      --grpc-addr string             the gRPC endpoint to use for this chain\n      --grpc-insecure                allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int                   Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help                         help for estimate-swap-exact-amount-out\n      --node string                  <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string                Output format (text|json) (default \"text\")\n      --swap-route-denoms string     swap route amount\n      --swap-route-pool-ids string   swap route pool id\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query poolmanager estimate-trade-based-on-price-impact": "Query estimate-trade-based-on-price-impact\n\t\t$ osmosisd q poolmanager estimate-trade-based-on-price-impact 100uosmo stosmo  833 0.001 1.00\n\nUsage:\n  osmosisd query poolmanager estimate-trade-based-on-price-impact [from-coin] [to-coin-denom] [pool-id] [max-price-impact] [external-price] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for estimate-trade-based-on-price-impact\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query poolmanager list-pools-by-denom": "Query list-pools-by-denom\n$ osmosisd q poolmanager list-pools-by-denom uosmo\n\nUsage:\n  osmosisd query poolmanager list-pools-by-denom [denom] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for list-pools-by-denom\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query poolmanager num-pools": "Query number of pools\n\nUsage:\n  osmosisd query poolmanager num-pools [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for num-pools\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query poolmanager params": "Get the params for the x/poolmanager module\n\nUsage:\n  osmosisd query poolmanager params [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for params\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query poolmanager pool": "Query pool\n\nExample:\n$ osmosisd q poolmanager pool 1\n\nUsage:\n  osmosisd query poolmanager pool [pool-id] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for pool\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query poolmanager spot-price": "Query spot-price\n$ osmosisd q poolmanager spot-price 1 uosmo ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\n\nUsage:\n  osmosisd query poolmanager spot-price [pool-id] [base-asset-denom] [quote-asset-denom] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for spot-price\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query poolmanager total-pool-liquidity": "Query total-pool-liquidity\n\t\t$ osmosisd q poolmanager total-pool-liquidity 1\n\nUsage:\n  osmosisd query poolmanager total-pool-liquidity [pool-id] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for total-pool-liquidity\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query poolmanager total-volume-for-pool": "Query total-volume-for-pool\n\t\t$ osmosisd q poolmanager total-volume-for-pool 1\n\nUsage:\n  osmosisd query poolmanager total-volume-for-pool [pool-id] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for total-volume-for-pool\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query poolmanager trading-pair-taker-fee": "Query trading pair taker fee\n\t\t$ osmosisd q poolmanager trading-pair-taker-fee uosmo uatom\n\nUsage:\n  osmosisd query poolmanager trading-pair-taker-fee [denom_0] [denom_1] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for trading-pair-taker-fee\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query protorev": "Querying commands for the protorev module\n\nUsage:\n  osmosisd query protorev [command]\n  \nAvailable Commands:\n  admin-account             Query the admin account\n  all-profits               Query all ProtoRev profits\n  all-proto-rev             Query protocol revenue across all modules\n  all-statistics            Query all ProtoRev statistics\n  base-denoms               Query the base denoms used to construct arbitrage routes\n  developer-account         Query the developer account\n  enabled                   Query whether protorev is currently enabled\n  hot-routes                Query the ProtoRev hot routes currently being used\n  info-by-pool-type         Query the pool info used to determine how computationally expensive a route is\n  max-pool-points-per-block Query the max pool points per block\n  max-pool-points-per-tx    Query the max pool points per tx\n  number-of-trades          Query the number of cyclic arbitrage trades protorev has executed\n  params                    Query the module params\n  pool                      Query the pool id for a given denom pair stored via the highest liquidity method in ProtoRev\n  profits-by-denom          Query the profits of protorev by denom\n  statistics-by-route       Query statistics about a specific arbitrage route\n\nUse \"osmosisd query protorev [command] --help\" for more information about a command.",
  "osmosisd query protorev admin-account": "Query the admin account\n\nUsage:\n  osmosisd query protorev admin-account [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for admin-account\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query protorev all-profits": "Query all ProtoRev profits\n\nUsage:\n  osmosisd query protorev all-profits [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for all-profits\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query protorev all-proto-rev": "Query protocol revenue across all modules\n\nUsage:\n  osmosisd query protorev all-proto-rev [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for all-proto-rev\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query protorev all-statistics": "Query all ProtoRev statistics\n\nUsage:\n  osmosisd query protorev all-statistics [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for all-statistics\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query protorev base-denoms": "Query the base denoms used to construct arbitrage routes\n\nUsage:\n  osmosisd query protorev base-denoms [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for base-denoms\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query protorev developer-account": "Query the developer account\n\nUsage:\n  osmosisd query protorev developer-account [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for developer-account\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query protorev enabled": "Query whether protorev is currently enabled\n\nUsage:\n  osmosisd query protorev enabled [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for enabled\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query protorev hot-routes": "Query the ProtoRev hot routes currently being used\n\nUsage:\n  osmosisd query protorev hot-routes [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for hot-routes\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query protorev info-by-pool-type": "Query the pool info used to determine how computationally expensive a route is\n\nUsage:\n  osmosisd query protorev info-by-pool-type [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for info-by-pool-type\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query protorev max-pool-points-per-block": "Query the max pool points per block\n\nUsage:\n  osmosisd query protorev max-pool-points-per-block [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for max-pool-points-per-block\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query protorev max-pool-points-per-tx": "Query the max pool points per tx\n\nUsage:\n  osmosisd query protorev max-pool-points-per-tx [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for max-pool-points-per-tx\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query protorev number-of-trades": "Query the number of cyclic arbitrage trades protorev has executed\n\nUsage:\n  osmosisd query protorev number-of-trades [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for number-of-trades\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query protorev params": "Query the module params\n\nUsage:\n  osmosisd query protorev params [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for params\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query protorev pool": "Query the pool id for a given denom pair stored via the highest liquidity method in ProtoRev\n\nUsage:\n  osmosisd query protorev pool [base-denom] [other-denom] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for pool\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query protorev profits-by-denom": "Query the profits of protorev by denom\n\nExample:$ osmosisd q protorev profits-by-denom uosmo\n\nUsage:\n  osmosisd query protorev profits-by-denom [denom] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for profits-by-denom\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query protorev statistics-by-route": "Query statistics about a specific arbitrage route\n\nExample:$ osmosisd q protorev statistics-by-route [1,2,3]\n\nUsage:\n  osmosisd query protorev statistics-by-route [route] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for statistics-by-route\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query rate-limited-ibc": "Querying commands for the rate-limited-ibc module\n\nUsage:\n  osmosisd query rate-limited-ibc [command]\n  \nAvailable Commands:\n  params      Get the params for the x/rate-limited-ibc module\n\nUse \"osmosisd query rate-limited-ibc [command] --help\" for more information about a command.",
  "osmosisd query rate-limited-ibc params": "Get the params for the x/rate-limited-ibc module\n\nUsage:\n  osmosisd query rate-limited-ibc params [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for params\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query slashing": "Querying commands for the slashing module\n\nUsage:\n  osmosisd query slashing [flags]\n  osmosisd query slashing [command]\n\nAvailable Commands:\n  params        Query the current slashing parameters\n  signing-info  Query a validator's signing information\n  signing-infos Query signing information of all validators\n\nFlags:\n  -h, --help   help for slashing\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd query slashing [command] --help\" for more information about a command.",
  "osmosisd query slashing params": "Query genesis parameters for the slashing module:\n\n$ <appd> query slashing params\n\nUsage:\n  osmosisd query slashing params [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for params\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query slashing signing-info": "Use a validators' consensus public key to find the signing-info for that validator:\n\n$ <appd> query slashing signing-info '{\"@type\":\"/cosmos.crypto.ed25519.PubKey\",\"key\":\"OauFcTKbN5Lx3fJL689cikXBqe+hcp6Y+x0rYUdR9Jk=\"}'\n\nUsage:\n  osmosisd query slashing signing-info [validator-conspub] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for signing-info\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query slashing signing-infos": "signing infos of validators:\n\n$ <appd> query slashing signing-infos\n\nUsage:\n  osmosisd query slashing signing-infos [flags]\n\nFlags:\n      --count-total        count total number of records in signing infos to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for signing-infos\n      --limit uint         pagination limit of signing infos to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of signing infos to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of signing infos to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of signing infos to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query staking": "Querying commands for the staking module\n\nUsage:\n  osmosisd query staking [flags]\n  osmosisd query staking [command]\n\nAvailable Commands:\n  delegation                 Query a delegation based on address and validator address\n  delegations                Query all delegations made by one delegator\n  delegations-to             Query all delegations made to one validator\n  historical-info            Query historical info at given height\n  params                     Query the current staking parameters information\n  pool                       Query the current staking pool values\n  redelegation               Query a redelegation record based on delegator and a source and destination validator address\n  redelegations              Query all redelegations records for one delegator\n  redelegations-from         Query all outgoing redelegatations from a validator\n  unbonding-delegation       Query an unbonding-delegation record based on delegator and validator address\n  unbonding-delegations      Query all unbonding-delegations records for one delegator\n  unbonding-delegations-from Query all unbonding delegatations from a validator\n  validator                  Query a validator\n  validators                 Query for all validators\n\nFlags:\n  -h, --help   help for staking\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd query staking [command] --help\" for more information about a command.",
  "osmosisd query staking delegation": "Query delegations for an individual delegator on an individual validator.\n\nExample:\n$ osmosisd query staking delegation osmo1gghjut3ccd8ay0zduzj64hwre2fxs9ld75ru9p osmovaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\n\nUsage:\n  osmosisd query staking delegation [delegator-addr] [validator-addr] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for delegation\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query staking delegations": "Query delegations for an individual delegator on all validators.\n\nExample:\n$ osmosisd query staking delegations osmo1gghjut3ccd8ay0zduzj64hwre2fxs9ld75ru9p\n\nUsage:\n  osmosisd query staking delegations [delegator-addr] [flags]\n\nFlags:\n      --count-total        count total number of records in delegations to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for delegations\n      --limit uint         pagination limit of delegations to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of delegations to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of delegations to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of delegations to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query staking delegations-to": "Query delegations on an individual validator.\n\nExample:\n$ osmosisd query staking delegations-to osmovaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\n\nUsage:\n  osmosisd query staking delegations-to [validator-addr] [flags]\n\nFlags:\n      --count-total        count total number of records in validator delegations to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for delegations-to\n      --limit uint         pagination limit of validator delegations to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of validator delegations to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of validator delegations to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of validator delegations to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query staking historical-info": "Query historical info at given height.\n\nExample:\n$ osmosisd query staking historical-info 5\n\nUsage:\n  osmosisd query staking historical-info [height] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for historical-info\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query staking params": "Query values set as staking parameters.\n\nExample:\n$ osmosisd query staking params\n\nUsage:\n  osmosisd query staking params [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for params\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query staking pool": "Query values for amounts stored in the staking pool.\n\nExample:\n$ osmosisd query staking pool\n\nUsage:\n  osmosisd query staking pool [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for pool\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query staking redelegation": "Query a redelegation record for an individual delegator between a source and destination validator.\n\nExample:\n$ osmosisd query staking redelegation osmo1gghjut3ccd8ay0zduzj64hwre2fxs9ld75ru9p osmovaloper1l2rsakp388kuv9k8qzq6lrm9taddae7fpx59wm osmovaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\n\nUsage:\n  osmosisd query staking redelegation [delegator-addr] [src-validator-addr] [dst-validator-addr] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for redelegation\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query staking redelegations": "Query all redelegation records for an individual delegator.\n\nExample:\n$ osmosisd query staking redelegation osmo1gghjut3ccd8ay0zduzj64hwre2fxs9ld75ru9p\n\nUsage:\n  osmosisd query staking redelegations [delegator-addr] [flags]\n\nFlags:\n      --count-total        count total number of records in delegator redelegations to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for redelegations\n      --limit uint         pagination limit of delegator redelegations to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of delegator redelegations to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of delegator redelegations to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of delegator redelegations to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query staking redelegations-from": "Query delegations that are redelegating _from_ a validator.\n\nExample:\n$ osmosisd query staking redelegations-from osmovaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\n\nUsage:\n  osmosisd query staking redelegations-from [validator-addr] [flags]\n\nFlags:\n      --count-total        count total number of records in validator redelegations to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for redelegations-from\n      --limit uint         pagination limit of validator redelegations to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of validator redelegations to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of validator redelegations to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of validator redelegations to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query staking unbonding-delegation": "Query unbonding delegations for an individual delegator on an individual validator.\n\nExample:\n$ osmosisd query staking unbonding-delegation osmo1gghjut3ccd8ay0zduzj64hwre2fxs9ld75ru9p osmovaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\n\nUsage:\n  osmosisd query staking unbonding-delegation [delegator-addr] [validator-addr] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for unbonding-delegation\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query staking unbonding-delegations": "Query unbonding delegations for an individual delegator.\n\nExample:\n$ osmosisd query staking unbonding-delegations osmo1gghjut3ccd8ay0zduzj64hwre2fxs9ld75ru9p\n\nUsage:\n  osmosisd query staking unbonding-delegations [delegator-addr] [flags]\n\nFlags:\n      --count-total        count total number of records in unbonding delegations to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for unbonding-delegations\n      --limit uint         pagination limit of unbonding delegations to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of unbonding delegations to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of unbonding delegations to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of unbonding delegations to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query staking unbonding-delegations-from": "Query delegations that are unbonding _from_ a validator.\n\nExample:\n$ osmosisd query staking unbonding-delegations-from osmovaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\n\nUsage:\n  osmosisd query staking unbonding-delegations-from [validator-addr] [flags]\n\nFlags:\n      --count-total        count total number of records in unbonding delegations to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for unbonding-delegations-from\n      --limit uint         pagination limit of unbonding delegations to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of unbonding delegations to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of unbonding delegations to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of unbonding delegations to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query staking validator": "Query details about an individual validator.\n\nExample:\n$ osmosisd query staking validator osmovaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\n\nUsage:\n  osmosisd query staking validator [validator-addr] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for validator\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query staking validators": "Query details about all validators on a network.\n\nExample:\n$ osmosisd query staking validators\n\nUsage:\n  osmosisd query staking validators [flags]\n\nFlags:\n      --count-total        count total number of records in validators to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for validators\n      --limit uint         pagination limit of validators to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of validators to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of validators to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of validators to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query superfluid": "Querying commands for the superfluid module\n\nUsage:\n  osmosisd query superfluid [command]\n  \nAvailable Commands:\n  all-intermediary-accounts            Query all superfluid intermediary accounts\n  all-superfluid-assets                Query all superfluid assets\n  asset-multiplier                     Query asset multiplier by denom\n  connected-intermediary-account       Query connected intermediary account\n  params                               Query the current superfluid parameters\n  superfluid-delegation-amount         Query coins superfluid delegated for a delegator, validator, denom\n  superfluid-delegation-by-delegator   Query coins superfluid delegated for the specified delegator\n  superfluid-undelegation-by-delegator Query coins superfluid undelegated for the specified delegator\n  total-delegation-by-delegator        Query both superfluid delegation and normal delegation\n  total-superfluid-delegations         Query total amount of osmo delegated via superfluid staking\n  unpool-whitelist                     Query whitelisted pool ids to unpool\n\nUse \"osmosisd query superfluid [command] --help\" for more information about a command.",
  "osmosisd query superfluid all-intermediary-accounts": "Query all superfluid intermediary accounts\n\nUsage:\n  osmosisd query superfluid all-intermediary-accounts [flags]\n\nFlags:\n      --count-total        count total number of records in all-intermediary-accounts to query for\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for all-intermediary-accounts\n      --limit uint         pagination limit of all-intermediary-accounts to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of all-intermediary-accounts to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of all-intermediary-accounts to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of all-intermediary-accounts to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query superfluid all-superfluid-assets": "Query all superfluid assets\n\nUsage:\n  osmosisd query superfluid all-superfluid-assets [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for all-superfluid-assets\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query superfluid asset-multiplier": "Query asset multiplier by denom\n\nExample:\n$ osmosisd q superfluid asset-multiplier gamm/pool/1\n\nUsage:\n  osmosisd query superfluid asset-multiplier [denom] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for asset-multiplier\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query superfluid connected-intermediary-account": "Query connected intermediary account\n\nExample:\n$ osmosisd q superfluid connected-intermediary-account 1\n\nUsage:\n  osmosisd query superfluid connected-intermediary-account [lock-id] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for connected-intermediary-account\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query superfluid params": "Query parameters for the superfluid module:\n\n$ <appd> query superfluid params\n\nUsage:\n  osmosisd query superfluid params [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for params\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query superfluid superfluid-delegation-amount": "Query coins superfluid delegated for a delegator, validator, denom\n\nUsage:\n  osmosisd query superfluid superfluid-delegation-amount [delegator-address] [validator-address] [denom] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for superfluid-delegation-amount\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query superfluid superfluid-delegation-by-delegator": "Query coins superfluid delegated for the specified delegator\n\nUsage:\n  osmosisd query superfluid superfluid-delegation-by-delegator [delegator-address] [validator-address] [denom] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for superfluid-delegation-by-delegator\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query superfluid superfluid-undelegation-by-delegator": "Query coins superfluid undelegated for the specified delegator\n\nUsage:\n  osmosisd query superfluid superfluid-undelegation-by-delegator [delegator-address] [denom] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for superfluid-undelegation-by-delegator\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query superfluid total-delegation-by-delegator": "Query both superfluid delegation and normal delegation\n\nUsage:\n  osmosisd query superfluid total-delegation-by-delegator [delegator-address] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for total-delegation-by-delegator\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query superfluid total-superfluid-delegations": "Query total amount of osmo delegated via superfluid staking\n\nUsage:\n  osmosisd query superfluid total-superfluid-delegations [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for total-superfluid-delegations\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query superfluid unpool-whitelist": "Query whitelisted pool ids to unpool\n\nUsage:\n  osmosisd query superfluid unpool-whitelist [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for unpool-whitelist\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query tendermint-validator-set": "Get the full tendermint validator set at given height\n\nUsage:\n  osmosisd query tendermint-validator-set [height] [flags]\n\nFlags:\n  -h, --help            help for tendermint-validator-set\n      --limit int       Query number of results returned per page (default 100)\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n      --page int        Query a specific page of paginated results (default 1)\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query tokenfactory": "Querying commands for the tokenfactory module\n\nUsage:\n  osmosisd query tokenfactory [command]\n  \nAvailable Commands:\n  denom-authority-metadata Get the authority metadata for a specific denom\n  denoms-from-creator      Returns a list of all tokens created by a specific creator address\n  params                   Get the params for the x/tokenfactory module\n\nUse \"osmosisd query tokenfactory [command] --help\" for more information about a command.",
  "osmosisd query tokenfactory denom-authority-metadata": "Get the authority metadata for a specific denom\n\nExample:\n\t\t$ osmosisd q tokenfactory uatom\n\nUsage:\n  osmosisd query tokenfactory denom-authority-metadata [denom] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for denom-authority-metadata\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query tokenfactory denoms-from-creator": "Returns a list of all tokens created by a specific creator address\n\nExample:\n\t\t$ osmosisd q tokenfactory <address>\n\nUsage:\n  osmosisd query tokenfactory denoms-from-creator [creator] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for denoms-from-creator\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query tokenfactory params": "Get the params for the x/tokenfactory module\n\nUsage:\n  osmosisd query tokenfactory params [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for params\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query twap": "Querying commands for the twap module\n\nUsage:\n  osmosisd query twap [command]\n  \nAvailable Commands:\n  arithmetic  Query arithmetic twap\n  geometric   Query geometric twap\n\nUse \"osmosisd query twap [command] --help\" for more information about a command.",
  "osmosisd query twap arithmetic": "Query arithmetic twap for pool. Start time must be unix time. End time can be unix time or duration.\n\nExample:\n$ osmosisd q twap arithmetic 1 uosmo 1667088000 24h\n$ osmosisd q twap arithmetic 1 uosmo 1667088000 1667174400\n\nUsage:\n  osmosisd query twap arithmetic [poolid] [base denom] [start time] [end time] [flags]\n\nAliases:\n  arithmetic, twap\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for arithmetic\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query twap geometric": "Query geometric twap for pool. Start time must be unix time. End time can be unix time or duration.\n\nExample:\n$ osmosisd q twap geometric 1 uosmo 1667088000 24h\n$ osmosisd q twap geometric 1 uosmo 1667088000 1667174400\n\nUsage:\n  osmosisd query twap geometric [poolid] [base denom] [start time] [end time] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for geometric\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query tx": "Example:\n$ osmosisd query tx <hash>\n$ osmosisd query tx --type=acc_seq <addr>/<sequence>\n$ osmosisd query tx --type=signature <sig1_base64>,<sig2_base64...>\n\nUsage:\n  osmosisd query tx --type=[hash|acc_seq|signature] [hash|acc_seq|signature] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for tx\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n      --type string        The type to be used when querying tx, can be one of \"hash\", \"acc_seq\", \"signature\" (default \"hash\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query txfees": "Querying commands for the txfees module\n\nUsage:\n  osmosisd query txfees [command]\n  \nAvailable Commands:\n  base-denom    Query the base fee denom\n  base-fee      Query the eip base fee.\n  denom-pool-id Query the pool id associated with a specific whitelisted fee token\n  fee-tokens    Query the list of non-basedenom fee tokens and their associated pool ids\n\nUse \"osmosisd query txfees [command] --help\" for more information about a command.",
  "osmosisd query txfees base-denom": "Query the base fee denom\n\nExample:\n$ osmosisd q txfees base-denom\n\nUsage:\n  osmosisd query txfees base-denom [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for base-denom\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query txfees base-fee": "Query the eip base fee.\n\nExample:\n$ osmosisd q txfees base-fee\n\nUsage:\n  osmosisd query txfees base-fee [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for base-fee\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query txfees denom-pool-id": "Query the pool id associated with a specific whitelisted fee token\n\nExample:\n$ osmosisd q txfees denom-pool-id [denom]\n\nUsage:\n  osmosisd query txfees denom-pool-id [denom] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for denom-pool-id\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query txfees fee-tokens": "Query the list of non-basedenom fee tokens and their associated pool ids\n\nExample:\n$ osmosisd q txfees fee-tokens\n\nUsage:\n  osmosisd query txfees fee-tokens [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for fee-tokens\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query txs": "Search for transactions that match the exact given events where results are paginated.\nEach event takes the form of '{eventType}.{eventAttribute}={value}'. Please refer\nto each module's documentation for the full set of events to query for. Each module\ndocuments its respective events under 'xx_events.md'.\n\nExample:\n$ osmosisd query txs --events 'message.sender=cosmos1...&message.action=withdraw_delegator_reward' --page 1 --limit 30\n\nUsage:\n  osmosisd query txs [flags]\n\nFlags:\n      --events string      list of transaction events in the form of {eventType}.{eventAttribute}={value}\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for txs\n      --limit int          Query number of transactions results per page returned (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page int           Query a specific page of paginated results (default 1)\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query upgrade": "Querying commands for the upgrade module\n\nUsage:\n  osmosisd query upgrade [command]\n\nAvailable Commands:\n  applied         block header for height at which a completed upgrade was applied\n  module_versions get the list of module versions\n  plan            get upgrade plan (if one exists)\n\nFlags:\n  -h, --help   help for upgrade\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd query upgrade [command] --help\" for more information about a command.",
  "osmosisd query upgrade applied": "If upgrade-name was previously executed on the chain, this returns the header for the block at which it was applied.\nThis helps a client determine which binary was valid over a given range of blocks, as well as more context to understand past migrations.\n\nUsage:\n  osmosisd query upgrade applied [upgrade-name] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for applied\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query upgrade module_versions": "Gets a list of module names and their respective consensus versions.\nFollowing the command with a specific module name will return only\nthat module's information.\n\nUsage:\n  osmosisd query upgrade module_versions [optional module_name] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for module_versions\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query upgrade plan": "Gets the currently scheduled upgrade plan, if one exists\n\nUsage:\n  osmosisd query upgrade plan [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for plan\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query valsetpref": "Querying commands for the valsetpref module\n\nUsage:\n  osmosisd query valsetpref [command]\n  \nAvailable Commands:\n  val-set     Query the validator set for a specific user address\n\nUse \"osmosisd query valsetpref [command] --help\" for more information about a command.",
  "osmosisd query valsetpref val-set": "Query the validator set for a specific user address\n\nUsage:\n  osmosisd query valsetpref val-set [address] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for val-set\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query wasm": "Querying commands for the wasm module\n\nUsage:\n  osmosisd query wasm [flags]\n  osmosisd query wasm [command]\n\nAvailable Commands:\n  build-address             build contract address\n  code                      Downloads wasm bytecode for given code id\n  code-info                 Prints out metadata of a code id\n  contract                  Prints out metadata of a contract given its address\n  contract-history          Prints out the code history for a contract given its address\n  contract-state            Querying commands for the wasm module\n  libwasmvm-version         Get libwasmvm version\n  list-code                 List all wasm bytecode on the chain\n  list-contract-by-code     List wasm all bytecode on the chain for given code id\n  list-contracts-by-creator List all contracts by creator\n  params                    Query the current wasm parameters\n  pinned                    List all pinned code ids\n\nFlags:\n  -h, --help   help for wasm\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd query wasm [command] --help\" for more information about a command.",
  "osmosisd query wasm build-address": "build contract address\n\nUsage:\n  osmosisd query wasm build-address [code-hash] [creator-address] [salt-hex-encoded] [json_encoded_init_args (required when set as fixed)] [flags]\n\nAliases:\n  build-address, address\n\nFlags:\n      --ascii   ascii encoded salt\n      --b64     base64 encoded salt\n  -h, --help    help for build-address\n      --hex     hex encoded salt\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query wasm code": "Downloads wasm bytecode for given code id\n\nUsage:\n  osmosisd query wasm code [code_id] [output filename] [flags]\n\nAliases:\n  code, source-code, source\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for code\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query wasm code-info": "Prints out metadata of a code id\n\nUsage:\n  osmosisd query wasm code-info [code_id] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for code-info\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query wasm contract": "Prints out metadata of a contract given its address\n\nUsage:\n  osmosisd query wasm contract [bech32_address] [flags]\n\nAliases:\n  contract, meta, c\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for contract\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query wasm contract-history": "Prints out the code history for a contract given its address\n\nUsage:\n  osmosisd query wasm contract-history [bech32_address] [flags]\n\nAliases:\n  contract-history, history, hist, ch\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for contract-history\n      --limit uint         pagination limit of contract history to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page-key string    pagination page-key of contract history to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query wasm contract-state": "Querying commands for the wasm module\n\nUsage:\n  osmosisd query wasm contract-state [flags]\n  osmosisd query wasm contract-state [command]\n\nAliases:\n  contract-state, state, cs, s\n\nAvailable Commands:\n  all         Prints out all internal state of a contract given its address\n  raw         Prints out internal state for key of a contract given its address\n  smart       Calls contract with given address with query data and prints the returned result\n\nFlags:\n  -h, --help   help for contract-state\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd query wasm contract-state [command] --help\" for more information about a command.",
  "osmosisd query wasm contract-state all": "Prints out all internal state of a contract given its address\n\nUsage:\n  osmosisd query wasm contract-state all [bech32_address] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for all\n      --limit uint         pagination limit of contract state to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page-key string    pagination page-key of contract state to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query wasm contract-state raw": "Prints out internal state for of a contract given its address\n\nUsage:\n  osmosisd query wasm contract-state raw [bech32_address] [key] [flags]\n\nFlags:\n      --ascii              ascii encoded key argument\n      --b64                base64 encoded key argument\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for raw\n      --hex                hex encoded key argument\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query wasm contract-state smart": "Calls contract with given address with query data and prints the returned result\n\nUsage:\n  osmosisd query wasm contract-state smart [bech32_address] [query] [flags]\n\nFlags:\n      --ascii              ascii encoded query argument\n      --b64                base64 encoded query argument\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for smart\n      --hex                hex encoded query argument\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query wasm libwasmvm-version": "Get libwasmvm version\n\nUsage:\n  osmosisd query wasm libwasmvm-version [flags]\n\nAliases:\n  libwasmvm-version, lib-version\n\nFlags:\n  -h, --help   help for libwasmvm-version\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query wasm list-code": "List all wasm bytecode on the chain\n\nUsage:\n  osmosisd query wasm list-code [flags]\n\nAliases:\n  list-code, list-codes, codes, lco\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for list-code\n      --limit uint         pagination limit of list codes to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page-key string    pagination page-key of list codes to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query wasm list-contract-by-code": "List wasm all bytecode on the chain for given code id\n\nUsage:\n  osmosisd query wasm list-contract-by-code [code_id] [flags]\n\nAliases:\n  list-contract-by-code, list-contracts-by-code, list-contracts, contracts, lca\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for list-contract-by-code\n      --limit uint         pagination limit of list contracts by code to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page-key string    pagination page-key of list contracts by code to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query wasm list-contracts-by-creator": "List all contracts by creator\n\nUsage:\n  osmosisd query wasm list-contracts-by-creator [creator] [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for list-contracts-by-creator\n      --limit uint         pagination limit of list contracts by creator to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page-key string    pagination page-key of list contracts by creator to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query wasm params": "Query the current wasm parameters\n\nUsage:\n  osmosisd query wasm params [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for params\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd query wasm pinned": "List all pinned code ids\n\nUsage:\n  osmosisd query wasm pinned [flags]\n\nFlags:\n      --grpc-addr string   the gRPC endpoint to use for this chain\n      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for pinned\n      --limit uint         pagination limit of list codes to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page-key string    pagination page-key of list codes to query for\n      --reverse            results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd rollback": "A state rollback is performed to recover from an incorrect application state transition,\nwhen Tendermint has persisted an incorrect app hash and is thus unable to make\nprogress. Rollback overwrites a state at height n with the state at height n - 1.\nThe application also rolls back to height n - 1. No blocks are removed, so upon\nrestarting Tendermint the transactions in block n will be re-executed against the\napplication.\n\nUsage:\n  osmosisd rollback [flags]\n\nFlags:\n      --hard          remove last block as well as state\n  -h, --help          help for rollback\n      --home string   The application home directory (default \"/home/ubuntu/.osmosisd\")\n\nGlobal Flags:\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd rosetta": "spin up a rosetta server\n\nUsage:\n  osmosisd rosetta [flags]\n\nFlags:\n      --addr string                the address rosetta will bind to (default \":8080\")\n      --blockchain string          the blockchain type (default \"app\")\n      --denom-to-suggest string    default denom for fee suggestion (default \"uatom\")\n      --enable-fee-suggestion      enable default fee suggestion\n      --gas-to-suggest int         default gas for fee suggestion (default 200000)\n      --grpc string                the app gRPC endpoint (default \"localhost:9090\")\n  -h, --help                       help for rosetta\n      --network string             the network name (default \"network\")\n      --offline                    run rosetta only with construction API\n      --prices-to-suggest string   default prices for fee suggestion (default \"1uatom,1stake\")\n      --retries int                the number of retries that will be done before quitting (default 5)\n      --tendermint string          the tendermint rpc endpoint, without tcp:// (default \"localhost:26657\")\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd set-env": "Set home environment variables for commands\nExample:\n\tosmosisd set-env mainnet\n\tosmosisd set-env testnet\n\tosmosisd set-env localnet [optional-chain-id]\n\tosmosisd set-env $HOME/.custom-dir\n\nUsage:\n  osmosisd set-env [new env] [flags]\n\nFlags:\n  -h, --help   help for set-env\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd staked-to-csv": "Export a airdrop csv from a provided balances export (from export-derive-balances)\nExample:\n\tosmosisd staked-to-csv ../balances.json ../airdrop.csv\n\nUsage:\n  osmosisd staked-to-csv [input-balances-file] [output-airdrop-csv] [flags]\n\nFlags:\n  -h, --help                       help for staked-to-csv\n      --minimum-stake-amount int   Specify minimum amount (non inclusive) accounts must stake to be included in airdrop (default: 0)\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd start": "Run the full node application with Tendermint in or out of process. By\ndefault, the application will run with Tendermint in process.\n\nPruning options can be provided via the '--pruning' flag or alternatively with '--pruning-keep-recent', and\n'pruning-interval' together.\n\nFor '--pruning' the options are as follows:\n\ndefault: the last 362880 states are kept, pruning at 10 block intervals\nnothing: all historic states will be saved, nothing will be deleted (i.e. archiving node)\neverything: 2 latest states will be kept; pruning at 10 block intervals.\ncustom: allow pruning options to be manually specified through 'pruning-keep-recent', and 'pruning-interval'\n\nNode halting configurations exist in the form of two flags: '--halt-height' and '--halt-time'. During\nthe ABCI Commit phase, the node will check if the current block height is greater than or equal to\nthe halt-height or if the current block time is greater than or equal to the halt-time. If so, the\nnode will attempt to gracefully shutdown and the block will not be committed. In addition, the node\nwill not be able to commit subsequent blocks.\n\nFor profiling and benchmarking purposes, CPU profiling can be enabled via the '--cpu-profile' flag\nwhich accepts a path for the resulting pprof file.\n\nThe node may be started in a 'query only' mode where only the gRPC and JSON HTTP\nAPI services are enabled via the 'grpc-only' flag. In this mode, Tendermint is\nbypassed and can be used when legacy queries are needed after an on-chain upgrade\nis performed. Note, when enabled, gRPC will also be automatically enabled.\n\nUsage:\n  osmosisd start [flags]\n\nFlags:\n      --abci string                                     specify abci transport (socket | grpc) (default \"socket\")\n      --address string                                  Listen address (default \"tcp://0.0.0.0:26658\")\n      --api.address string                              the API server address to listen on (default \"tcp://localhost:1317\")\n      --api.enable                                      Define if the API server should be enabled\n      --api.enabled-unsafe-cors                         Define if CORS should be enabled (unsafe - use it at your own risk)\n      --api.max-open-connections uint                   Define the number of maximum open connections (default 1000)\n      --api.rpc-max-body-bytes uint                     Define the Tendermint maximum request body (in bytes) (default 1000000)\n      --api.rpc-read-timeout uint                       Define the Tendermint RPC read timeout (in seconds) (default 10)\n      --api.rpc-write-timeout uint                      Define the Tendermint RPC write timeout (in seconds)\n      --api.swagger                                     Define if swagger documentation should automatically be registered (Note: the API must also be enabled)\n      --block_sync                                      sync the block chain using the blocksync algorithm (default true)\n      --consensus.create_empty_blocks                   set this to false to only produce blocks when there are txs or when the AppHash changes (default true)\n      --consensus.create_empty_blocks_interval string   the possible interval between empty blocks (default \"0s\")\n      --consensus.double_sign_check_height int          how many blocks to look back to check existence of the node's consensus votes before joining consensus\n      --cpu-profile string                              Enable CPU profiling and write to the provided file\n      --db_backend string                               database backend: goleveldb | cleveldb | boltdb | rocksdb | badgerdb (default \"goleveldb\")\n      --db_dir string                                   database directory (default \"data\")\n      --genesis_hash bytesHex                           optional SHA-256 hash of the genesis file\n      --grpc-only                                       Start the node in gRPC query only mode (no Tendermint process is started)\n      --grpc-web.address string                         The gRPC-Web server address to listen on (default \"localhost:9091\")\n      --grpc-web.enable                                 Define if the gRPC-Web server should be enabled. (Note: gRPC must also be enabled) (default true)\n      --grpc.address string                             the gRPC server address to listen on (default \"localhost:9090\")\n      --grpc.enable                                     Define if the gRPC server should be enabled (default true)\n      --halt-height uint                                Block height at which to gracefully halt the chain and shutdown the node\n      --halt-time uint                                  Minimum block time (in Unix seconds) at which to gracefully halt the chain and shutdown the node\n  -h, --help                                            help for start\n      --home string                                     The application home directory (default \"/home/ubuntu/.osmosisd\")\n      --iavl-disable-fastnode                           Disable fast node for IAVL tree\n      --inter-block-cache                               Enable inter-block caching (default true)\n      --inv-check-period uint                           Assert registered invariants every N blocks\n      --mempool.max-txs int                             Sets MaxTx value for the app-side mempool\n      --min-retain-blocks uint                          Minimum block height offset during ABCI commit to prune Tendermint blocks\n      --minimum-gas-prices string                       Minimum gas prices to accept for transactions; Any fee in a tx must meet this minimum (e.g. 0.01photino;0.0001stake)\n      --moniker string                                  node name (default \"pistachio\")\n      --p2p.external-address string                     ip:port address to advertise to peers for them to dial\n      --p2p.laddr string                                node listen address. (0.0.0.0:0 means any interface, any port) (default \"tcp://0.0.0.0:26656\")\n      --p2p.persistent_peers string                     comma-delimited ID@host:port persistent peers\n      --p2p.pex                                         enable/disable Peer-Exchange (default true)\n      --p2p.private_peer_ids string                     comma-delimited private peer IDs\n      --p2p.seed_mode                                   enable/disable seed mode\n      --p2p.seeds string                                comma-delimited ID@host:port seed nodes\n      --p2p.unconditional_peer_ids string               comma-delimited IDs of unconditional peers\n      --priv_validator_laddr string                     socket address to listen on for connections from external priv_validator process\n      --proxy_app string                                proxy app address, or one of: 'kvstore', 'persistent_kvstore' or 'noop' for local testing. (default \"tcp://127.0.0.1:26658\")\n      --pruning string                                  Pruning strategy (default|nothing|everything|custom) (default \"default\")\n      --pruning-interval uint                           Height interval at which pruned heights are removed from disk (ignored if pruning is not 'custom')\n      --pruning-keep-recent uint                        Number of recent heights to keep on disk (ignored if pruning is not 'custom')\n      --rpc.grpc_laddr string                           GRPC listen address (BroadcastTx only). Port required\n      --rpc.laddr string                                RPC listen address. Port required (default \"tcp://127.0.0.1:26657\")\n      --rpc.pprof_laddr string                          pprof listen address (https://golang.org/pkg/net/http/pprof)\n      --rpc.unsafe                                      enabled unsafe rpc methods\n      --state-sync.snapshot-interval uint               State sync snapshot interval\n      --state-sync.snapshot-keep-recent uint32          State sync snapshot to keep (default 2)\n      --trace                                           Provide full stack traces for errors in ABCI Log\n      --trace-store string                              Enable KVStore tracing to an output file\n      --transport string                                Transport protocol: socket, grpc (default \"socket\")\n      --unsafe-skip-upgrades ints                       Skip a set of upgrade heights to continue the old binary\n      --wasm.memory_cache_size uint32                   Sets the size in MiB (NOT bytes) of an in-memory cache for Wasm modules. Set to 0 to disable. (default 1000)\n      --wasm.query_gas_limit uint                       Set the max gas that can be spent on executing a query with a Wasm contract (default 3000000)\n      --wasm.simulation_gas_limit string                Set the max gas that can be spent when executing a simulation TX\n      --wasm.skip_wasmvm_version_check                  Skip check that ensures that libwasmvm version (the Rust project) and wasmvm version (the Go project) match\n      --with-tendermint                                 Run abci app embedded in-process with tendermint (default true)\n      --x-crisis-skip-assert-invariants                 Skip x/crisis invariants check on startup\n\nGlobal Flags:\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")",
  "osmosisd status": "Query remote node for status\n\nUsage:\n  osmosisd status [flags]\n\nFlags:\n  -h, --help          help for status\n  -n, --node string   Node to connect to (default \"tcp://localhost:26657\")\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tendermint": "Tendermint subcommands\n\nUsage:\n  osmosisd tendermint [command]\n\nAliases:\n  tendermint, comet, cometbft\n\nAvailable Commands:\n  bootstrap-state  Bootstrap CometBFT state at an arbitrary block height using a light client\n  reset-state      Remove all the data and WAL\n  show-address     Shows this node's tendermint validator consensus address\n  show-node-id     Show this node's ID\n  show-validator   Show this node's tendermint validator info\n  unsafe-reset-all (unsafe) Remove all the data and WAL, reset this node's validator to genesis state\n  version          Print tendermint libraries' version\n\nFlags:\n  -h, --help   help for tendermint\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd tendermint [command] --help\" for more information about a command.",
  "osmosisd tendermint bootstrap-state": "Bootstrap CometBFT state at an arbitrary block height using a light client\n\nUsage:\n  osmosisd tendermint bootstrap-state [flags]\n\nFlags:\n      --height int   Block height to bootstrap state at, if not provided it uses the latest block height in app state\n  -h, --help         help for bootstrap-state\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tendermint reset-state": "Remove all the data and WAL\n\nUsage:\n  osmosisd tendermint reset-state [flags]\n\nAliases:\n  reset-state, reset_state\n\nFlags:\n  -h, --help   help for reset-state\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tendermint show-address": "Shows this node's tendermint validator consensus address\n\nUsage:\n  osmosisd tendermint show-address [flags]\n\nFlags:\n  -h, --help   help for show-address\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tendermint show-node-id": "Show this node's ID\n\nUsage:\n  osmosisd tendermint show-node-id [flags]\n\nFlags:\n  -h, --help   help for show-node-id\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tendermint show-validator": "Show this node's tendermint validator info\n\nUsage:\n  osmosisd tendermint show-validator [flags]\n\nFlags:\n  -h, --help   help for show-validator\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tendermint unsafe-reset-all": "(unsafe) Remove all the data and WAL, reset this node's validator to genesis state\n\nUsage:\n  osmosisd tendermint unsafe-reset-all [flags]\n\nAliases:\n  unsafe-reset-all, unsafe_reset_all\n\nFlags:\n  -h, --help             help for unsafe-reset-all\n      --keep-addr-book   keep the address book intact\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tendermint version": "Print protocols' and libraries' version numbers against which this app has been compiled.\n\nUsage:\n  osmosisd tendermint version [flags]\n\nFlags:\n  -h, --help   help for version\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd testnet": "testnet will create \"v\" number of directories and populate each with\nnecessary files (private validator, genesis, config, etc.).\n\nNote, strict routability for addresses is turned off in the config file.\n\nExample:\n\tosmosisd testnet --v 4 --output-dir ./output --starting-ip-address 192.168.10.2\n\nUsage:\n  osmosisd testnet [flags]\n\nFlags:\n      --chain-id string              genesis file chain-id, if left blank will be randomly created\n  -h, --help                         help for testnet\n      --key-algorithm string         Key signing algorithm to generate keys for (default \"secp256k1\")\n      --keyring-backend string       Select keyring's backend (os|file|test) (default \"os\")\n      --minimum-gas-prices string    Minimum gas prices to accept for transactions; All fees in a tx must meet this minimum (e.g. 0.01photino,0.001stake) (default \"0.000006uosmo\")\n      --node-daemon-home string      Home directory of the node's daemon configuration (default \"osmosisd\")\n      --node-dir-prefix string       Prefix the directory name for each node with (node results in node0, node1, ...) (default \"node\")\n  -o, --output-dir string            Directory to store initialization data for the testnet (default \"./mytestnet\")\n      --starting-ip-address string   Starting IP address (192.168.0.1 results in persistent peers list ID0@192.168.0.1:46656, ID1@192.168.0.2:46656, ...) (default \"192.168.0.1\")\n      --v int                        Number of validators to initialize the testnet with (default 4)\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx": "Transactions subcommands\n\nUsage:\n  osmosisd tx [flags]\n  osmosisd tx [command]\n\nAvailable Commands:\n                        \n  authz                 Authorization transactions subcommands\n  bank                  Bank transaction subcommands\n  broadcast             Broadcast transactions generated offline\n  concentratedliquidity concentratedliquidity transactions subcommands\n  cosmwasmpool          cosmwasmpool transactions subcommands\n  crisis                Crisis transactions subcommands\n  decode                Decode a binary encoded transaction string\n  distribution          Distribution transactions subcommands\n  encode                Encode transactions generated offline\n  evidence              Evidence transaction subcommands\n  gamm                  gamm transactions subcommands\n  gov                   Governance transactions subcommands\n  ibc                   IBC transaction subcommands\n  ibc-transfer          IBC fungible token transfer transaction subcommands\n  incentives            incentives transactions subcommands\n  interchain-accounts   IBC interchain accounts transaction subcommands\n  lockup                lockup transactions subcommands\n  multi-sign            Generate multisig signatures for transactions generated offline\n  poolmanager           poolmanager transactions subcommands\n  protorev              protorev transactions subcommands\n  sign                  Sign a transaction generated offline\n  sign-batch            Sign transaction batch files\n  slashing              Slashing transaction subcommands\n  staking               Staking transaction subcommands\n  superfluid            superfluid transactions subcommands\n  tokenfactory          tokenfactory transactions subcommands\n  txfees                txfees transactions subcommands\n  validate-signatures   validate transactions signatures\n  valsetpref            valsetpref transactions subcommands\n  vesting               Vesting transaction subcommands\n  wasm                  Wasm transaction subcommands\n\nFlags:\n      --chain-id string   The network chain ID\n  -h, --help              help for tx\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nAdditional help topics:\n  osmosisd tx upgrade      Upgrade transaction subcommands\n\nUse \"osmosisd tx [command] --help\" for more information about a command.",
  "osmosisd tx authz": "Authorize and revoke access to execute transactions on behalf of your address\n\nUsage:\n  osmosisd tx authz [flags]\n  osmosisd tx authz [command]\n\nAvailable Commands:\n  exec        execute tx on behalf of granter account\n  grant       Grant authorization to an address\n  revoke      revoke authorization\n\nFlags:\n  -h, --help   help for authz\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd tx authz [command] --help\" for more information about a command.",
  "osmosisd tx authz exec": "execute tx on behalf of granter account:\nExample:\n $ osmosisd tx authz exec tx.json --from grantee\n $ osmosisd tx bank send <granter> <recipient> --from <granter> --chain-id <chain-id> --generate-only > tx.json && osmosisd tx authz exec tx.json --from grantee\n\nUsage:\n  osmosisd tx authz exec [tx-json-file] --from [grantee] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for exec\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx authz grant": "create a new grant authorization to an address to execute a transaction on your behalf:\n\nExamples:\n $ osmosisd tx authz grant cosmos1skjw.. send --spend-limit=1000stake --from=cosmos1skl..\n $ osmosisd tx authz grant cosmos1skjw.. generic --msg-type=/cosmos.gov.v1.MsgVote --from=cosmos1sk..\n\nUsage:\n  osmosisd tx authz grant <grantee> <authorization_type=\"send\"|\"generic\"|\"delegate\"|\"unbond\"|\"redelegate\"> --from <granter> [flags]\n\nFlags:\n  -a, --account-number uint          The account number of the signing account (offline mode only)\n      --allow-list strings           Allowed addresses grantee is allowed to send funds separated by ,\n      --allowed-validators strings   Allowed validators addresses separated by ,\n      --aux                          Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string        Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string              The network chain ID\n      --deny-validators strings      Deny validators addresses separated by ,\n      --dry-run                      ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --expiration int               Expire time as Unix timestamp. Set zero (0) for no expiry. Default is 0.\n      --fee-granter string           Fee granter grants fees for the transaction\n      --fee-payer string             Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string                  Fees to pay along with transaction; eg: 10uatom\n      --from string                  Name or address of private key with which to sign\n      --gas string                   gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float         adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string            Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only                Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                         help for grant\n      --keyring-backend string       Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string           The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                       Use a connected Ledger device\n      --msg-type string              The Msg method name for which we are creating a GenericAuthorization\n      --node string                  <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string                  Note to add a description to the transaction (previously --memo)\n      --offline                      Offline mode (does not allow any online functionality)\n  -o, --output string                Output format (text|json) (default \"json\")\n  -s, --sequence uint                The sequence number of the signing account (offline mode only)\n      --sign-mode string             Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --spend-limit string           SpendLimit for Send Authorization, an array of Coins allowed spend\n      --timeout-height uint          Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string                   Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                          Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx authz revoke": "revoke authorization from a granter to a grantee:\nExample:\n $ osmosisd tx authz revoke cosmos1skj.. /cosmos.bank.v1beta1.MsgSend --from=cosmos1skj..\n\nUsage:\n  osmosisd tx authz revoke [grantee] [msg-type-url] --from=[granter] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for revoke\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx bank": "Bank transaction subcommands\n\nUsage:\n  osmosisd tx bank [flags]\n  osmosisd tx bank [command]\n\nAvailable Commands:\n  multi-send  Send funds from one account to two or more accounts.\n  send        Send funds from one account to another.\n\nFlags:\n  -h, --help   help for bank\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd tx bank [command] --help\" for more information about a command.",
  "osmosisd tx bank multi-send": "Send funds from one account to two or more accounts.\nBy default, sends the [amount] to each address of the list.\nUsing the '--split' flag, the [amount] is split equally between the addresses.\nNote, the '--from' flag is ignored as it is implied from [from_key_or_address] and \nseparate addresses with space.\nWhen using '--dry-run' a key name cannot be used, only a bech32 address.\n\nUsage:\n  osmosisd tx bank multi-send [from_key_or_address] [to_address_1 to_address_2 ...] [amount] [flags]\n\nExamples:\nosmosisd tx bank multi-send cosmos1... cosmos1... cosmos1... cosmos1... 10stake\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for multi-send\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --split                    Send the equally split token amount to each address\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx bank send": "Send funds from one account to another.\nNote, the '--from' flag is ignored as it is implied from [from_key_or_address].\nWhen using '--dry-run' a key name cannot be used, only a bech32 address.\n\nUsage:\n  osmosisd tx bank send [from_key_or_address] [to_address] [amount] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for send\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx broadcast": "Broadcast transactions created with the --generate-only\nflag and signed with the sign command. Read a transaction from [file_path] and\nbroadcast it to a node. If you supply a dash (-) argument in place of an input\nfilename, the command reads from standard input.\n\n$ <appd> tx broadcast ./mytxn.json\n\nUsage:\n  osmosisd tx broadcast [file_path] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for broadcast\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx concentratedliquidity": "concentratedliquidity transactions subcommands\n\nUsage:\n  osmosisd tx concentratedliquidity [command]\n  \nAvailable Commands:\n  add-to-position        add to an existing concentrated liquidity position\n  collect-incentives     collect incentives from liquidity position(s)\n  collect-spread-rewards collect spread rewards from liquidity position(s)\n  create-pool            create a concentrated liquidity pool with the given denom pair, tick spacing, and spread factor\n  create-position        create or add to existing concentrated liquidity position\n  fungify-positions      Combine fully charged positions within the same range into a new single fully charged position\n  transfer-positions     transfer a list of concentrated liquidity positions to a new owner\n  withdraw-position      withdraw from an existing concentrated liquidity position\n\nUse \"osmosisd tx concentratedliquidity [command] --help\" for more information about a command.",
  "osmosisd tx concentratedliquidity add-to-position": "add to an existing concentrated liquidity position\n\nUsage:\n  osmosisd tx concentratedliquidity add-to-position [position-id] [amount0] [amount1] [token-min-amount0] [token-min-amount1] [flags]\n\nExamples:\nosmosisd tx concentratedliquidity add-to-position 10 1000000000uosmo 10000000uion --from val --chain-id localosmosis -b block --keyring-backend test --fees 1000000uosmo\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for add-to-position\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx concentratedliquidity collect-incentives": "collect incentives from liquidity position(s)\n\nUsage:\n  osmosisd tx concentratedliquidity collect-incentives [position-ids] [flags]\n\nExamples:\nosmosisd tx concentratedliquidity collect-incentives 1 --from val --chain-id localosmosis -b block --keyring-backend test --fees 10000uosmo\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for collect-incentives\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx concentratedliquidity collect-spread-rewards": "collect spread rewards from liquidity position(s)\n\nUsage:\n  osmosisd tx concentratedliquidity collect-spread-rewards [position-ids] [flags]\n\nExamples:\nosmosisd tx concentratedliquidity collect-spread-rewards 998 --from val --chain-id localosmosis -b block --keyring-backend test --fees 1000000uosmo\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for collect-spread-rewards\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx concentratedliquidity create-pool": "denom-1 (the quote denom), tick spacing, and spread factors must all be authorized by the concentrated liquidity module\n\nUsage:\n  osmosisd tx concentratedliquidity create-pool [denom0] [denom1] [tick-spacing] [spread-factor] [flags]\n\nExamples:\nosmosisd tx concentratedliquidity create-pool uion uosmo 100 0.01 --from val --chain-id osmosis-1 -b block --keyring-backend test --fees 1000uosmo\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for create-pool\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx concentratedliquidity create-position": "create or add to existing concentrated liquidity position\n\nUsage:\n  osmosisd tx concentratedliquidity create-position [pool-id] [lower-tick] [upper-tick] [tokens-provided] [token-min-amount0] [token-min-amount1] [flags]\n\nExamples:\nosmosisd tx concentratedliquidity create-position 1 \"[-69082]\" 69082 10000uosmo,10000uion 0 0 --from val --chain-id osmosis-1 -b block --keyring-backend test --fees 1000uosmo\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for create-position\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx concentratedliquidity fungify-positions": "Combine fully charged positions within the same range into a new single fully charged position\n\nUsage:\n  osmosisd tx concentratedliquidity fungify-positions [position-ids] [flags]\n\nExamples:\nosmosisd tx concentratedliquidity fungify-positions 1,2 --from val --keyring-backend test -b=block --chain-id=localosmosis --gas=1000000 --fees 20000uosmo\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for fungify-positions\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx concentratedliquidity transfer-positions": "transfer a list of concentrated liquidity positions to a new owner\n\nUsage:\n  osmosisd tx concentratedliquidity transfer-positions [position-ids] [new-owner] [flags]\n\nExamples:\nosmosisd tx concentratedliquidity transfer-positions 56,89,1011 osmo10fhdy8zhepstpwsr9l4a8yxuyggqmpqx4ktheq --from val --chain-id osmosis-1 -b block --keyring-backend test --fees 1000uosmo\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for transfer-positions\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx concentratedliquidity withdraw-position": "withdraw from an existing concentrated liquidity position\n\nUsage:\n  osmosisd tx concentratedliquidity withdraw-position [position-id] [liquidity-amount] [flags]\n\nExamples:\nosmosisd tx concentratedliquidity withdraw-position 1 1000 --from val --chain-id localosmosis --keyring-backend=test --fees=1000uosmo\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for withdraw-position\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx cosmwasmpool": "cosmwasmpool transactions subcommands\n\nUsage:\n  osmosisd tx cosmwasmpool [command]\n  \nAvailable Commands:\n  create-pool create a cosmwasm pool\n\nUse \"osmosisd tx cosmwasmpool [command] --help\" for more information about a command.",
  "osmosisd tx cosmwasmpool create-pool": "create a cosmwasm pool\n\nUsage:\n  osmosisd tx cosmwasmpool create-pool [code-id] [instantiate-msg] [flags]\n\nExamples:\nosmosisd tx cosmwasmpool create-pool 1 '{\"pool_assets_denom\":[\"uion\",\"uosmo\"]}' --from lo-test1 --keyring-backend test --chain-id localosmosis --fees 875uosmo -b=block\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for create-pool\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx crisis": "Crisis transactions subcommands\n\nUsage:\n  osmosisd tx crisis [flags]\n  osmosisd tx crisis [command]\n\nAvailable Commands:\n  invariant-broken Submit proof that an invariant broken to halt the chain\n\nFlags:\n  -h, --help   help for crisis\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd tx crisis [command] --help\" for more information about a command.",
  "osmosisd tx crisis invariant-broken": "Submit proof that an invariant broken to halt the chain\n\nUsage:\n  osmosisd tx crisis invariant-broken [module-name] [invariant-route] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for invariant-broken\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx decode": "Decode a binary encoded transaction string\n\nUsage:\n  osmosisd tx decode [protobuf-byte-string] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for decode\n  -x, --hex                      Treat input as hexadecimal instead of base64\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx distribution": "Distribution transactions subcommands\n\nUsage:\n  osmosisd tx distribution [flags]\n  osmosisd tx distribution [command]\n\nAvailable Commands:\n  fund-community-pool  Funds the community pool with the specified amount\n  set-withdraw-addr    change the default withdraw address for rewards associated with an address\n  withdraw-all-rewards withdraw all delegations rewards for a delegator\n  withdraw-rewards     Withdraw rewards from a given delegation address, and optionally withdraw validator commission if the delegation address given is a validator operator\n\nFlags:\n  -h, --help   help for distribution\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd tx distribution [command] --help\" for more information about a command.",
  "osmosisd tx distribution fund-community-pool": "Funds the community pool with the specified amount\n\nExample:\n$ osmosisd tx distribution fund-community-pool 100uatom --from mykey\n\nUsage:\n  osmosisd tx distribution fund-community-pool [amount] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for fund-community-pool\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx distribution set-withdraw-addr": "Set the withdraw address for rewards associated with a delegator address.\n\nExample:\n$ osmosisd tx distribution set-withdraw-addr osmo1gghjut3ccd8ay0zduzj64hwre2fxs9ld75ru9p --from mykey\n\nUsage:\n  osmosisd tx distribution set-withdraw-addr [withdraw-addr] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for set-withdraw-addr\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx distribution withdraw-all-rewards": "Withdraw all rewards for a single delegator.\nNote that if you use this command with --broadcast-mode=sync or --broadcast-mode=async, the max-msgs flag will automatically be set to 0.\n\nExample:\n$ osmosisd tx distribution withdraw-all-rewards --from mykey\n\nUsage:\n  osmosisd tx distribution withdraw-all-rewards [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for withdraw-all-rewards\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --max-msgs int             Limit the number of messages per tx (0 for unlimited)\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx distribution withdraw-rewards": "Withdraw rewards from a given delegation address,\nand optionally withdraw validator commission if the delegation address given is a validator operator.\n\nExample:\n$ osmosisd tx distribution withdraw-rewards osmovaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj --from mykey\n$ osmosisd tx distribution withdraw-rewards osmovaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj --from mykey --commission\n\nUsage:\n  osmosisd tx distribution withdraw-rewards [validator-addr] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --commission               Withdraw the validator's commission in addition to the rewards\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for withdraw-rewards\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx encode": "Encode transactions created with the --generate-only flag or signed with the sign command.\nRead a transaction from <file>, serialize it to the Protobuf wire protocol, and output it as base64.\nIf you supply a dash (-) argument in place of an input filename, the command reads from standard input.\n\nUsage:\n  osmosisd tx encode [file] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for encode\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx evidence": "Evidence transaction subcommands\n\nUsage:\n  osmosisd tx evidence [flags]\n\nFlags:\n  -h, --help   help for evidence\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx gamm": "gamm transactions subcommands\n\nUsage:\n  osmosisd tx gamm [command]\n  \nAvailable Commands:\n  adjust-scaling-factors      adjust scaling factors\n  create-pool                 create a new pool and provide the liquidity to it\n  exit-pool                   exit a new pool and withdraw the liquidity from it\n  exit-swap-extern-amount-out exit swap extern amount out\n  exit-swap-share-amount-in   exit swap share amount in\n  join-pool                   join a new pool and provide the liquidity to it\n  join-swap-extern-amount-in  join swap extern amount in\n  join-swap-share-amount-out  join swap share amount out\n  swap-exact-amount-in        swap exact amount in\n  swap-exact-amount-out       swap exact amount out\n\nUse \"osmosisd tx gamm [command] --help\" for more information about a command.",
  "osmosisd tx gamm adjust-scaling-factors": "adjust scaling factors\n\nUsage:\n  osmosisd tx gamm adjust-scaling-factors --pool-id=[pool-id]  --scaling-factors=[scaling-factors] [flags]\n\nExamples:\nosmosisd adjust-scaling-factors --pool-id=1 --scaling-factors=\"100, 100\"\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for adjust-scaling-factors\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n      --pool-id uint             The id of pool\n      --scaling-factors string   The scaling factors\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx gamm create-pool": "Must provide path to a pool JSON file (--pool-file) describing the pool to be created\nSample pool JSON file contents for balancer:\n{\n\t\"weights\": \"4uatom,4osmo,2uakt\",\n\t\"initial-deposit\": \"100uatom,5osmo,20uakt\",\n\t\"swap-fee\": \"0.01\",\n\t\"exit-fee\": \"0.01\",\n\t\"future-governor\": \"168h\"\n}\n\nFor stableswap (demonstrating need for a 1:1000 scaling factor, see doc)\n{\n\t\"initial-deposit\": \"1000000uusdc,1000miliusdc\",\n\t\"swap-fee\": \"0.01\",\n\t\"exit-fee\": \"0.00\",\n\t\"future-governor\": \"168h\",\n\t\"scaling-factors\": \"1000,1\"\n}\n\nUsage:\n  osmosisd tx gamm create-pool [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for create-pool\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n      --pool-file string         Pool json file path (if this path is given, other create pool flags should not be used)\n      --pool-type string         Pool type (either \"balancer\", \"uniswap\", or \"stableswap\" (default \"uniswap\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx gamm exit-pool": "exit a new pool and withdraw the liquidity from it\n\nUsage:\n  osmosisd tx gamm exit-pool [pool-id] [share-in-amount] [token-out-mins] [flags]\n\nFlags:\n  -a, --account-number uint           The account number of the signing account (offline mode only)\n      --aux                           Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string         Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string               The network chain ID\n      --dry-run                       ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string            Fee granter grants fees for the transaction\n      --fee-payer string              Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string                   Fees to pay along with transaction; eg: 10uatom\n      --from string                   Name or address of private key with which to sign\n      --gas string                    gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float          adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string             Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only                 Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                          help for exit-pool\n      --keyring-backend string        Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string            The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                        Use a connected Ledger device\n      --min-amounts-out stringArray   TODO: add description\n      --node string                   <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string                   Note to add a description to the transaction (previously --memo)\n      --offline                       Offline mode (does not allow any online functionality)\n  -o, --output string                 Output format (text|json) (default \"json\")\n      --pool-id uint                  The id of pool\n  -s, --sequence uint                 The sequence number of the signing account (offline mode only)\n      --share-amount-in string        TODO: add description\n      --sign-mode string              Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint           Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string                    Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                           Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx gamm exit-swap-extern-amount-out": "exit swap extern amount out\n\nUsage:\n  osmosisd tx gamm exit-swap-extern-amount-out [pool-id] [token-out] [share-in-max-amount] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for exit-swap-extern-amount-out\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n      --pool-id uint             The id of pool\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx gamm exit-swap-share-amount-in": "exit swap share amount in\n\nUsage:\n  osmosisd tx gamm exit-swap-share-amount-in [pool-id] [token-out-denom] [share-in-amount] [token-out-min-amount] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for exit-swap-share-amount-in\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n      --pool-id uint             The id of pool\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx gamm join-pool": "join a new pool and provide the liquidity to it\n\nUsage:\n  osmosisd tx gamm join-pool [pool-id] [share-out-amount] [token-in-maxs] [flags]\n\nFlags:\n  -a, --account-number uint          The account number of the signing account (offline mode only)\n      --aux                          Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string        Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string              The network chain ID\n      --dry-run                      ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string           Fee granter grants fees for the transaction\n      --fee-payer string             Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string                  Fees to pay along with transaction; eg: 10uatom\n      --from string                  Name or address of private key with which to sign\n      --gas string                   gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float         adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string            Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only                Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                         help for join-pool\n      --keyring-backend string       Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string           The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                       Use a connected Ledger device\n      --max-amounts-in stringArray   Maximum amount of each denom to send into the pool (specify multiple denoms with: --max-amounts-in=1uosmo --max-amounts-in=1uion)\n      --node string                  <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string                  Note to add a description to the transaction (previously --memo)\n      --offline                      Offline mode (does not allow any online functionality)\n  -o, --output string                Output format (text|json) (default \"json\")\n      --pool-id uint                 The id of pool\n  -s, --sequence uint                The sequence number of the signing account (offline mode only)\n      --share-amount-out string      Minimum amount of Gamm tokens to receive\n      --sign-mode string             Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint          Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string                   Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                          Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx gamm join-swap-extern-amount-in": "join swap extern amount in\n\nUsage:\n  osmosisd tx gamm join-swap-extern-amount-in [pool-id] [token-in] [share-out-min-amount] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for join-swap-extern-amount-in\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n      --pool-id uint             The id of pool\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx gamm join-swap-share-amount-out": "join swap share amount out\n\nUsage:\n  osmosisd tx gamm join-swap-share-amount-out [pool-id] [token-in-denom] [share-out-amount] [token-in-max-amount] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for join-swap-share-amount-out\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n      --pool-id uint             The id of pool\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx gamm swap-exact-amount-in": "swap exact amount in\n\nUsage:\n  osmosisd tx gamm swap-exact-amount-in [routes] [token-in] [token-out-min-amount] [flags]\n\nFlags:\n  -a, --account-number uint          The account number of the signing account (offline mode only)\n      --aux                          Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string        Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string              The network chain ID\n      --dry-run                      ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string           Fee granter grants fees for the transaction\n      --fee-payer string             Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string                  Fees to pay along with transaction; eg: 10uatom\n      --from string                  Name or address of private key with which to sign\n      --gas string                   gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float         adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string            Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only                Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                         help for swap-exact-amount-in\n      --keyring-backend string       Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string           The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                       Use a connected Ledger device\n      --node string                  <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string                  Note to add a description to the transaction (previously --memo)\n      --offline                      Offline mode (does not allow any online functionality)\n  -o, --output string                Output format (text|json) (default \"json\")\n  -s, --sequence uint                The sequence number of the signing account (offline mode only)\n      --sign-mode string             Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --swap-route-denoms string     swap route amount\n      --swap-route-pool-ids string   swap route pool id\n      --timeout-height uint          Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string                   Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                          Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx gamm swap-exact-amount-out": "swap exact amount out\n\nUsage:\n  osmosisd tx gamm swap-exact-amount-out [routes] [token-in-max-amount] [token-out] [flags]\n\nFlags:\n  -a, --account-number uint          The account number of the signing account (offline mode only)\n      --aux                          Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string        Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string              The network chain ID\n      --dry-run                      ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string           Fee granter grants fees for the transaction\n      --fee-payer string             Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string                  Fees to pay along with transaction; eg: 10uatom\n      --from string                  Name or address of private key with which to sign\n      --gas string                   gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float         adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string            Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only                Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                         help for swap-exact-amount-out\n      --keyring-backend string       Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string           The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                       Use a connected Ledger device\n      --node string                  <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string                  Note to add a description to the transaction (previously --memo)\n      --offline                      Offline mode (does not allow any online functionality)\n  -o, --output string                Output format (text|json) (default \"json\")\n  -s, --sequence uint                The sequence number of the signing account (offline mode only)\n      --sign-mode string             Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --swap-route-denoms string     swap route amount\n      --swap-route-pool-ids string   swap route pool id\n      --timeout-height uint          Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string                   Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                          Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx gov": "Governance transactions subcommands\n\nUsage:\n  osmosisd tx gov [flags]\n  osmosisd tx gov [command]\n\nAvailable Commands:\n  deposit                Deposit tokens for an active proposal\n  draft-proposal         Generate a draft proposal json file. The generated proposal json contains only one message (skeleton).\n  submit-legacy-proposal Submit a legacy proposal along with an initial deposit\n  submit-proposal        Submit a proposal along with some messages, metadata and deposit\n  vote                   Vote for an active proposal, options: yes/no/no_with_veto/abstain\n  weighted-vote          Vote for an active proposal, options: yes/no/no_with_veto/abstain\n\nFlags:\n  -h, --help   help for gov\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd tx gov [command] --help\" for more information about a command.",
  "osmosisd tx gov deposit": "Submit a deposit for an active proposal. You can\nfind the proposal-id by running \"osmosisd query gov proposals\".\n\nExample:\n$ osmosisd tx gov deposit 1 10stake --from mykey\n\nUsage:\n  osmosisd tx gov deposit [proposal-id] [deposit] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for deposit\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx gov draft-proposal": "Generate a draft proposal json file. The generated proposal json contains only one message (skeleton).\n\nUsage:\n  osmosisd tx gov draft-proposal [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for draft-proposal\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --skip-metadata            skip metadata prompt\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx gov submit-legacy-proposal": "Submit a legacy proposal along with an initial deposit.\nProposal title, description, type and deposit can be given directly or through a proposal JSON file.\n\nExample:\n$ osmosisd tx gov submit-legacy-proposal --proposal=\"path/to/proposal.json\" --from mykey\n\nWhere proposal.json contains:\n\n{\n  \"title\": \"Test Proposal\",\n  \"description\": \"My awesome proposal\",\n  \"type\": \"Text\",\n  \"deposit\": \"10test\"\n}\n\nWhich is equivalent to:\n\n$ osmosisd tx gov submit-legacy-proposal --title=\"Test Proposal\" --description=\"My awesome proposal\" --type=\"Text\" --deposit=\"10test\" --from mykey\n\nUsage:\n  osmosisd tx gov submit-legacy-proposal [flags]\n  osmosisd tx gov submit-legacy-proposal [command]\n\nAvailable Commands:\n  cancel-software-upgrade                    Cancel the current software upgrade proposal\n  create-cl-pool-and-cfmm-link               Submit a create clpool and link to cfmm proposal\n  create-concentratedliquidity-pool-proposal Submit a create concentrated liquidity pool proposal\n  create-groups-proposal                     Submit a create groups proposal\n  denom-pair-taker-fee-proposal              Submit a denom pair taker fee proposal\n  ibc-upgrade                                Submit an IBC upgrade proposal\n  migrate-cw-pool-contracts                  Submit a migrate cw pool contracts proposal\n  param-change                               Submit a parameter change proposal\n  remove-superfluid-assets-proposal          Submit a superfluid asset remove proposal\n  replace-migration-records-proposal         Submit a replace migration record proposal\n  replace-pool-incentives                    Submit a full replacement to the records for pool incentives\n  set-scaling-factor-controller-proposal     Submit a set scaling factor controller proposal\n  set-superfluid-assets-proposal             Submit a superfluid asset set proposal\n  software-upgrade                           Submit a software upgrade proposal\n  tick-spacing-decrease-proposal             Submit a tick spacing decrease proposal\n  update-client                              Submit an update IBC client proposal\n  update-fee-token                           Submit a update fee token record proposal\n  update-migration-records-proposal          Submit a update migration record proposal\n  update-pool-incentives                     Submit an update to the records for pool incentives\n  update-unpool-whitelist                    Update unpool whitelist proposal\n  upload-code-id-and-whitelist               Submit an upload code id and whitelist proposal\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --deposit string           The proposal deposit\n      --description string       The proposal description\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for submit-legacy-proposal\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n      --proposal string          Proposal file path (if this path is given, other proposal flags are ignored)\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --title string             The proposal title\n      --type string              The proposal Type\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd tx gov submit-legacy-proposal [command] --help\" for more information about a command.",
  "osmosisd tx gov submit-legacy-proposal cancel-software-upgrade": "Cancel a software upgrade along with an initial deposit.\n\nUsage:\n  osmosisd tx gov submit-legacy-proposal cancel-software-upgrade [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --deposit string           deposit of proposal\n      --description string       description of proposal\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for cancel-software-upgrade\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --title string             title of proposal\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx gov submit-legacy-proposal create-cl-pool-and-cfmm-link": "submit a proposal to create CL pool and link to Balancer pool.\n\nUsage:\n  osmosisd tx gov submit-legacy-proposal create-cl-pool-and-cfmm-link [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --authority string         The address of the governance account. Default is the sdk gov module account (default \"osmo10d07y265gmmuvt4z0w9aw880jnsr700jjeq4qp\")\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --deposit string           Deposit of proposal\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for create-cl-pool-and-cfmm-link\n      --is-expedited             Whether the proposal is expedited\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n      --pool-records string      The pool records array\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --summary string           Summary of proposal\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --title string             Title of proposal\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx gov submit-legacy-proposal create-concentratedliquidity-pool-proposal": "Submit a create concentrated liquidity pool proposal.\n\nPassing in FlagPoolRecords separated by commas would be parsed automatically to pairs of pool records.\nEx) --pool-records=uion,uosmo,100,0.003,stake,uosmo,1000,0.005 ->\n[uion<>uosmo, tickSpacing 100, spreadFactor 0.3%]\n[stake<>uosmo, tickSpacing 1000, spreadFactor 0.5%]\n\nUsage:\n  osmosisd tx gov submit-legacy-proposal create-concentratedliquidity-pool-proposal [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --authority string         The address of the governance account. Default is the sdk gov module account (default \"osmo10d07y265gmmuvt4z0w9aw880jnsr700jjeq4qp\")\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --deposit string           Deposit of proposal\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for create-concentratedliquidity-pool-proposal\n      --is-expedited             Whether the proposal is expedited\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n      --pool-records string      The pool records array\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --summary string           Summary of proposal\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --title string             Title of proposal\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx gov submit-legacy-proposal create-groups-proposal": "Submit a create groups proposal.\n\nPassing in pool-id-pairs separated by commas would be parsed automatically to a single set for a single group.\nIf a semicolon is presented, that would be parsed as pool IDs for separate group.\nDon't forget the single quotes around the pool IDs!\nEx) create-groups-proposal '1,2;3,4,5;6,7' ->\nGroup 1: Pool IDs 1, 2\nGroup 2: Pool IDs 3, 4, 5\nGroup 3: Pool IDs 6, 7\n\nUsage:\n  osmosisd tx gov submit-legacy-proposal create-groups-proposal [pool-id-pairs] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --authority string         The address of the governance account. Default is the sdk gov module account (default \"osmo10d07y265gmmuvt4z0w9aw880jnsr700jjeq4qp\")\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --deposit string           Deposit of proposal\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for create-groups-proposal\n      --is-expedited             Whether the proposal is expedited\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --summary string           Summary of proposal\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --title string             Title of proposal\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx gov submit-legacy-proposal denom-pair-taker-fee-proposal": "Submit a denom pair taker fee proposal.\n\nPassing in denom-pairs-with-taker-fee separated by commas would be parsed automatically to pairs of denomPairTakerFee records.\nEx) denom-pair-taker-fee-proposal uion,uosmo,0.0016,stake,uosmo,0.005,uatom,uosmo,0.0015 ->\n[uion<>uosmo, takerFee 0.16%]\n[stake<>uosmo, takerFee 0.5%]\n[uatom<>uosmo, removes from state since its being set to the default takerFee value]\n\nUsage:\n  osmosisd tx gov submit-legacy-proposal denom-pair-taker-fee-proposal [denom-pairs-with-taker-fee] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --authority string         The address of the governance account. Default is the sdk gov module account (default \"osmo10d07y265gmmuvt4z0w9aw880jnsr700jjeq4qp\")\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --deposit string           Deposit of proposal\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for denom-pair-taker-fee-proposal\n      --is-expedited             Whether the proposal is expedited\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --summary string           Summary of proposal\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --title string             Title of proposal\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx gov submit-legacy-proposal ibc-upgrade": "Submit an IBC client breaking upgrade proposal along with an initial deposit.\nThe client state specified is the upgraded client state representing the upgraded chain\nExample Upgraded Client State JSON: \n{\n\t\"@type\":\"/ibc.lightclients.tendermint.v1.ClientState\",\n \t\"chain_id\":\"testchain1\",\n\t\"unbonding_period\":\"1814400s\",\n\t\"latest_height\":{\"revision_number\":\"0\",\"revision_height\":\"2\"},\n\t\"proof_specs\":[{\"leaf_spec\":{\"hash\":\"SHA256\",\"prehash_key\":\"NO_HASH\",\"prehash_value\":\"SHA256\",\"length\":\"VAR_PROTO\",\"prefix\":\"AA==\"},\"inner_spec\":{\"child_order\":[0,1],\"child_size\":33,\"min_prefix_length\":4,\"max_prefix_length\":12,\"empty_child\":null,\"hash\":\"SHA256\"},\"max_depth\":0,\"min_depth\":0},{\"leaf_spec\":{\"hash\":\"SHA256\",\"prehash_key\":\"NO_HASH\",\"prehash_value\":\"SHA256\",\"length\":\"VAR_PROTO\",\"prefix\":\"AA==\"},\"inner_spec\":{\"child_order\":[0,1],\"child_size\":32,\"min_prefix_length\":1,\"max_prefix_length\":1,\"empty_child\":null,\"hash\":\"SHA256\"},\"max_depth\":0,\"min_depth\":0}],\n\t\"upgrade_path\":[\"upgrade\",\"upgradedIBCState\"],\n}\n\nUsage:\n  osmosisd tx gov submit-legacy-proposal ibc-upgrade [name] [height] [path/to/upgraded_client_state.json] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --deposit string           deposit of proposal\n      --description string       description of proposal\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for ibc-upgrade\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --title string             title of proposal\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx gov submit-legacy-proposal migrate-cw-pool-contracts": "Submit a migrate cw pool contracts proposal\n\nUsage:\n  osmosisd tx gov submit-legacy-proposal migrate-cw-pool-contracts [pool-ids] [new-code-id] [wasm-file-path] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --authority string         The address of the governance account. Default is the sdk gov module account (default \"osmo10d07y265gmmuvt4z0w9aw880jnsr700jjeq4qp\")\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --deposit string           Deposit of proposal\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for migrate-cw-pool-contracts\n      --is-expedited             Whether the proposal is expedited\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --summary string           Summary of proposal\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --title string             Title of proposal\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx gov submit-legacy-proposal param-change": "Submit a parameter proposal along with an initial deposit.\nThe proposal details must be supplied via a JSON file. For values that contains\nobjects, only non-empty fields will be updated.\n\nIMPORTANT: Currently parameter changes are evaluated but not validated, so it is\nvery important that any \"value\" change is valid (ie. correct type and within bounds)\nfor its respective parameter, eg. \"MaxValidators\" should be an integer and not a decimal.\n\nProper vetting of a parameter change proposal should prevent this from happening\n(no deposits should occur during the governance process), but it should be noted\nregardless.\n\nExample:\n$ osmosisd tx gov submit-proposal param-change <path/to/proposal.json> --from=<key_or_address>\n\nWhere proposal.json contains:\n\n{\n  \"title\": \"Staking Param Change\",\n  \"description\": \"Update max validators\",\n  \"changes\": [\n    {\n      \"subspace\": \"staking\",\n      \"key\": \"MaxValidators\",\n      \"value\": 105\n    }\n  ],\n  \"deposit\": \"1000stake\"\n}\n\nUsage:\n  osmosisd tx gov submit-legacy-proposal param-change [proposal-file] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for param-change\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx gov submit-legacy-proposal remove-superfluid-assets-proposal": "Submit a superfluid asset remove proposal\n\nUsage:\n  osmosisd tx gov submit-legacy-proposal remove-superfluid-assets-proposal [flags]\n\nFlags:\n  -a, --account-number uint        The account number of the signing account (offline mode only)\n      --authority string           The address of the governance account. Default is the sdk gov module account (default \"osmo10d07y265gmmuvt4z0w9aw880jnsr700jjeq4qp\")\n      --aux                        Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string      Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string            The network chain ID\n      --deposit string             Deposit of proposal\n      --dry-run                    ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string         Fee granter grants fees for the transaction\n      --fee-payer string           Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string                Fees to pay along with transaction; eg: 10uatom\n      --from string                Name or address of private key with which to sign\n      --gas string                 gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float       adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string          Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only              Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                       help for remove-superfluid-assets-proposal\n      --is-expedited               Whether the proposal is expedited\n      --keyring-backend string     Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string         The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                     Use a connected Ledger device\n      --node string                <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string                Note to add a description to the transaction (previously --memo)\n      --offline                    Offline mode (does not allow any online functionality)\n  -o, --output string              Output format (text|json) (default \"json\")\n  -s, --sequence uint              The sequence number of the signing account (offline mode only)\n      --sign-mode string           Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --summary string             Summary of proposal\n      --superfluid-assets string   The superfluid asset array\n      --timeout-height uint        Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string                 Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --title string               Title of proposal\n  -y, --yes                        Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx gov submit-legacy-proposal replace-migration-records-proposal": "Submit a replace migration record proposal.\n\nPassing in poolIds separated by commas would be parsed automatically to pairs of migration record.\nEx) 2,4,1,5 -> [(Balancer 2, CL 4), (Balancer 1, CL 5)]\n\nUsage:\n  osmosisd tx gov submit-legacy-proposal replace-migration-records-proposal [flags]\n\nFlags:\n  -a, --account-number uint        The account number of the signing account (offline mode only)\n      --authority string           The address of the governance account. Default is the sdk gov module account (default \"osmo10d07y265gmmuvt4z0w9aw880jnsr700jjeq4qp\")\n      --aux                        Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string      Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string            The network chain ID\n      --deposit string             Deposit of proposal\n      --dry-run                    ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string         Fee granter grants fees for the transaction\n      --fee-payer string           Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string                Fees to pay along with transaction; eg: 10uatom\n      --from string                Name or address of private key with which to sign\n      --gas string                 gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float       adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string          Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only              Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                       help for replace-migration-records-proposal\n      --is-expedited               Whether the proposal is expedited\n      --keyring-backend string     Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string         The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                     Use a connected Ledger device\n      --migration-records string   The migration records array\n      --node string                <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string                Note to add a description to the transaction (previously --memo)\n      --offline                    Offline mode (does not allow any online functionality)\n  -o, --output string              Output format (text|json) (default \"json\")\n  -s, --sequence uint              The sequence number of the signing account (offline mode only)\n      --sign-mode string           Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --summary string             Summary of proposal\n      --timeout-height uint        Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string                 Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --title string               Title of proposal\n  -y, --yes                        Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx gov submit-legacy-proposal replace-pool-incentives": "Submit a full replacement to the records for pool incentives\n\nUsage:\n  osmosisd tx gov submit-legacy-proposal replace-pool-incentives [gaugeIds] [weights] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --authority string         The address of the governance account. Default is the sdk gov module account (default \"osmo10d07y265gmmuvt4z0w9aw880jnsr700jjeq4qp\")\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --deposit string           Deposit of proposal\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for replace-pool-incentives\n      --is-expedited             Whether the proposal is expedited\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --summary string           Summary of proposal\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --title string             Title of proposal\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx gov submit-legacy-proposal set-scaling-factor-controller-proposal": "Submit a set scaling factor controller proposal.\n\nSample proposal file:\n{\n\t\"title\": \"Set Scaling Factor Controller Proposal\",\n\t\"description\": \"Change scaling factor controller address from osmoXXX to osmoYYY\"\n\t\"pool-id\": 1,\n\t\"controller-address\": \"osmoYYY\"\n}\n>>> osmosisd tx gov submit-proposal set-scaling-factor-controller-proposal \\\n        --proposal proposal.json \\\n\t\t--deposit 1600000000uosmo \\\n\nSample proposal with flags\n>>> osmosisd tx gov submit-proposal set-scaling-factor-controller-proposal \\\n        --title \"Set Scaling Factor Controller Proposal\" \\\n\t\t--summary \"Change scaling factor controller address from osmoXXX to osmoYYY\"\n\t\t--deposit 1600000000uosmo\n\t\t--pool-id 1\n\t\t--controller-address osmoYYY\n\nUsage:\n  osmosisd tx gov submit-legacy-proposal set-scaling-factor-controller-proposal [flags]\n\nFlags:\n  -a, --account-number uint                        The account number of the signing account (offline mode only)\n      --authority string                           The address of the governance account. Default is the sdk gov module account (default \"osmo10d07y265gmmuvt4z0w9aw880jnsr700jjeq4qp\")\n      --aux                                        Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string                      Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string                            The network chain ID\n      --deposit string                             Deposit of proposal\n      --dry-run                                    ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string                         Fee granter grants fees for the transaction\n      --fee-payer string                           Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string                                Fees to pay along with transaction; eg: 10uatom\n      --from string                                Name or address of private key with which to sign\n      --gas string                                 gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float                       adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string                          Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only                              Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                                       help for set-scaling-factor-controller-proposal\n      --is-expedited                               Whether the proposal is expedited\n      --keyring-backend string                     Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string                         The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                                     Use a connected Ledger device\n      --node string                                <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string                                Note to add a description to the transaction (previously --memo)\n      --offline                                    Offline mode (does not allow any online functionality)\n  -o, --output string                              Output format (text|json) (default \"json\")\n      --pool-id uint                               stableswap pool-id\n      --scaling-factor-controller-address string   target scaling factor controller address\n  -s, --sequence uint                              The sequence number of the signing account (offline mode only)\n      --sign-mode string                           Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --summary string                             Summary of proposal\n      --timeout-height uint                        Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string                                 Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --title string                               Title of proposal\n  -y, --yes                                        Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx gov submit-legacy-proposal set-superfluid-assets-proposal": "Submit a superfluid asset set proposal\n\nUsage:\n  osmosisd tx gov submit-legacy-proposal set-superfluid-assets-proposal [flags]\n\nFlags:\n  -a, --account-number uint        The account number of the signing account (offline mode only)\n      --authority string           The address of the governance account. Default is the sdk gov module account (default \"osmo10d07y265gmmuvt4z0w9aw880jnsr700jjeq4qp\")\n      --aux                        Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string      Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string            The network chain ID\n      --deposit string             Deposit of proposal\n      --dry-run                    ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string         Fee granter grants fees for the transaction\n      --fee-payer string           Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string                Fees to pay along with transaction; eg: 10uatom\n      --from string                Name or address of private key with which to sign\n      --gas string                 gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float       adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string          Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only              Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                       help for set-superfluid-assets-proposal\n      --is-expedited               Whether the proposal is expedited\n      --keyring-backend string     Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string         The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                     Use a connected Ledger device\n      --node string                <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string                Note to add a description to the transaction (previously --memo)\n      --offline                    Offline mode (does not allow any online functionality)\n  -o, --output string              Output format (text|json) (default \"json\")\n  -s, --sequence uint              The sequence number of the signing account (offline mode only)\n      --sign-mode string           Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --summary string             Summary of proposal\n      --superfluid-assets string   The superfluid asset array\n      --timeout-height uint        Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string                 Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --title string               Title of proposal\n  -y, --yes                        Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx gov submit-legacy-proposal software-upgrade": "Submit a software upgrade along with an initial deposit.\nPlease specify a unique name and height for the upgrade to take effect.\nYou may include info to reference a binary download link, in a format compatible with: https://github.com/cosmos/cosmos-sdk/tree/main/cosmovisor\n\nUsage:\n  osmosisd tx gov submit-legacy-proposal software-upgrade [name] (--upgrade-height [height]) (--upgrade-info [info]) [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --daemon-name string       The name of the executable being upgraded (for upgrade-info validation). Default is the DAEMON_NAME env var if set, or else this executable (default \"osmosisd\")\n      --deposit string           deposit of proposal\n      --description string       description of proposal\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for software-upgrade\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --no-validate              Skip validation of the upgrade info\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --title string             title of proposal\n      --upgrade-height int       The height at which the upgrade must happen\n      --upgrade-info string      Info for the upgrade plan such as new version download urls, etc.\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx gov submit-legacy-proposal tick-spacing-decrease-proposal": "Submit a tick spacing decrease proposal.\n\nPassing in FlagPoolIdToTickSpacingRecords separated by commas would be parsed automatically to pairs of PoolIdToTickSpacing records.\nEx) --pool-tick-spacing-records=1,10,5,1 -> [(poolId 1, newTickSpacing 10), (poolId 5, newTickSpacing 1)]\nNote: The new tick spacing value must be less than the current tick spacing value.\n\nUsage:\n  osmosisd tx gov submit-legacy-proposal tick-spacing-decrease-proposal [flags]\n\nFlags:\n  -a, --account-number uint                The account number of the signing account (offline mode only)\n      --authority string                   The address of the governance account. Default is the sdk gov module account (default \"osmo10d07y265gmmuvt4z0w9aw880jnsr700jjeq4qp\")\n      --aux                                Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string              Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string                    The network chain ID\n      --deposit string                     Deposit of proposal\n      --dry-run                            ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string                 Fee granter grants fees for the transaction\n      --fee-payer string                   Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string                        Fees to pay along with transaction; eg: 10uatom\n      --from string                        Name or address of private key with which to sign\n      --gas string                         gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float               adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string                  Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only                      Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                               help for tick-spacing-decrease-proposal\n      --is-expedited                       Whether the proposal is expedited\n      --keyring-backend string             Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string                 The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                             Use a connected Ledger device\n      --node string                        <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string                        Note to add a description to the transaction (previously --memo)\n      --offline                            Offline mode (does not allow any online functionality)\n  -o, --output string                      Output format (text|json) (default \"json\")\n      --pool-tick-spacing-records string   The pool ID to new tick spacing records array\n  -s, --sequence uint                      The sequence number of the signing account (offline mode only)\n      --sign-mode string                   Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --summary string                     Summary of proposal\n      --timeout-height uint                Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string                         Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --title string                       Title of proposal\n  -y, --yes                                Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx gov submit-legacy-proposal update-client": "Submit an update IBC client proposal along with an initial deposit.\nPlease specify a subject client identifier you want to update..\nPlease specify the substitute client the subject client will be updated to.\n\nUsage:\n  osmosisd tx gov submit-legacy-proposal update-client [subject-client-id] [substitute-client-id] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --deposit string           deposit of proposal\n      --description string       description of proposal\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for update-client\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --title string             title of proposal\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx gov submit-legacy-proposal update-fee-token": "Submit a update fee token record proposal.\n\nPassing in denom,poolID pairs separated by commas would be parsed automatically to pairs of fee token records.\nEx) uosmo,1,uion,2,ufoo,0 -> [Adds uosmo<>pool1, uion<>pool2, Removes ufoo as a fee token]\n\nUsage:\n  osmosisd tx gov submit-legacy-proposal update-fee-token [flags]\n\nExamples:\nupdate-fee-token --fee-tokens uosmo,1,uion,2,ufoo,0 --from val --chain-id osmosis-1\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --authority string         The address of the governance account. Default is the sdk gov module account (default \"osmo10d07y265gmmuvt4z0w9aw880jnsr700jjeq4qp\")\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --deposit string           Deposit of proposal\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fee-tokens string        The fee token records array\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for update-fee-token\n      --is-expedited             Whether the proposal is expedited\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --summary string           Summary of proposal\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --title string             Title of proposal\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx gov submit-legacy-proposal update-migration-records-proposal": "Submit a update migration record proposal.\n\nPassing in poolIds separated by commas would be parsed automatically to pairs of migration record.\nEx) 2,4,1,5 -> [(Balancer 2, CL 4), (Balancer 1, CL 5)]\n\nUsage:\n  osmosisd tx gov submit-legacy-proposal update-migration-records-proposal [flags]\n\nFlags:\n  -a, --account-number uint        The account number of the signing account (offline mode only)\n      --authority string           The address of the governance account. Default is the sdk gov module account (default \"osmo10d07y265gmmuvt4z0w9aw880jnsr700jjeq4qp\")\n      --aux                        Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string      Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string            The network chain ID\n      --deposit string             Deposit of proposal\n      --dry-run                    ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string         Fee granter grants fees for the transaction\n      --fee-payer string           Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string                Fees to pay along with transaction; eg: 10uatom\n      --from string                Name or address of private key with which to sign\n      --gas string                 gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float       adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string          Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only              Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                       help for update-migration-records-proposal\n      --is-expedited               Whether the proposal is expedited\n      --keyring-backend string     Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string         The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                     Use a connected Ledger device\n      --migration-records string   The migration records array\n      --node string                <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string                Note to add a description to the transaction (previously --memo)\n      --offline                    Offline mode (does not allow any online functionality)\n  -o, --output string              Output format (text|json) (default \"json\")\n  -s, --sequence uint              The sequence number of the signing account (offline mode only)\n      --sign-mode string           Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --summary string             Summary of proposal\n      --timeout-height uint        Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string                 Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --title string               Title of proposal\n  -y, --yes                        Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx gov submit-legacy-proposal update-pool-incentives": "Submit an update to the records for pool incentives\n\nUsage:\n  osmosisd tx gov submit-legacy-proposal update-pool-incentives [gaugeIds] [weights] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --authority string         The address of the governance account. Default is the sdk gov module account (default \"osmo10d07y265gmmuvt4z0w9aw880jnsr700jjeq4qp\")\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --deposit string           Deposit of proposal\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for update-pool-incentives\n      --is-expedited             Whether the proposal is expedited\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --summary string           Summary of proposal\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --title string             Title of proposal\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx gov submit-legacy-proposal update-unpool-whitelist": "This proposal will update the unpool whitelist if passed. Every pool id must be valid. If the pool id is invalid, the proposal will not be submitted. If the flag to overwrite is set, the whitelist is completely overridden. Otherwise, it is appended to the existing whitelist, having all duplicates removed.\n\nUsage:\n  osmosisd tx gov submit-legacy-proposal update-unpool-whitelist [flags]\n\nExamples:\nosmosisd tx gov submit-proposal update-unpool-whitelist --pool-ids \"1, 2, 3\" --title \"Title\" --summary \"Description\"\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --authority string         The address of the governance account. Default is the sdk gov module account (default \"osmo10d07y265gmmuvt4z0w9aw880jnsr700jjeq4qp\")\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --deposit string           Deposit of proposal\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for update-unpool-whitelist\n      --is-expedited             Whether the proposal is expedited\n      --is-overwrite             The flag indicating whether to overwrite the whitelist or append to it\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n      --pool-ids string          The new pool id whitelist to set\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --summary string           Summary of proposal\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --title string             Title of proposal\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx gov submit-legacy-proposal upload-code-id-and-whitelist": "Submit an upload code id and whitelist proposal\n\nUsage:\n  osmosisd tx gov submit-legacy-proposal upload-code-id-and-whitelist [wasm-file-path] [flags]\n\nExamples:\nosmosisd tx gov submit-proposal upload-code-id-and-whitelist x/cosmwasmpool/bytecode/transmuter.wasm --from lo-test1 --keyring-backend test --title \"Test\" --summary \"Test\" -b=block --chain-id localosmosis --fees=100000uosmo --gas=20000000\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --authority string         The address of the governance account. Default is the sdk gov module account (default \"osmo10d07y265gmmuvt4z0w9aw880jnsr700jjeq4qp\")\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --deposit string           Deposit of proposal\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for upload-code-id-and-whitelist\n      --is-expedited             Whether the proposal is expedited\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --summary string           Summary of proposal\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --title string             Title of proposal\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx gov submit-proposal": "Submit a proposal along with some messages, metadata and deposit.\nThey should be defined in a JSON file.\n\nExample:\n$ osmosisd tx gov submit-proposal path/to/proposal.json\n\nWhere proposal.json contains:\n\n{\n  // array of proto-JSON-encoded sdk.Msgs\n  \"messages\": [\n    {\n      \"@type\": \"/cosmos.bank.v1beta1.MsgSend\",\n      \"from_address\": \"cosmos1...\",\n      \"to_address\": \"cosmos1...\",\n      \"amount\":[{\"denom\": \"stake\",\"amount\": \"10\"}]\n    }\n  ],\n  \"metadata: \"4pIMOgIGx1vZGU=\", // base64-encoded metadata\n  \"deposit\": \"10stake\"\n  \"title: \"My proposal\"\n  \"summary\": \"A short summary of my proposal\",\n  \"expedited\": false\n}\n\nmetadata example: \n{\n\t\"title\": \"\",\n\t\"authors\": [\"\"],\n\t\"summary\": \"\",\n\t\"details\": \"\", \n\t\"proposal_forum_url\": \"\",\n\t\"vote_option_context\": \"\",\n}\n\nUsage:\n  osmosisd tx gov submit-proposal [path/to/proposal.json] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for submit-proposal\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx gov vote": "Submit a vote for an active proposal. You can\nfind the proposal-id by running \"osmosisd query gov proposals\".\n\nExample:\n$ osmosisd tx gov vote 1 yes --from mykey\n\nUsage:\n  osmosisd tx gov vote [proposal-id] [option] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for vote\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --metadata string          Specify metadata of the vote\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx gov weighted-vote": "Submit a vote for an active proposal. You can\nfind the proposal-id by running \"osmosisd query gov proposals\".\n\nExample:\n$ osmosisd tx gov weighted-vote 1 yes=0.6,no=0.3,abstain=0.05,no_with_veto=0.05 --from mykey\n\nUsage:\n  osmosisd tx gov weighted-vote [proposal-id] [weighted-options] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for weighted-vote\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --metadata string          Specify metadata of the weighted vote\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx ibc": "IBC transaction subcommands\n\nUsage:\n  osmosisd tx ibc [flags]\n  osmosisd tx ibc [command]\n\nAvailable Commands:\n  channel     IBC channel transaction subcommands\n  client      IBC client transaction subcommands\n\nFlags:\n  -h, --help   help for ibc\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd tx ibc [command] --help\" for more information about a command.",
  "osmosisd tx ibc channel": "IBC channel transaction subcommands\n\nUsage:\n  osmosisd tx ibc channel [flags]\n\nFlags:\n  -h, --help   help for channel\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx ibc client": "IBC client transaction subcommands\n\nUsage:\n  osmosisd tx ibc client [flags]\n  osmosisd tx ibc client [command]\n\nAvailable Commands:\n  create       create new IBC client\n  misbehaviour submit a client misbehaviour\n  update       update existing client with a client message\n  upgrade      upgrade an IBC client\n\nFlags:\n  -h, --help   help for client\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd tx ibc client [command] --help\" for more information about a command.",
  "osmosisd tx ibc client create": "create a new IBC client with the specified client state and consensus state\n\t- ClientState JSON example: {\"@type\":\"/ibc.lightclients.solomachine.v1.ClientState\",\"sequence\":\"1\",\"frozen_sequence\":\"0\",\"consensus_state\":{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AtK50+5pJOoaa04qqAqrnyAqsYrwrR/INnA6UPIaYZlp\"},\"diversifier\":\"testing\",\"timestamp\":\"10\"},\"allow_update_after_proposal\":false}\n\t- ConsensusState JSON example: {\"@type\":\"/ibc.lightclients.solomachine.v1.ConsensusState\",\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AtK50+5pJOoaa04qqAqrnyAqsYrwrR/INnA6UPIaYZlp\"},\"diversifier\":\"testing\",\"timestamp\":\"10\"}\n\nUsage:\n  osmosisd tx ibc client create [path/to/client_state.json] [path/to/consensus_state.json] [flags]\n\nExamples:\nosmosisd tx ibc client create [path/to/client_state.json] [path/to/consensus_state.json] --from node0 --home ../node0/<app>cli --chain-id $CID\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for create\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx ibc client misbehaviour": "submit a client misbehaviour to prevent future updates\n\nUsage:\n  osmosisd tx ibc client misbehaviour [clientID] [path/to/misbehaviour.json] [flags]\n\nExamples:\nosmosisd tx ibc client misbehaviour [clientID] [path/to/misbehaviour.json] --from node0 --home ../node0/<app>cli --chain-id $CID\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for misbehaviour\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx ibc client update": "update existing client with a client message, for example a header, misbehaviour or batch update\n\nUsage:\n  osmosisd tx ibc client update [client-id] [path/to/client_msg.json] [flags]\n\nExamples:\nosmosisd tx ibc client update [client-id] [path/to/client_msg.json] --from node0 --home ../node0/<app>cli --chain-id $CID\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for update\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx ibc client upgrade": "upgrade the IBC client associated with the provided client identifier while providing proof committed by the counterparty chain to the new client and consensus states\n\t- ClientState JSON example: {\"@type\":\"/ibc.lightclients.solomachine.v1.ClientState\",\"sequence\":\"1\",\"frozen_sequence\":\"0\",\"consensus_state\":{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AtK50+5pJOoaa04qqAqrnyAqsYrwrR/INnA6UPIaYZlp\"},\"diversifier\":\"testing\",\"timestamp\":\"10\"},\"allow_update_after_proposal\":false}\n\t- ConsensusState JSON example: {\"@type\":\"/ibc.lightclients.solomachine.v1.ConsensusState\",\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AtK50+5pJOoaa04qqAqrnyAqsYrwrR/INnA6UPIaYZlp\"},\"diversifier\":\"testing\",\"timestamp\":\"10\"}\n\nUsage:\n  osmosisd tx ibc client upgrade [client-identifier] [path/to/client_state.json] [path/to/consensus_state.json] [upgrade-client-proof] [upgrade-consensus-state-proof] [flags]\n\nExamples:\nosmosisd tx ibc client upgrade [client-identifier] [path/to/client_state.json] [path/to/consensus_state.json] [client-state-proof] [consensus-state-proof] --from node0 --home ../node0/<app>cli --chain-id $CID\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for upgrade\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx ibc-transfer": "IBC fungible token transfer transaction subcommands\n\nUsage:\n  osmosisd tx ibc-transfer [flags]\n  osmosisd tx ibc-transfer [command]\n\nAvailable Commands:\n  transfer    Transfer a fungible token through IBC\n\nFlags:\n  -h, --help   help for ibc-transfer\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd tx ibc-transfer [command] --help\" for more information about a command.",
  "osmosisd tx ibc-transfer transfer": "Transfer a fungible token through IBC. Timeouts can be specified\nas absolute or relative using the \"absolute-timeouts\" flag. Timeout height can be set by passing in the height string\nin the form {revision}-{height} using the \"packet-timeout-height\" flag. Relative timeout height is added to the block\nheight queried from the latest consensus state corresponding to the counterparty channel. Relative timeout timestamp \nis added to the greater value of the local clock time and the block timestamp queried from the latest consensus state \ncorresponding to the counterparty channel. Any timeout set to 0 is disabled.\n\nUsage:\n  osmosisd tx ibc-transfer transfer [src-port] [src-channel] [receiver] [amount] [flags]\n\nExamples:\nosmosisd tx ibc-transfer transfer [src-port] [src-channel] [receiver] [amount]\n\nFlags:\n      --absolute-timeouts               Timeout flags are used as absolute timeouts.\n  -a, --account-number uint             The account number of the signing account (offline mode only)\n      --aux                             Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string           Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string                 The network chain ID\n      --dry-run                         ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string              Fee granter grants fees for the transaction\n      --fee-payer string                Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string                     Fees to pay along with transaction; eg: 10uatom\n      --from string                     Name or address of private key with which to sign\n      --gas string                      gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float            adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string               Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only                   Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                            help for transfer\n      --keyring-backend string          Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string              The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                          Use a connected Ledger device\n      --memo string                     Memo to be sent along with the packet.\n      --node string                     <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string                     Note to add a description to the transaction (previously --memo)\n      --offline                         Offline mode (does not allow any online functionality)\n  -o, --output string                   Output format (text|json) (default \"json\")\n      --packet-timeout-height string    Packet timeout block height. The timeout is disabled when set to 0-0. (default \"0-1000\")\n      --packet-timeout-timestamp uint   Packet timeout timestamp in nanoseconds from now. Default is 10 minutes. The timeout is disabled when set to 0. (default 600000000000)\n  -s, --sequence uint                   The sequence number of the signing account (offline mode only)\n      --sign-mode string                Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint             Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string                      Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                             Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx incentives": "incentives transactions subcommands\n\nUsage:\n  osmosisd tx incentives [command]\n  \nAvailable Commands:\n  add-to-gauge add coins to gauge to distribute more rewards to users\n  create-gauge create a gauge to distribute rewards to users. For duration lock gauges set poolId = 0 and for all CL (no-lock) gauges set it to a CL poolId.\n  create-group create a group in order to split incentives between pools\n\nUse \"osmosisd tx incentives [command] --help\" for more information about a command.",
  "osmosisd tx incentives add-to-gauge": "add coins to gauge to distribute more rewards to users\n\nUsage:\n  osmosisd tx incentives add-to-gauge [gauge-id] [rewards] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for add-to-gauge\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx incentives create-gauge": "create a gauge to distribute rewards to users. For duration lock gauges set poolId = 0 and for all CL (no-lock) gauges set it to a CL poolId.\n\nUsage:\n  osmosisd tx incentives create-gauge [lockup_denom] [reward] [poolId] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --duration duration        The duration token to be locked, default 1d(24h). Other examples are 7d(168h), 14d(336h). Maximum unit is hour. (default 24h0m0s)\n      --epochs uint              Total epochs to distribute tokens\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for create-gauge\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n      --perpetual                Perpetual distribution\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --start-time string        Timestamp to begin distribution\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx incentives create-group": "create a group in order to split incentives between pools\n\nUsage:\n  osmosisd tx incentives create-group [coins] [num-epochs-paid-over] [pool-ids] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for create-group\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx interchain-accounts": "IBC interchain accounts transaction subcommands\n\nUsage:\n  osmosisd tx interchain-accounts [command]\n\nAliases:\n  interchain-accounts, ica\n\nAvailable Commands:\n  controller  IBC interchain accounts controller transaction subcommands\n  host        IBC interchain accounts host transaction subcommands\n\nFlags:\n  -h, --help   help for interchain-accounts\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd tx interchain-accounts [command] --help\" for more information about a command.",
  "osmosisd tx interchain-accounts controller": "IBC interchain accounts controller transaction subcommands\n\nUsage:\n  osmosisd tx interchain-accounts controller [flags]\n  osmosisd tx interchain-accounts controller [command]\n\nAvailable Commands:\n  register    Register an interchain account on the provided connection.\n  send-tx     Send an interchain account tx on the provided connection.\n\nFlags:\n  -h, --help   help for controller\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd tx interchain-accounts controller [command] --help\" for more information about a command.",
  "osmosisd tx interchain-accounts controller register": "Register an account on the counterparty chain via the \nconnection id from the source chain. Connection identifier should be for the source chain \nand the interchain account will be created on the counterparty chain. Callers are expected to \nprovide the appropriate application version string via {version} flag. Generates a new \nport identifier using the provided owner string, binds to the port identifier and claims \nthe associated capability.\n\nUsage:\n  osmosisd tx interchain-accounts controller register [connection-id] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for register\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --version string           Controller chain channel version\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx interchain-accounts controller send-tx": "Submits pre-built packet data containing messages to be executed on the host chain \nand attempts to send the packet. Packet data is provided as json, file or string. An \nappropriate relative timeoutTimestamp must be provided with flag {relative-packet-timeout}\n\nUsage:\n  osmosisd tx interchain-accounts controller send-tx [connection-id] [path/to/packet_msg.json] [flags]\n\nFlags:\n  -a, --account-number uint            The account number of the signing account (offline mode only)\n      --aux                            Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string          Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string                The network chain ID\n      --dry-run                        ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string             Fee granter grants fees for the transaction\n      --fee-payer string               Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string                    Fees to pay along with transaction; eg: 10uatom\n      --from string                    Name or address of private key with which to sign\n      --gas string                     gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float           adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string              Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only                  Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                           help for send-tx\n      --keyring-backend string         Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string             The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                         Use a connected Ledger device\n      --node string                    <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string                    Note to add a description to the transaction (previously --memo)\n      --offline                        Offline mode (does not allow any online functionality)\n  -o, --output string                  Output format (text|json) (default \"json\")\n      --relative-packet-timeout uint   Relative packet timeout in nanoseconds from now. Default is 10 minutes. (default 600000000000)\n  -s, --sequence uint                  The sequence number of the signing account (offline mode only)\n      --sign-mode string               Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint            Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string                     Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                            Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx interchain-accounts host": "IBC interchain accounts host transaction subcommands\n\nUsage:\n  osmosisd tx interchain-accounts host [flags]\n  osmosisd tx interchain-accounts host [command]\n\nAvailable Commands:\n  generate-packet-data Generates protobuf or proto3 JSON encoded ICA packet data.\n\nFlags:\n  -h, --help   help for host\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd tx interchain-accounts host [command] --help\" for more information about a command.",
  "osmosisd tx interchain-accounts host generate-packet-data": "generate-packet-data accepts a message string and serializes it (depending on the\nencoding parameter) using protobuf or proto3 JSON into packet data which is outputted to stdout.\nIt can be used in conjunction with send-tx which submits pre-built packet data containing messages \nto be executed on the host chain. The default encoding format is protobuf if none is specified;\notherwise the encoding flag can be used in combination with either \"proto3\" or \"proto3json\".\n\nUsage:\n  osmosisd tx interchain-accounts host generate-packet-data [message] [flags]\n\nExamples:\nosmosisd tx interchain-accounts host generate-packet-data '{\n    \"@type\":\"/cosmos.bank.v1beta1.MsgSend\",\n    \"from_address\":\"cosmos15ccshhmp0gsx29qpqq6g4zmltnnvgmyu9ueuadh9y2nc5zj0szls5gtddz\",\n    \"to_address\":\"cosmos10h9stc5v6ntgeygf5xf945njqq5h32r53uquvw\",\n    \"amount\": [\n        {\n            \"denom\": \"stake\",\n            \"amount\": \"1000\"\n        }\n    ]\n}' --memo memo --encoding proto3json\n\n\nosmosisd tx interchain-accounts host generate-packet-data '[{\n    \"@type\":\"/cosmos.bank.v1beta1.MsgSend\",\n    \"from_address\":\"cosmos15ccshhmp0gsx29qpqq6g4zmltnnvgmyu9ueuadh9y2nc5zj0szls5gtddz\",\n    \"to_address\":\"cosmos10h9stc5v6ntgeygf5xf945njqq5h32r53uquvw\",\n    \"amount\": [\n        {\n            \"denom\": \"stake\",\n            \"amount\": \"1000\"\n        }\n    ]\n},\n{\n\t\"@type\": \"/cosmos.staking.v1beta1.MsgDelegate\",\n\t\"delegator_address\": \"cosmos15ccshhmp0gsx29qpqq6g4zmltnnvgmyu9ueuadh9y2nc5zj0szls5gtddz\",\n\t\"validator_address\": \"cosmosvaloper1qnk2n4nlkpw9xfqntladh74w6ujtulwnmxnh3k\",\n\t\"amount\": {\n\t\t\"denom\": \"stake\",\n\t\t\"amount\": \"1000\"\n\t}\n}]'\n\nFlags:\n      --encoding string   optional encoding format of the messages in the interchain accounts packet data\n  -h, --help              help for generate-packet-data\n      --memo string       optional memo to be included in the interchain accounts packet data\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx lockup": "lockup transactions subcommands\n\nUsage:\n  osmosisd tx lockup [command]\n  \nAvailable Commands:\n  begin-unlock-by-id          begin unlock individual period lock by ID\n  begin-unlock-tokens         begin unlock not unlocking tokens from lockup pool for sender\n  force-unlock-by-id          force unlocks individual period lock by ID\n  lock-tokens                 lock tokens into lockup pool from user account\n  set-reward-receiver-address sets reward receiver address for the designated lock id\n\nUse \"osmosisd tx lockup [command] --help\" for more information about a command.",
  "osmosisd tx lockup begin-unlock-by-id": "begin unlock individual period lock by ID\n\nUsage:\n  osmosisd tx lockup begin-unlock-by-id [id] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --amount string            The amount to be unlocked. e.g. 1osmo\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for begin-unlock-by-id\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx lockup begin-unlock-tokens": "begin unlock not unlocking tokens from lockup pool for sender\n\nUsage:\n  osmosisd tx lockup begin-unlock-tokens [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for begin-unlock-tokens\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx lockup force-unlock-by-id": "force unlocks individual period lock by ID. if no amount provided, entire lock is unlocked\n\nUsage:\n  osmosisd tx lockup force-unlock-by-id [id] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --amount string            The amount to be unlocked. e.g. 1osmo\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for force-unlock-by-id\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx lockup lock-tokens": "lock tokens into lockup pool from user account\n\nUsage:\n  osmosisd tx lockup lock-tokens [coins] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --duration string          The duration token to be locked. e.g. 24h, 168h, 336h (default \"24h\")\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for lock-tokens\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx lockup set-reward-receiver-address": "sets reward receiver address for the designated lock id\n\nUsage:\n  osmosisd tx lockup set-reward-receiver-address [lock-id] [reward-receiver] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for set-reward-receiver-address\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx multi-sign": "Sign transactions created with the --generate-only flag that require multisig signatures.\n\nRead one or more signatures from one or more [signature] file, generate a multisig signature compliant to the\nmultisig key [name], and attach the key name to the transaction read from [file].\n\nExample:\n$ osmosisd tx multisign transaction.json k1k2k3 k1sig.json k2sig.json k3sig.json\n\nIf --signature-only flag is on, output a JSON representation\nof only the generated signature.\n\nIf the --offline flag is on, the client will not reach out to an external node.\nAccount number or sequence number lookups are not performed so you must\nset these parameters manually.\n\nThe current multisig implementation defaults to amino-json sign mode.\nThe SIGN_MODE_DIRECT sign mode is not supported.'\n\nUsage:\n  osmosisd tx multi-sign [file] [name] [[signature]...] [flags]\n\nAliases:\n  multi-sign, multisign\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --amino                    Generate Amino-encoded JSON suitable for submitting to the txs REST endpoint\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for multi-sign\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n      --output-document string   The document is written to the given file instead of STDOUT\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --signature-only           Print only the generated signature, then exit\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx poolmanager": "poolmanager transactions subcommands\n\nUsage:\n  osmosisd tx poolmanager [command]\n  \nAvailable Commands:\n  create-pool                       create a new pool and provide the liquidity to it\n  set-denom-pair-taker-fee          allows admin addresses to set the taker fee for a denom pair\n  split-route-swap-exact-amount-in  split route swap exact amount in\n  split-route-swap-exact-amount-out split route swap exact amount out\n  swap-exact-amount-in              swap exact amount in\n  swap-exact-amount-out             swap exact amount out\n\nUse \"osmosisd tx poolmanager [command] --help\" for more information about a command.",
  "osmosisd tx poolmanager create-pool": "Must provide path to a pool JSON file (--pool-file) describing the pool to be created\n\nUsage:\n  osmosisd tx poolmanager create-pool [flags]\n\nExamples:\nSample pool JSON file contents:\n{\n\t\"weights\": \"4uatom,4osmo,2uakt\",\n\t\"initial-deposit\": \"100uatom,5osmo,20uakt\",\n\t\"swap-fee\": \"0.01\",\n\t\"exit-fee\": \"0.01\",\n\t\"future-governor\": \"168h\"\n}\n\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for create-pool\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n      --pool-file string         Pool json file path (if this path is given, other create pool flags should not be used)\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx poolmanager set-denom-pair-taker-fee": "Allows admin addresses to set the taker fee for a denom pair.\n\nPassing in set-denom-pair-taker-fee separated by commas would be parsed automatically to pairs of denomPairTakerFee records.\nEx) set-denom-pair-taker-fee uion,uosmo,0.0016,stake,uosmo,0.005,uatom,uosmo,0.0015 ->\n[uion<>uosmo, takerFee 0.16%]\n[stake<>uosmo, takerFee 0.5%]\n[uatom<>uosmo, removes from state since its being set to the default takerFee value]\n\nUsage:\n  osmosisd tx poolmanager set-denom-pair-taker-fee [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for set-denom-pair-taker-fee\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n      --pool-file string         Pool json file path (if this path is given, other create pool flags should not be used)\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx poolmanager split-route-swap-exact-amount-in": "split route swap exact amount in\n\nUsage:\n  osmosisd tx poolmanager split-route-swap-exact-amount-in [routes] [token-in-denom] [token-out-min-amount] [flags]\n\nExamples:\nosmosisd tx poolmanager split-route-swap-exact-amount-in uosmo 1 --routes-file=\"./routes.json\" --from val --keyring-backend test -b=block --chain-id=localosmosis --fees 10000uosmo\n\t\t- routes.json\n\t\t{\n\t\t\t\"Route\": [\n\t\t\t  {\n\t\t\t  \"swap_amount_in_route\": [\n\t\t\t\t{\n\t\t\t\t\"pool_id\": 1,\n\t\t\t\t\"token_out_denom\": \"uion\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\"pool_id\": 2,\n\t\t\t\t\"token_out_denom\": \"uosmo\"\n\t\t\t\t}\n\t\t\t  ],\n\t\t\t  \"token_in_amount\": 1000\n\t\t\t  },\n\t\t\t  {\n\t\t\t  \"swap_amount_in_route\": [\n\t\t\t\t{\n\t\t\t\t\"pool_id\": 3,\n\t\t\t\t\"token_out_denom\": \"bar\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\"pool_id\": 4,\n\t\t\t\t\"token_out_denom\": \"uosmo\"\n\t\t\t\t}\n\t\t\t  ],\n\t\t\t  \"token_in_amount\": 999\n\t\t\t  }\n\t\t\t]\n\t\t}\n\t\t\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for split-route-swap-exact-amount-in\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n      --routes-file string       Routes json file path (if this path is given, other routes flags should not be used)\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx poolmanager split-route-swap-exact-amount-out": "split route swap exact amount out\n\nUsage:\n  osmosisd tx poolmanager split-route-swap-exact-amount-out [routes] [token-out-denom] [token-in-max-amount] [flags]\n\nExamples:\nosmosisd tx poolmanager split-route-swap-exact-amount-out uosmo 1 --routes-file=\"./routes.json\" --from val --keyring-backend test -b=block --chain-id=localosmosis --fees 10000uosmo\n\t\t- routes.json\n\t\t{\n\t\t\t\"route\": [\n\t\t\t\t{\n\t\t\t\t\"swap_amount_out_route\": [\n\t\t\t\t\t{\n\t\t\t\t\t\"pool_id\": 1,\n\t\t\t\t\t\"token_in_denom\": \"uion\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\"pool_id\": 2,\n\t\t\t\t\t\"token_in_denom\": \"uosmo\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"token_out_amount\": 1000\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\"swap_amount_out_route\": [\n\t\t\t\t\t{\n\t\t\t\t\t\"pool_id\": 3,\n\t\t\t\t\t\"token_in_denom\": \"uion\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\"pool_id\": 4,\n\t\t\t\t\t\"token_in_denom\": \"uosmo\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"token_out_amount\": 999\n\t\t\t\t}\n\t\t\t]\n\t\t\t}\n\t\t\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for split-route-swap-exact-amount-out\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n      --routes-file string       Routes json file path (if this path is given, other routes flags should not be used)\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx poolmanager swap-exact-amount-in": "swap exact amount in\n\nUsage:\n  osmosisd tx poolmanager swap-exact-amount-in [routes] [token-in] [token-out-min-amount] [flags]\n\nExamples:\nosmosisd tx poolmanager swap-exact-amount-in 2000000uosmo 1 --swap-route-pool-ids 5 --swap-route-denoms uion --from val --keyring-backend test -b=block --chain-id=localosmosis --fees 10000uosmo\n\nFlags:\n  -a, --account-number uint          The account number of the signing account (offline mode only)\n      --aux                          Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string        Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string              The network chain ID\n      --dry-run                      ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string           Fee granter grants fees for the transaction\n      --fee-payer string             Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string                  Fees to pay along with transaction; eg: 10uatom\n      --from string                  Name or address of private key with which to sign\n      --gas string                   gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float         adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string            Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only                Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                         help for swap-exact-amount-in\n      --keyring-backend string       Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string           The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                       Use a connected Ledger device\n      --node string                  <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string                  Note to add a description to the transaction (previously --memo)\n      --offline                      Offline mode (does not allow any online functionality)\n  -o, --output string                Output format (text|json) (default \"json\")\n  -s, --sequence uint                The sequence number of the signing account (offline mode only)\n      --sign-mode string             Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --swap-route-denoms string     swap route amount\n      --swap-route-pool-ids string   swap route pool id\n      --timeout-height uint          Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string                   Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                          Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx poolmanager swap-exact-amount-out": "swap exact amount out\n\nUsage:\n  osmosisd tx poolmanager swap-exact-amount-out [routes] [token-in-max-amount] [token-out] [flags]\n\nExamples:\nosmosisd tx poolmanager swap-exact-amount-out 100uion 1000000 --swap-route-pool-ids 1 --swap-route-denoms uosmo --from val --keyring-backend test -b=block --chain-id=localosmosis --fees 10000uosmo\n\nFlags:\n  -a, --account-number uint          The account number of the signing account (offline mode only)\n      --aux                          Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string        Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string              The network chain ID\n      --dry-run                      ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string           Fee granter grants fees for the transaction\n      --fee-payer string             Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string                  Fees to pay along with transaction; eg: 10uatom\n      --from string                  Name or address of private key with which to sign\n      --gas string                   gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float         adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string            Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only                Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                         help for swap-exact-amount-out\n      --keyring-backend string       Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string           The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                       Use a connected Ledger device\n      --node string                  <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string                  Note to add a description to the transaction (previously --memo)\n      --offline                      Offline mode (does not allow any online functionality)\n  -o, --output string                Output format (text|json) (default \"json\")\n  -s, --sequence uint                The sequence number of the signing account (offline mode only)\n      --sign-mode string             Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --swap-route-denoms string     swap route amount\n      --swap-route-pool-ids string   swap route pool id\n      --timeout-height uint          Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string                   Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                          Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx protorev": "protorev transactions subcommands\n\nUsage:\n  osmosisd tx protorev [command]\n  \nAvailable Commands:\n  set-admin-account-proposal    submit a set protorev admin account proposal to set the admin account for x/protorev\n  set-base-denoms               set the protorev base denoms\n  set-developer-account         set the protorev developer account\n  set-enabled-proposal          submit a set protorev enabled proposal to enable or disable the protocol\n  set-hot-routes                set the protorev hot routes\n  set-info-by-pool-type         set the protorev pool type info\n  set-max-pool-points-per-block set the max pool points that can be consumed per block\n  set-max-pool-points-per-tx    set the max pool points that can be consumed per tx\n\nUse \"osmosisd tx protorev [command] --help\" for more information about a command.",
  "osmosisd tx protorev set-admin-account-proposal": "submit a set protorev admin account proposal to set the admin account for x/protorev\n\nUsage:\n  osmosisd tx protorev set-admin-account-proposal [sdk.AccAddress] [flags]\n\nExamples:\n$ osmosisd tx protorev set-protorev-admin-account osmo123... --from mykey\n\nFlags:\n      --authority string   The address of the governance account. Default is the sdk gov module account (default \"osmo10d07y265gmmuvt4z0w9aw880jnsr700jjeq4qp\")\n      --deposit string     Deposit of proposal\n  -h, --help               help for set-admin-account-proposal\n      --is-expedited       Whether the proposal is expedited\n      --summary string     Summary of proposal\n      --title string       Title of proposal\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx protorev set-base-denoms": "Must provide a json file with all the base denoms that will be set. \n\t\tSample json file:\n\t\t[\n\t\t\t{\n\t\t\t\t\"step_size\" : 10000,\n\t\t\t\t\"denom\" : \"uosmo\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"step_size\" : 10000,\n\t\t\t\t\"denom\" : \"atom\"\n\t\t\t}\n\t\t]\n\nUsage:\n  osmosisd tx protorev set-base-denoms [flags]\n\nExamples:\n$ osmosisd tx protorev set-base-denoms denoms.json --from mykey\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for set-base-denoms\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx protorev set-developer-account": "set the protorev developer account\n\nUsage:\n  osmosisd tx protorev set-developer-account [developer-account] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for set-developer-account\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx protorev set-enabled-proposal": "submit a set protorev enabled proposal to enable or disable the protocol\n\nUsage:\n  osmosisd tx protorev set-enabled-proposal [boolean] [flags]\n\nExamples:\n$ osmosisd tx protorev set-protorev-enabled true --from mykey\n\nFlags:\n      --authority string   The address of the governance account. Default is the sdk gov module account (default \"osmo10d07y265gmmuvt4z0w9aw880jnsr700jjeq4qp\")\n      --deposit string     Deposit of proposal\n  -h, --help               help for set-enabled-proposal\n      --is-expedited       Whether the proposal is expedited\n      --summary string     Summary of proposal\n      --title string       Title of proposal\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx protorev set-hot-routes": "Must provide a json file with all of the hot routes that will be set. \n\t\tSample json file:\n\t\t[\n\t\t\t{\n\t\t\t\t\"token_in\": \"uosmo\",\n\t\t\t\t\"token_out\": \"ibc/123...\",\n\t\t\t\t\"arb_routes\" : [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"trades\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"pool\": 1,\n\t\t\t\t\t\t\t\t\"token_in\": \"uosmo\",\n\t\t\t\t\t\t\t\t\"token_out\": \"uatom\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"pool\": 2,\n\t\t\t\t\t\t\t\t\"token_in\": \"uatom\",\n\t\t\t\t\t\t\t\t\"token_out\": \"ibc/123...\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"pool\": 0,\n\t\t\t\t\t\t\t\t\"token_in\": \"ibc/123...\",\n\t\t\t\t\t\t\t\t\"token_out\": \"uosmo\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"step_size\": 1000000\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\nUsage:\n  osmosisd tx protorev set-hot-routes [flags]\n\nExamples:\n$ osmosisd tx protorev set-hot-routes routes.json --from mykey\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for set-hot-routes\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx protorev set-info-by-pool-type": "Must provide a json file with all the pool info that will be set. This does NOT set info for a single pool type.\n\t\tAll information must be provided across all pool types in the json file.\n\t\tSample json file:\n\t\t{\n\t\t\t\"stable\" : {\n\t\t\t\t\"weight\" : 1,\n\t\t\t},\n\t\t\t\"concentrated\" : {\n\t\t\t\t\"weight\" : 1,\n\t\t\t\t\"max_ticks_crossed\": 10,\n\t\t\t},\n\t\t\t\"balancer\" : {\n\t\t\t\t\"weight\" : 1,\n\t\t\t},\n\t\t\t\"cosmwasm\" : {\n\t\t\t\t\"weight_maps\" : [\n\t\t\t\t\t{\"contract_address\" : \"cosmos123...\", \"weight\" : 1}\n\t\t\t\t],\n\t\t\t},\n\t\t}\n\nUsage:\n  osmosisd tx protorev set-info-by-pool-type [flags]\n\nExamples:\n$ osmosisd tx protorev set-info-by-pool-type pool_info.json --from mykey\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for set-info-by-pool-type\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx protorev set-max-pool-points-per-block": "set the max pool points that can be consumed per block\n\nUsage:\n  osmosisd tx protorev set-max-pool-points-per-block [max-pool-points-per-block] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for set-max-pool-points-per-block\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx protorev set-max-pool-points-per-tx": "set the max pool points that can be consumed per tx\n\nUsage:\n  osmosisd tx protorev set-max-pool-points-per-tx [max-pool-points-per-tx] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for set-max-pool-points-per-tx\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx sign": "Sign a transaction created with the --generate-only flag.\nIt will read a transaction from [file], sign it, and print its JSON encoding.\n\nIf the --signature-only flag is set, it will output the signature parts only.\n\nThe --offline flag makes sure that the client will not reach out to full node.\nAs a result, the account and sequence number queries will not be performed and\nit is required to set such parameters manually. Note, invalid values will cause\nthe transaction to fail.\n\nThe --multisig=<multisig_key> flag generates a signature on behalf of a multisig account\nkey. It implies --signature-only. Full multisig signed transactions may eventually\nbe generated via the 'multisign' command.\n\nUsage:\n  osmosisd tx sign [file] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --amino                    Generate Amino encoded JSON suitable for submiting to the txs REST endpoint\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for sign\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --multisig string          Address or key name of the multisig account on behalf of which the transaction shall be signed\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n      --output-document string   The document will be written to the given file instead of STDOUT\n      --overwrite                Overwrite existing signatures with a new one. If disabled, new signature will be appended\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --signature-only           Print only the signatures\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx sign-batch": "Sign batch files of transactions generated with --generate-only.\nThe command processes list of transactions from a file (one StdTx each line), or multiple files.\nThen generates signed transactions or signatures and print their JSON encoding, delimited by '\\n'.\nAs the signatures are generated, the command updates the account and sequence number accordingly.\n\nIf the --signature-only flag is set, it will output the signature parts only.\n\nThe --offline flag makes sure that the client will not reach out to full node.\nAs a result, the account and the sequence number queries will not be performed and\nit is required to set such parameters manually. Note, invalid values will cause\nthe transaction to fail. The sequence will be incremented automatically for each\ntransaction that is signed.\n\nIf --account-number or --sequence flag is used when offline=false, they are ignored and \noverwritten by the default flag values.\n\nThe --multisig=<multisig_key> flag generates a signature on behalf of a multisig\naccount key. It implies --signature-only.\n\nUsage:\n  osmosisd tx sign-batch [file] ([file2]...) [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --append                   Combine all message and generate single signed transaction for broadcast.\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for sign-batch\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --multisig string          Address or key name of the multisig account on behalf of which the transaction shall be signed\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n      --output-document string   The document will be written to the given file instead of STDOUT\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --signature-only           Print only the generated signature, then exit\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx slashing": "Slashing transaction subcommands\n\nUsage:\n  osmosisd tx slashing [flags]\n  osmosisd tx slashing [command]\n\nAvailable Commands:\n  unjail      unjail validator previously jailed for downtime\n\nFlags:\n  -h, --help   help for slashing\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd tx slashing [command] --help\" for more information about a command.",
  "osmosisd tx slashing unjail": "unjail a jailed validator:\n\n$ <appd> tx slashing unjail --from mykey\n\nUsage:\n  osmosisd tx slashing unjail [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for unjail\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx staking": "Staking transaction subcommands\n\nUsage:\n  osmosisd tx staking [flags]\n  osmosisd tx staking [command]\n\nAvailable Commands:\n  cancel-unbond    Cancel unbonding delegation and delegate back to the validator\n  create-validator create new validator initialized with a self-delegation to it\n  delegate         Delegate liquid tokens to a validator\n  edit-validator   edit an existing validator account\n  redelegate       Redelegate illiquid tokens from one validator to another\n  unbond           Unbond shares from a validator\n\nFlags:\n  -h, --help   help for staking\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd tx staking [command] --help\" for more information about a command.",
  "osmosisd tx staking cancel-unbond": "Cancel Unbonding Delegation and delegate back to the validator.\n\nExample:\n$ osmosisd tx staking cancel-unbond osmovaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj 100stake 2 --from mykey\n\nUsage:\n  osmosisd tx staking cancel-unbond [validator-addr] [amount] [creation-height] [flags]\n\nExamples:\n$ osmosisd tx staking cancel-unbond osmovaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj 100stake 2 --from mykey\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for cancel-unbond\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx staking create-validator": "create new validator initialized with a self-delegation to it\n\nUsage:\n  osmosisd tx staking create-validator [flags]\n\nFlags:\n  -a, --account-number uint                 The account number of the signing account (offline mode only)\n      --amount string                       Amount of coins to bond\n      --aux                                 Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string               Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string                     The network chain ID\n      --commission-max-change-rate string   The maximum commission change rate percentage (per day)\n      --commission-max-rate string          The maximum commission rate percentage\n      --commission-rate string              The initial commission rate percentage\n      --details string                      The validator's (optional) details\n      --dry-run                             ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string                  Fee granter grants fees for the transaction\n      --fee-payer string                    Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string                         Fees to pay along with transaction; eg: 10uatom\n      --from string                         Name or address of private key with which to sign\n      --gas string                          gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float                adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string                   Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only                       Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                                help for create-validator\n      --identity string                     The optional identity signature (ex. UPort or Keybase)\n      --ip string                           The node's public IP. It takes effect only when used in combination with --generate-only\n      --keyring-backend string              Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string                  The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                              Use a connected Ledger device\n      --min-self-delegation string          The minimum self delegation required on the validator\n      --moniker string                      The validator's name\n      --node string                         <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --node-id string                      The node's ID\n      --note string                         Note to add a description to the transaction (previously --memo)\n      --offline                             Offline mode (does not allow any online functionality)\n  -o, --output string                       Output format (text|json) (default \"json\")\n      --pubkey string                       The validator's Protobuf JSON encoded public key\n      --security-contact string             The validator's (optional) security contact email\n  -s, --sequence uint                       The sequence number of the signing account (offline mode only)\n      --sign-mode string                    Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint                 Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string                          Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --website string                      The validator's (optional) website\n  -y, --yes                                 Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx staking delegate": "Delegate an amount of liquid coins to a validator from your wallet.\n\nExample:\n$ osmosisd tx staking delegate osmovaloper1l2rsakp388kuv9k8qzq6lrm9taddae7fpx59wm 1000stake --from mykey\n\nUsage:\n  osmosisd tx staking delegate [validator-addr] [amount] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for delegate\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx staking edit-validator": "edit an existing validator account\n\nUsage:\n  osmosisd tx staking edit-validator [flags]\n\nFlags:\n  -a, --account-number uint          The account number of the signing account (offline mode only)\n      --aux                          Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string        Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string              The network chain ID\n      --commission-rate string       The new commission rate percentage\n      --details string               The validator's (optional) details (default \"[do-not-modify]\")\n      --dry-run                      ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string           Fee granter grants fees for the transaction\n      --fee-payer string             Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string                  Fees to pay along with transaction; eg: 10uatom\n      --from string                  Name or address of private key with which to sign\n      --gas string                   gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float         adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string            Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only                Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                         help for edit-validator\n      --identity string              The (optional) identity signature (ex. UPort or Keybase) (default \"[do-not-modify]\")\n      --keyring-backend string       Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string           The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                       Use a connected Ledger device\n      --min-self-delegation string   The minimum self delegation required on the validator\n      --new-moniker string           The validator's name (default \"[do-not-modify]\")\n      --node string                  <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string                  Note to add a description to the transaction (previously --memo)\n      --offline                      Offline mode (does not allow any online functionality)\n  -o, --output string                Output format (text|json) (default \"json\")\n      --security-contact string      The validator's (optional) security contact email (default \"[do-not-modify]\")\n  -s, --sequence uint                The sequence number of the signing account (offline mode only)\n      --sign-mode string             Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint          Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string                   Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --website string               The validator's (optional) website (default \"[do-not-modify]\")\n  -y, --yes                          Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx staking redelegate": "Redelegate an amount of illiquid staking tokens from one validator to another.\n\nExample:\n$ osmosisd tx staking redelegate osmovaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj osmovaloper1l2rsakp388kuv9k8qzq6lrm9taddae7fpx59wm 100stake --from mykey\n\nUsage:\n  osmosisd tx staking redelegate [src-validator-addr] [dst-validator-addr] [amount] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for redelegate\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx staking unbond": "Unbond an amount of bonded shares from a validator.\n\nExample:\n$ osmosisd tx staking unbond osmovaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj 100stake --from mykey\n\nUsage:\n  osmosisd tx staking unbond [validator-addr] [amount] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for unbond\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx superfluid": "superfluid transactions subcommands\n\nUsage:\n  osmosisd tx superfluid [command]\n  \nAvailable Commands:\n  add-to-superfluid-cl-position              add to an existing superfluid staked concentrated liquidity position\n  create-full-range-position-and-sf-delegate creates a full range concentrated position and superfluid delegates it to the provided validator\n  delegate                                   superfluid delegate a lock to a validator\n  lock-and-superfluid-delegate               lock and superfluid delegate\n  unbond-convert-and-stake                   instantly unbond any locked gamm shares convert them into osmo and stake\n  unbond-lock                                unbond lock that has been superfluid staked\n  undelegate                                 superfluid undelegate a lock from a validator\n  undelegate-and-unbond-lock                 superfluid undelegate and unbond lock for the given amount of coin\n  unlock-and-migrate-to-cl                   unlock and migrate gamm shares to full range concentrated position\n  unpool-whitelisted-pool                    unpool whitelisted pool\n\nUse \"osmosisd tx superfluid [command] --help\" for more information about a command.",
  "osmosisd tx superfluid add-to-superfluid-cl-position": "add to an existing superfluid staked concentrated liquidity position\n\nUsage:\n  osmosisd tx superfluid add-to-superfluid-cl-position [position-id] [token-desired0] [token-desired1] [flags]\n\nExamples:\nadd-to-superfluid-cl-position 10 1000000000uosmo 10000000uion\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for add-to-superfluid-cl-position\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx superfluid create-full-range-position-and-sf-delegate": "creates a full range concentrated position and superfluid delegates it to the provided validator\n\nUsage:\n  osmosisd tx superfluid create-full-range-position-and-sf-delegate [coins] [val-addr] [pool-id] [flags]\n\nExamples:\ncreate-full-range-position-and-sf-delegate 100000000uosmo,10000udai 45 --from val --chain-id osmosis-1\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for create-full-range-position-and-sf-delegate\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx superfluid delegate": "superfluid delegate a lock to a validator\n\nUsage:\n  osmosisd tx superfluid delegate [lock_id] [val_addr] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for delegate\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx superfluid lock-and-superfluid-delegate": "lock and superfluid delegate\n\nUsage:\n  osmosisd tx superfluid lock-and-superfluid-delegate [tokens] [val_addr] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for lock-and-superfluid-delegate\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx superfluid unbond-convert-and-stake": "instantly unbond any locked gamm shares convert them into osmo and stake\n\nUsage:\n  osmosisd tx superfluid unbond-convert-and-stake [lock-id] [valAddr] [min-amount-to-stake](optional) [shares-to-convert](optional) [flags]\n\nExamples:\nunbond-convert-and-stake 10 osmo1xxx 100000uosmo\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for unbond-convert-and-stake\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx superfluid unbond-lock": "unbond lock that has been superfluid staked\n\nUsage:\n  osmosisd tx superfluid unbond-lock [lock-id] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for unbond-lock\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx superfluid undelegate": "superfluid undelegate a lock from a validator\n\nUsage:\n  osmosisd tx superfluid undelegate [lock-id] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for undelegate\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx superfluid undelegate-and-unbond-lock": "superfluid undelegate and unbond lock for the given amount of coin\n\nUsage:\n  osmosisd tx superfluid undelegate-and-unbond-lock [lock-id] [coin] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for undelegate-and-unbond-lock\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx superfluid unlock-and-migrate-to-cl": "unlock and migrate gamm shares to full range concentrated position\n\nUsage:\n  osmosisd tx superfluid unlock-and-migrate-to-cl [lock-id] [shares-to-migrate] [token-out-mins] [flags]\n\nExamples:\nunlock-and-migrate-cl 10 25000000000gamm/pool/2 1000000000uosmo,10000000uion\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for unlock-and-migrate-to-cl\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx superfluid unpool-whitelisted-pool": "unpool whitelisted pool\n\nUsage:\n  osmosisd tx superfluid unpool-whitelisted-pool [pool-id] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for unpool-whitelisted-pool\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx tokenfactory": "tokenfactory transactions subcommands\n\nUsage:\n  osmosisd tx tokenfactory [command]\n  \nAvailable Commands:\n  burn                Burn tokens from an address. Must have admin authority to do so.\n  change-admin        Changes the admin address for a factory-created denom. Must have admin authority to do so.\n  create-denom        create a new denom from an account. (Costs osmo though!)\n  mint                Mint a denom to an address. Must have admin authority to do so.\n  set-beforesend-hook Set a cosmwasm contract to be the beforesend hook for a factory-created denom. Must have admin authority to do so.\n\nUse \"osmosisd tx tokenfactory [command] --help\" for more information about a command.",
  "osmosisd tx tokenfactory burn": "Burn tokens from an address. Must have admin authority to do so.\n\nUsage:\n  osmosisd tx tokenfactory burn [amount] [burn-from-address] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for burn\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx tokenfactory change-admin": "Changes the admin address for a factory-created denom. Must have admin authority to do so.\n\nUsage:\n  osmosisd tx tokenfactory change-admin [denom] [new-admin] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for change-admin\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx tokenfactory create-denom": "create a new denom from an account. (Costs osmo though!)\n\nUsage:\n  osmosisd tx tokenfactory create-denom [subdenom] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for create-denom\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx tokenfactory mint": "Mint a denom to an address. Must have admin authority to do so.\n\nUsage:\n  osmosisd tx tokenfactory mint [amount] [mint-to-address] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for mint\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx tokenfactory set-beforesend-hook": "Set a cosmwasm contract to be the beforesend hook for a factory-created denom. Must have admin authority to do so.\n\nUsage:\n  osmosisd tx tokenfactory set-beforesend-hook [denom] [cosmwasm-address] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for set-beforesend-hook\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx txfees": "txfees transactions subcommands\n\nUsage:",
  "osmosisd tx validate-signatures": "Print the addresses that must sign the transaction, those who have already\nsigned it, and make sure that signatures are in the correct order.\n\nThe command would check whether all required signers have signed the transactions, whether\nthe signatures were collected in the right order, and if the signature is valid over the\ngiven transaction. If the --offline flag is also set, signature validation over the\ntransaction will be not be performed as that will require RPC communication with a full node.\n\nUsage:\n  osmosisd tx validate-signatures [file] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for validate-signatures\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx valsetpref": "valsetpref transactions subcommands\n\nUsage:\n  osmosisd tx valsetpref [command]\n  \nAvailable Commands:\n  delegate-valset              Delegate tokens to existing valset using delegatorAddress and tokenAmount.\n  redelegate-valset            Redelegate tokens from existing validators to new sets of validators\n  set-valset                   Creates a new validator set for the delegator with valOperAddress and weight\n  undelegate-rebalanced-valset Undelegate tokens from rebalanced valset using delegatorAddress and tokenAmount.\n  withdraw-reward-valset       Withdraw delegation reward form the new validator set.\n\nUse \"osmosisd tx valsetpref [command] --help\" for more information about a command.",
  "osmosisd tx valsetpref delegate-valset": "Delegate tokens to existing valset using delegatorAddress and tokenAmount.\n\nUsage:\n  osmosisd tx valsetpref delegate-valset [delegator] [coin] [flags]\n\nExamples:\nosmosisd tx valset-pref delegate-valset osmo1... 100stake\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for delegate-valset\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx valsetpref redelegate-valset": "Redelegate tokens from existing validators to new sets of validators\n\nUsage:\n  osmosisd tx valsetpref redelegate-valset [delegator] [preferences] [flags]\n\nExamples:\nosmosisd tx valset-pref redelegate-valset  osmo1... osmovaloper1efg...,osmovaloper1hij...  0.56,0.44\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for redelegate-valset\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx valsetpref set-valset": "Creates a new validator set for the delegator with valOperAddress and weight\n\nUsage:\n  osmosisd tx valsetpref set-valset [delegator] [preferences] [flags]\n\nExamples:\nosmosisd tx valset-pref set-valset osmo1... osmovaloper1abc...,osmovaloper1def...  0.56,0.44\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for set-valset\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx valsetpref undelegate-rebalanced-valset": "Undelegates from an existing valset, but calculates the valset weights based on current user delegations.\n\nUsage:\n  osmosisd tx valsetpref undelegate-rebalanced-valset [delegator] [coin] [flags]\n\nExamples:\nosmosisd tx valset-pref undelegate-rebalanced-valset osmo1... 100stake\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for undelegate-rebalanced-valset\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx valsetpref withdraw-reward-valset": "Withdraw delegation reward form the new validator set.\n\nUsage:\n  osmosisd tx valsetpref withdraw-reward-valset [delegator] [flags]\n\nExamples:\nosmosisd tx valset-pref withdraw-valset osmo1...\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for withdraw-reward-valset\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx vesting": "Vesting transaction subcommands\n\nUsage:\n  osmosisd tx vesting [flags]\n  osmosisd tx vesting [command]\n\nAvailable Commands:\n  clawback                        Transfer unvested amount out of a ClawbackVestingAccount.\n  create-clawback-vesting-account Create a new vesting account funded with an allocation of tokens, subject to clawback.\n  create-cliff-vesting-account    Create a new cliff vesting account funded with an allocation of tokens.\n  create-periodic-vesting-account Create a new vesting account funded with an allocation of tokens.\n  create-permanent-locked-account Create a new permanently locked account funded with an allocation of tokens.\n  create-vesting-account          Create a new vesting account funded with an allocation of tokens.\n\nFlags:\n  -h, --help   help for vesting\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd tx vesting [command] --help\" for more information about a command.",
  "osmosisd tx vesting clawback": "Must be requested by the original funder address (--from).\n\t\tMay provide a destination address (--dest), otherwise the coins return to the funder.\n\t\tDelegated or undelegating staking tokens will be transferred in the delegated (undelegating) state.\n\t\tThe recipient is vulnerable to slashing, and must act to unbond the tokens if desired.\n\nUsage:\n  osmosisd tx vesting clawback [address] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dest string              Address of destination (defaults to funder)\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for clawback\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx vesting create-clawback-vesting-account": "Must provide a lockup periods file (--lockup), a vesting periods file (--vesting), or both.\nIf both files are given, they must describe schedules for the same total amount.\nIf one file is omitted, it will default to a schedule that immediately unlocks or vests the entire amount.\nThe described amount of coins will be transferred from the --from address to the vesting account.\nUnvested coins may be \"clawed back\" by the funder with the clawback command.\nCoins may not be transferred out of the account if they are locked or unvested, but may be staked.\nStaking rewards are subject to a proportional vesting encumbrance.\n\nA periods file is a JSON object describing a sequence of unlocking or vesting events,\nwith a start time and an array of coins strings and durations relative to the start or previous event.\n\nUsage:\n  osmosisd tx vesting create-clawback-vesting-account [to_address] [flags]\n\nExamples:\nSample period file contents:\n{\n  \"start_time\": 1625204910,\n  \"periods\": [\n    {\n      \"coins\": \"10test\",\n      \"length\": 2592000 // 30 days\n    },\n    {\n      \"coins\": \"10test\",\n      \"length\": 2592000 // 30 days\n    }\n  ]\n}\n\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for create-clawback-vesting-account\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --lockup string            Path to file containing unlocking periods\n      --merge                    Merge new amount and schedule with existing ClawbackVestingAccount, if any\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --vesting string           Path to file containing vesting periods\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx vesting create-cliff-vesting-account": "Create a new delayed vesting account funded with an allocation of tokens. All vesting accouts created will have their start time\nset by the committed block's time. The cliff duration should be specified in hours.\n\nUsage:\n  osmosisd tx vesting create-cliff-vesting-account [to_address] [amount] [cliff_duration] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for create-cliff-vesting-account\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx vesting create-periodic-vesting-account": "A sequence of coins and period length in seconds. Periods are sequential, in that the duration of of a period only starts at the end of the previous period. The duration of the first period starts upon account creation. For instance, the following periods.json file shows 20 \"test\" coins vesting 30 days apart from each other.\n\t\tWhere periods.json contains:\n\n\t\tAn array of coin strings and unix epoch times for coins to vest\n{ \"start_time\": 1625204910,\n\"periods\":[\n {\n  \"coins\": \"10test\",\n  \"length_seconds\":2592000 //30 days\n },\n {\n\t\"coins\": \"10test\",\n\t\"length_seconds\":2592000 //30 days\n },\n]\n\t}\n\nUsage:\n  osmosisd tx vesting create-periodic-vesting-account [to_address] [periods_json_file] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for create-periodic-vesting-account\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx vesting create-permanent-locked-account": "Create a new account funded with an allocation of permanently locked tokens. These\ntokens may be used for staking but are non-transferable. Staking rewards will acrue as liquid and transferable\ntokens.\n\nUsage:\n  osmosisd tx vesting create-permanent-locked-account [to_address] [amount] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for create-permanent-locked-account\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx vesting create-vesting-account": "Create a new vesting account funded with an allocation of tokens. The\naccount can either be a delayed or continuous vesting account, which is determined\nby the '--delayed' flag. All vesting accounts created will have their start time\nset by the committed block's time. The end_time must be provided as a UNIX epoch\ntimestamp.\n\nUsage:\n  osmosisd tx vesting create-vesting-account [to_address] [amount] [end_time] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --delayed                  Create a delayed vesting account if true\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for create-vesting-account\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx wasm": "Wasm transaction subcommands\n\nUsage:\n  osmosisd tx wasm [flags]\n  osmosisd tx wasm [command]\n\nAvailable Commands:\n  clear-contract-admin      Clears admin for a contract to prevent further migrations\n  execute                   Execute a command on a wasm contract\n  grant                     Grant a authz permission\n  instantiate               Instantiate a wasm contract\n  instantiate2              Instantiate a wasm contract with predictable address\n  migrate                   Migrate a wasm contract to a new code version\n  set-contract-admin        Set new admin for a contract\n  set-contract-label        Set new label for a contract\n  store                     Upload a wasm binary\n  submit-proposal           Submit a wasm proposal.\n  update-instantiate-config Update instantiate config for a codeID\n\nFlags:\n  -h, --help   help for wasm\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd tx wasm [command] --help\" for more information about a command.",
  "osmosisd tx wasm clear-contract-admin": "Clears admin for a contract to prevent further migrations\n\nUsage:\n  osmosisd tx wasm clear-contract-admin [contract_addr_bech32] [flags]\n\nAliases:\n  clear-contract-admin, clear-admin, clr-adm\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for clear-contract-admin\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx wasm execute": "Execute a command on a wasm contract\n\nUsage:\n  osmosisd tx wasm execute [contract_addr_bech32] [json_encoded_send_args] --amount [coins,optional] [flags]\n\nAliases:\n  execute, run, call, exec, ex, e\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --amount string            Coins to send to the contract along with command\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for execute\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx wasm grant": "Grant a authz permission\n\nUsage:\n  osmosisd tx wasm grant [command]\n\nAvailable Commands:\n  contract    Grant authorization to interact with a contract on behalf of you\n  store-code  Grant authorization to upload contract code on behalf of you\n\nFlags:\n  -h, --help   help for grant\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd tx wasm grant [command] --help\" for more information about a command.",
  "osmosisd tx wasm grant contract": "Grant authorization to an address.\nExamples:\n$ osmosisd tx grant contract execution <grantee_addr> <contract_addr> --allow-all-messages --max-calls 1 --no-token-transfer --expiration 1667979596\n\n$ osmosisd tx grant contract execution <grantee_addr> <contract_addr> --allow-all-messages --max-funds 100000uwasm --expiration 1667979596\n\n$ osmosisd tx grant contract execution <grantee_addr> <contract_addr> --allow-all-messages --max-calls 5 --max-funds 100000uwasm --expiration 1667979596\n\nUsage:\n  osmosisd tx wasm grant contract [message_type=\"execution\"|\"migration\"] [grantee] [contract_addr_bech32] --allow-raw-msgs [msg1,msg2,...] --allow-msg-keys [key1,key2,...] --allow-all-messages [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --allow-all-messages       Allow all messages\n      --allow-msg-keys strings   Allowed msg keys\n      --allow-raw-msgs strings   Allowed raw msgs\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --expiration int           The Unix timestamp.\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for contract\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --max-calls uint           Maximal number of calls to the contract\n      --max-funds string         Maximal amount of tokens transferable to the contract.\n      --no-token-transfer        Don't allow token transfer\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx wasm grant store-code": "Grant authorization to an address.\nExamples:\n$ osmosisd tx grant store-code <grantee_addr> 13a1fc994cc6d1c81b746ee0c0ff6f90043875e0bf1d9be6b7d779fc978dc2a5:everybody  1wqrtry681b746ee0c0ff6f90043875e0bf1d9be6b7d779fc978dc2a5:nobody --expiration 1667979596\n\n$ osmosisd tx grant store-code <grantee_addr> *:osmosisd1l2rsakp388kuv9k8qzq6lrm9taddae7fpx59wm,osmosisd1vx8knpllrj7n963p9ttd80w47kpacrhuts497x\n\nUsage:\n  osmosisd tx wasm grant store-code [grantee] [code_hash:permission] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --expiration int           The Unix timestamp.\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for store-code\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx wasm instantiate": "Creates a new instance of an uploaded wasm code with the given 'constructor' message.\nEach contract instance has a unique address assigned.\nExample:\n$ osmosisd tx wasm instantiate 1 '{\"foo\":\"bar\"}' --admin=\"$(osmosisd keys show mykey -a)\" \\\n  --from mykey --amount=\"100ustake\" --label \"local0.1.0\"\n\nUsage:\n  osmosisd tx wasm instantiate [code_id_int64] [json_encoded_init_args] --label [text] --admin [address,optional] --amount [coins,optional]  [flags]\n\nAliases:\n  instantiate, start, init, inst, i\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --admin string             Address or key name of an admin\n      --amount string            Coins to send to the contract during instantiation\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for instantiate\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --label string             A human-readable name for this contract in lists\n      --ledger                   Use a connected Ledger device\n      --no-admin                 You must set this explicitly if you don't want an admin\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx wasm instantiate2": "Creates a new instance of an uploaded wasm code with the given 'constructor' message.\nEach contract instance has a unique address assigned. They are assigned automatically but in order to have predictable addresses \nfor special use cases, the given 'salt' argument and '--fix-msg' parameters can be used to generate a custom address.\n\nPredictable address example (also see 'osmosisd query wasm build-address -h'):\n$ osmosisd tx wasm instantiate2 1 '{\"foo\":\"bar\"}' $(echo -n \"testing\" | xxd -ps) --admin=\"$(osmosisd keys show mykey -a)\" \\\n  --from mykey --amount=\"100ustake\" --label \"local0.1.0\" \\\n   --fix-msg\n\nUsage:\n  osmosisd tx wasm instantiate2 [code_id_int64] [json_encoded_init_args] [salt] --label [text] --admin [address,optional] --amount [coins,optional] --fix-msg [bool,optional] [flags]\n\nAliases:\n  instantiate2, start, init, inst, i\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --admin string             Address or key name of an admin\n      --amount string            Coins to send to the contract during instantiation\n      --ascii                    ascii encoded salt\n      --aux                      Generate aux signer data instead of sending a tx\n      --b64                      base64 encoded salt\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --fix-msg                  An optional flag to include the json_encoded_init_args for the predictable address generation mode\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for instantiate2\n      --hex                      hex encoded salt\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --label string             A human-readable name for this contract in lists\n      --ledger                   Use a connected Ledger device\n      --no-admin                 You must set this explicitly if you don't want an admin\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx wasm migrate": "Migrate a wasm contract to a new code version\n\nUsage:\n  osmosisd tx wasm migrate [contract_addr_bech32] [new_code_id_int64] [json_encoded_migration_args] [flags]\n\nAliases:\n  migrate, update, mig, m\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for migrate\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx wasm set-contract-admin": "Set new admin for a contract\n\nUsage:\n  osmosisd tx wasm set-contract-admin [contract_addr_bech32] [new_admin_addr_bech32] [flags]\n\nAliases:\n  set-contract-admin, new-admin, admin, set-adm, sa\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for set-contract-admin\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx wasm set-contract-label": "Set new label for a contract\n\nUsage:\n  osmosisd tx wasm set-contract-label [contract_addr_bech32] [new_label] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for set-contract-label\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx wasm store": "Upload a wasm binary\n\nUsage:\n  osmosisd tx wasm store [wasm file] [flags]\n\nAliases:\n  store, upload, st, s\n\nFlags:\n  -a, --account-number uint                   The account number of the signing account (offline mode only)\n      --aux                                   Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string                 Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string                       The network chain ID\n      --dry-run                               ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string                    Fee granter grants fees for the transaction\n      --fee-payer string                      Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string                           Fees to pay along with transaction; eg: 10uatom\n      --from string                           Name or address of private key with which to sign\n      --gas string                            gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float                  adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string                     Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only                         Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                                  help for store\n      --instantiate-anyof-addresses strings   Any of the addresses can instantiate a contract from the code, optional\n      --instantiate-everybody string          Everybody can instantiate a contract from the code, optional\n      --instantiate-nobody string             Nobody except the governance process can instantiate a contract from the code, optional\n      --instantiate-only-address string       Removed: use instantiate-anyof-addresses instead\n      --keyring-backend string                Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string                    The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                                Use a connected Ledger device\n      --node string                           <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string                           Note to add a description to the transaction (previously --memo)\n      --offline                               Offline mode (does not allow any online functionality)\n  -o, --output string                         Output format (text|json) (default \"json\")\n  -s, --sequence uint                         The sequence number of the signing account (offline mode only)\n      --sign-mode string                      Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint                   Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string                            Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                                   Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx wasm submit-proposal": "Submit a wasm proposal.\n\nUsage:\n  osmosisd tx wasm submit-proposal [command]\n\nAvailable Commands:\n  add-code-upload-params-addresses    Submit an add code upload params addresses proposal to add addresses to code upload config params\n  clear-contract-admin                Submit a clear admin for a contract to prevent further migrations proposal\n  execute-contract                    Submit a execute wasm contract proposal (run by any address)\n  instantiate-contract                Submit an instantiate wasm contract proposal\n  instantiate-contract-2              Submit an instantiate wasm contract proposal with predictable address\n  migrate-contract                    Submit a migrate wasm contract to a new code version proposal\n  pin-codes                           Submit a pin code proposal for pinning a code to cache\n  remove-code-upload-params-addresses Submit a remove code upload params addresses proposal to remove addresses from code upload config params\n  set-contract-admin                  Submit a new admin for a contract proposal\n  store-instantiate                   Submit a store and instantiate wasm contract proposal\n  store-migrate                       Submit a store and migrate wasm contract proposal\n  sudo-contract                       Submit a sudo wasm contract proposal (to call privileged commands)\n  unpin-codes                         Submit a unpin code proposal for unpinning a code to cache\n  update-instantiate-config           Submit an update instantiate config proposal.\n  wasm-store                          Submit a wasm binary proposal\n\nFlags:\n  -h, --help   help for submit-proposal\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"osmosisd tx wasm submit-proposal [command] --help\" for more information about a command.",
  "osmosisd tx wasm submit-proposal add-code-upload-params-addresses": "Submit an add code upload params addresses proposal to add addresses to code upload config params\n\nUsage:\n  osmosisd tx wasm submit-proposal add-code-upload-params-addresses [addresses] --title [text] --summary [text] --authority [address] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --authority string         The address of the governance account. Default is the sdk gov module account (default \"osmo10d07y265gmmuvt4z0w9aw880jnsr700jjeq4qp\")\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --deposit string           Deposit of proposal\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --expedite                 Expedite proposals have shorter voting period but require higher voting threshold\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for add-code-upload-params-addresses\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --summary string           Summary of proposal\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --title string             Title of proposal\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx wasm submit-proposal clear-contract-admin": "Submit a clear admin for a contract to prevent further migrations proposal\n\nUsage:\n  osmosisd tx wasm submit-proposal clear-contract-admin [contract_addr_bech32] --title [text] --summary [text] --authority [address] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --authority string         The address of the governance account. Default is the sdk gov module account (default \"osmo10d07y265gmmuvt4z0w9aw880jnsr700jjeq4qp\")\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --deposit string           Deposit of proposal\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --expedite                 Expedite proposals have shorter voting period but require higher voting threshold\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for clear-contract-admin\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --summary string           Summary of proposal\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --title string             Title of proposal\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx wasm submit-proposal execute-contract": "Submit a execute wasm contract proposal (run by any address)\n\nUsage:\n  osmosisd tx wasm submit-proposal execute-contract [contract_addr_bech32] [json_encoded_execution_args] --title [text] --summary [text] --authority [address] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --amount string            Coins to send to the contract during instantiation\n      --authority string         The address of the governance account. Default is the sdk gov module account (default \"osmo10d07y265gmmuvt4z0w9aw880jnsr700jjeq4qp\")\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --deposit string           Deposit of proposal\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --expedite                 Expedite proposals have shorter voting period but require higher voting threshold\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for execute-contract\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --summary string           Summary of proposal\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --title string             Title of proposal\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx wasm submit-proposal instantiate-contract": "Submit an instantiate wasm contract proposal\n\nUsage:\n  osmosisd tx wasm submit-proposal instantiate-contract [code_id_int64] [json_encoded_init_args] --authority [address] --label [text] --title [text] --summary [text] --admin [address,optional] --amount [coins,optional] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --admin string             Address or key name of an admin\n      --amount string            Coins to send to the contract during instantiation\n      --authority string         The address of the governance account. Default is the sdk gov module account (default \"osmo10d07y265gmmuvt4z0w9aw880jnsr700jjeq4qp\")\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --deposit string           Deposit of proposal\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --expedite                 Expedite proposals have shorter voting period but require higher voting threshold\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for instantiate-contract\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --label string             A human-readable name for this contract in lists\n      --ledger                   Use a connected Ledger device\n      --no-admin                 You must set this explicitly if you don't want an admin\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --summary string           Summary of proposal\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --title string             Title of proposal\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx wasm submit-proposal instantiate-contract-2": "Submit an instantiate wasm contract proposal with predictable address\n\nUsage:\n  osmosisd tx wasm submit-proposal instantiate-contract-2 [code_id_int64] [json_encoded_init_args] --authority [address] --label [text] --title [text] --summary [text]  --admin [address,optional] --amount [coins,optional] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --admin string             Address of an admin\n      --amount string            Coins to send to the contract during instantiation\n      --authority string         The address of the governance account. Default is the sdk gov module account (default \"osmo10d07y265gmmuvt4z0w9aw880jnsr700jjeq4qp\")\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --deposit string           Deposit of proposal\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --expedite                 Expedite proposals have shorter voting period but require higher voting threshold\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for instantiate-contract-2\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --label string             A human-readable name for this contract in lists\n      --ledger                   Use a connected Ledger device\n      --no-admin                 You must set this explicitly if you don't want an admin\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --summary string           Summary of proposal\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --title string             Title of proposal\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx wasm submit-proposal migrate-contract": "Submit a migrate wasm contract to a new code version proposal\n\nUsage:\n  osmosisd tx wasm submit-proposal migrate-contract [contract_addr_bech32] [new_code_id_int64] [json_encoded_migration_args] --title [text] --summary [text] --authority [address] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --authority string         The address of the governance account. Default is the sdk gov module account (default \"osmo10d07y265gmmuvt4z0w9aw880jnsr700jjeq4qp\")\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --deposit string           Deposit of proposal\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --expedite                 Expedite proposals have shorter voting period but require higher voting threshold\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for migrate-contract\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --summary string           Summary of proposal\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --title string             Title of proposal\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx wasm submit-proposal pin-codes": "Submit a pin code proposal for pinning a code to cache\n\nUsage:\n  osmosisd tx wasm submit-proposal pin-codes [code-ids] --title [text] --summary [text] --authority [address] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --authority string         The address of the governance account. Default is the sdk gov module account (default \"osmo10d07y265gmmuvt4z0w9aw880jnsr700jjeq4qp\")\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --deposit string           Deposit of proposal\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --expedite                 Expedite proposals have shorter voting period but require higher voting threshold\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for pin-codes\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --summary string           Summary of proposal\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --title string             Title of proposal\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx wasm submit-proposal remove-code-upload-params-addresses": "Submit a remove code upload params addresses proposal to remove addresses from code upload config params\n\nUsage:\n  osmosisd tx wasm submit-proposal remove-code-upload-params-addresses [addresses] --title [text] --summary [text] --authority [address] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --authority string         The address of the governance account. Default is the sdk gov module account (default \"osmo10d07y265gmmuvt4z0w9aw880jnsr700jjeq4qp\")\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --deposit string           Deposit of proposal\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --expedite                 Expedite proposals have shorter voting period but require higher voting threshold\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for remove-code-upload-params-addresses\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --summary string           Summary of proposal\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --title string             Title of proposal\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx wasm submit-proposal set-contract-admin": "Submit a new admin for a contract proposal\n\nUsage:\n  osmosisd tx wasm submit-proposal set-contract-admin [contract_addr_bech32] [new_admin_addr_bech32] --title [text] --summary [text] --authority [address] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --authority string         The address of the governance account. Default is the sdk gov module account (default \"osmo10d07y265gmmuvt4z0w9aw880jnsr700jjeq4qp\")\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --deposit string           Deposit of proposal\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --expedite                 Expedite proposals have shorter voting period but require higher voting threshold\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for set-contract-admin\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --summary string           Summary of proposal\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --title string             Title of proposal\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx wasm submit-proposal store-instantiate": "Submit a store and instantiate wasm contract proposal\n\nUsage:\n  osmosisd tx wasm submit-proposal store-instantiate [wasm file] [json_encoded_init_args] --authority [address] --label [text] --title [text] --summary [text]--unpin-code [unpin_code,optional] --source [source,optional] --builder [builder,optional] --code-hash [code_hash,optional] --admin [address,optional] --amount [coins,optional] [flags]\n\nFlags:\n  -a, --account-number uint                   The account number of the signing account (offline mode only)\n      --admin string                          Address or key name of an admin\n      --amount string                         Coins to send to the contract during instantiation\n      --authority string                      The address of the governance account. Default is the sdk gov module account (default \"osmo10d07y265gmmuvt4z0w9aw880jnsr700jjeq4qp\")\n      --aux                                   Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string                 Transaction broadcasting mode (sync|async) (default \"sync\")\n      --builder string                        Builder is a valid docker image name with tag, such as \"cosmwasm/workspace-optimizer:0.12.9\"\n      --chain-id string                       The network chain ID\n      --code-hash bytesHex                    CodeHash is the sha256 hash of the wasm code\n      --code-source-url string                Code Source URL is a valid absolute HTTPS URI to the contract's source code,\n      --deposit string                        Deposit of proposal\n      --dry-run                               ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --expedite                              Expedite proposals have shorter voting period but require higher voting threshold\n      --fee-granter string                    Fee granter grants fees for the transaction\n      --fee-payer string                      Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string                           Fees to pay along with transaction; eg: 10uatom\n      --from string                           Name or address of private key with which to sign\n      --gas string                            gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float                  adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string                     Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only                         Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                                  help for store-instantiate\n      --instantiate-anyof-addresses strings   Any of the addresses can instantiate a contract from the code, optional\n      --instantiate-everybody string          Everybody can instantiate a contract from the code, optional\n      --instantiate-nobody string             Nobody except the governance process can instantiate a contract from the code, optional\n      --instantiate-only-address string       Removed: use instantiate-anyof-addresses instead\n      --keyring-backend string                Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string                    The client Keyring directory; if omitted, the default 'home' directory will be used\n      --label string                          A human-readable name for this contract in lists\n      --ledger                                Use a connected Ledger device\n      --no-admin                              You must set this explicitly if you don't want an admin\n      --node string                           <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string                           Note to add a description to the transaction (previously --memo)\n      --offline                               Offline mode (does not allow any online functionality)\n  -o, --output string                         Output format (text|json) (default \"json\")\n  -s, --sequence uint                         The sequence number of the signing account (offline mode only)\n      --sign-mode string                      Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --summary string                        Summary of proposal\n      --timeout-height uint                   Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string                            Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --title string                          Title of proposal\n      --unpin-code                            Unpin code on upload, optional\n  -y, --yes                                   Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx wasm submit-proposal store-migrate": "Submit a store and migrate wasm contract proposal\n\nUsage:\n  osmosisd tx wasm submit-proposal store-migrate [wasm file] [contract_addr_bech32] [json_encoded_migration_args] --title [text] --summary [text] --authority [address] [flags]\n\nFlags:\n  -a, --account-number uint                   The account number of the signing account (offline mode only)\n      --authority string                      The address of the governance account. Default is the sdk gov module account (default \"osmo10d07y265gmmuvt4z0w9aw880jnsr700jjeq4qp\")\n      --aux                                   Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string                 Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string                       The network chain ID\n      --deposit string                        Deposit of proposal\n      --dry-run                               ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --expedite                              Expedite proposals have shorter voting period but require higher voting threshold\n      --fee-granter string                    Fee granter grants fees for the transaction\n      --fee-payer string                      Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string                           Fees to pay along with transaction; eg: 10uatom\n      --from string                           Name or address of private key with which to sign\n      --gas string                            gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float                  adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string                     Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only                         Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                                  help for store-migrate\n      --instantiate-anyof-addresses strings   Any of the addresses can instantiate a contract from the code, optional\n      --instantiate-everybody string          Everybody can instantiate a contract from the code, optional\n      --instantiate-nobody string             Nobody except the governance process can instantiate a contract from the code, optional\n      --instantiate-only-address string       Removed: use instantiate-anyof-addresses instead\n      --keyring-backend string                Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string                    The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                                Use a connected Ledger device\n      --node string                           <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string                           Note to add a description to the transaction (previously --memo)\n      --offline                               Offline mode (does not allow any online functionality)\n  -o, --output string                         Output format (text|json) (default \"json\")\n  -s, --sequence uint                         The sequence number of the signing account (offline mode only)\n      --sign-mode string                      Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --summary string                        Summary of proposal\n      --timeout-height uint                   Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string                            Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --title string                          Title of proposal\n  -y, --yes                                   Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx wasm submit-proposal sudo-contract": "Submit a sudo wasm contract proposal (to call privileged commands)\n\nUsage:\n  osmosisd tx wasm submit-proposal sudo-contract [contract_addr_bech32] [json_encoded_migration_args] --title [text] --summary [text] --authority [address] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --authority string         The address of the governance account. Default is the sdk gov module account (default \"osmo10d07y265gmmuvt4z0w9aw880jnsr700jjeq4qp\")\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --deposit string           Deposit of proposal\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --expedite                 Expedite proposals have shorter voting period but require higher voting threshold\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for sudo-contract\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --summary string           Summary of proposal\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --title string             Title of proposal\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx wasm submit-proposal unpin-codes": "Submit a unpin code proposal for unpinning a code to cache\n\nUsage:\n  osmosisd tx wasm submit-proposal unpin-codes [code-ids] --title [text] --summary [text] --authority [address] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --authority string         The address of the governance account. Default is the sdk gov module account (default \"osmo10d07y265gmmuvt4z0w9aw880jnsr700jjeq4qp\")\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --deposit string           Deposit of proposal\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --expedite                 Expedite proposals have shorter voting period but require higher voting threshold\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for unpin-codes\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --summary string           Summary of proposal\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --title string             Title of proposal\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx wasm submit-proposal update-instantiate-config": "Submit an update instantiate config  proposal for multiple code ids.\n\nExample: \n$ osmosisd tx gov submit-proposal update-instantiate-config 1:nobody 2:everybody 3:osmo1l2rsakp388kuv9k8qzq6lrm9taddae7fpx59wm,osmo1vx8knpllrj7n963p9ttd80w47kpacrhuts497x\n\nUsage:\n  osmosisd tx wasm submit-proposal update-instantiate-config [code-id:permission] --title [text] --summary [text] --authority [address] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --authority string         The address of the governance account. Default is the sdk gov module account (default \"osmo10d07y265gmmuvt4z0w9aw880jnsr700jjeq4qp\")\n      --aux                      Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string          The network chain ID\n      --deposit string           Deposit of proposal\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --expedite                 Expedite proposals have shorter voting period but require higher voting threshold\n      --fee-granter string       Fee granter grants fees for the transaction\n      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                     help for update-instantiate-config\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality)\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --summary string           Summary of proposal\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --title string             Title of proposal\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx wasm submit-proposal wasm-store": "Submit a wasm binary proposal\n\nUsage:\n  osmosisd tx wasm submit-proposal wasm-store [wasm file] --title [text] --summary [text] --authority [address] [flags]\n\nFlags:\n  -a, --account-number uint                   The account number of the signing account (offline mode only)\n      --authority string                      The address of the governance account. Default is the sdk gov module account (default \"osmo10d07y265gmmuvt4z0w9aw880jnsr700jjeq4qp\")\n      --aux                                   Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string                 Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string                       The network chain ID\n      --deposit string                        Deposit of proposal\n      --dry-run                               ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --expedite                              Expedite proposals have shorter voting period but require higher voting threshold\n      --fee-granter string                    Fee granter grants fees for the transaction\n      --fee-payer string                      Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string                           Fees to pay along with transaction; eg: 10uatom\n      --from string                           Name or address of private key with which to sign\n      --gas string                            gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float                  adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string                     Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only                         Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                                  help for wasm-store\n      --instantiate-anyof-addresses strings   Any of the addresses can instantiate a contract from the code, optional\n      --instantiate-everybody string          Everybody can instantiate a contract from the code, optional\n      --instantiate-nobody string             Nobody except the governance process can instantiate a contract from the code, optional\n      --instantiate-only-address string       Removed: use instantiate-anyof-addresses instead\n      --keyring-backend string                Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string                    The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                                Use a connected Ledger device\n      --node string                           <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string                           Note to add a description to the transaction (previously --memo)\n      --offline                               Offline mode (does not allow any online functionality)\n  -o, --output string                         Output format (text|json) (default \"json\")\n  -s, --sequence uint                         The sequence number of the signing account (offline mode only)\n      --sign-mode string                      Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --summary string                        Summary of proposal\n      --timeout-height uint                   Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string                            Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --title string                          Title of proposal\n  -y, --yes                                   Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd tx wasm update-instantiate-config": "Update instantiate config for a codeID\n\nUsage:\n  osmosisd tx wasm update-instantiate-config [code_id_int64] [flags]\n\nAliases:\n  update-instantiate-config, update-instantiate-config\n\nFlags:\n  -a, --account-number uint                   The account number of the signing account (offline mode only)\n      --aux                                   Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string                 Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string                       The network chain ID\n      --dry-run                               ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string                    Fee granter grants fees for the transaction\n      --fee-payer string                      Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string                           Fees to pay along with transaction; eg: 10uatom\n      --from string                           Name or address of private key with which to sign\n      --gas string                            gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float                  adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string                     Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only                         Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                                  help for update-instantiate-config\n      --instantiate-anyof-addresses strings   Any of the addresses can instantiate a contract from the code, optional\n      --instantiate-everybody string          Everybody can instantiate a contract from the code, optional\n      --instantiate-nobody string             Nobody except the governance process can instantiate a contract from the code, optional\n      --instantiate-only-address string       Removed: use instantiate-anyof-addresses instead\n      --keyring-backend string                Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string                    The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                                Use a connected Ledger device\n      --node string                           <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string                           Note to add a description to the transaction (previously --memo)\n      --offline                               Offline mode (does not allow any online functionality)\n  -o, --output string                         Output format (text|json) (default \"json\")\n  -s, --sequence uint                         The sequence number of the signing account (offline mode only)\n      --sign-mode string                      Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --timeout-height uint                   Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string                            Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n  -y, --yes                                   Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd update-asset-list": "Updates asset list used by the CLI to replace ibc denoms with human readable names.\nOutputs:\n\t- cmd/osmosisd/cmd/osmosis-1-assetlist-manual.json for osmosis-1\n\t- cmd/osmosisd/cmd/osmo-test-5-assetlist-manual.json for osmo-test-5\n\nUsage:\n  osmosisd update-asset-list [chain-id] [flags]\n\nFlags:\n  -h, --help          help for update-asset-list\n      --home string   The application home directory (default \"/home/ubuntu/.osmosisd\")\n\nGlobal Flags:\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd validate-genesis": "validates the genesis file at the default location or at the location passed as an arg\n\nUsage:\n  osmosisd validate-genesis [file] [flags]\n\nFlags:\n  -h, --help   help for validate-genesis\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "osmosisd version": "Print the application binary version information\n\nUsage:\n  osmosisd version [flags]\n\nFlags:\n  -h, --help            help for version\n      --long            Print long version information\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.osmosisd\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad": "Stargate Cosmos Hub App\n\nUsage:\n  gaiad [command]\n\nAvailable Commands:\n  add-genesis-account Add a genesis account to genesis.json\n  collect-gentxs      Collect genesis txs and output a genesis.json file\n  config              Create or query an application CLI configuration file\n  debug               Tool for helping with debugging your application\n  export              Export state to JSON\n  gentx               Generate a genesis tx carrying a self delegation\n  help                Help about any command\n  init                Initialize private validator, p2p, genesis, and application configuration files\n  keys                Manage your application's keys\n  query               Querying subcommands\n  rollback            rollback cosmos-sdk and tendermint state by one height\n  rosetta             spin up a rosetta server\n  start               Run the full node\n  status              Query remote node for status\n  tendermint          Tendermint subcommands\n  testnet             Initialize files for a simapp testnet\n  tx                  Transactions subcommands\n  validate-genesis    validates the genesis file at the default location or at the location passed as an arg\n  version             Print the application binary version information\n\nFlags:\n  -h, --help                help for gaiad\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad [command] --help\" for more information about a command.",
  "gaiad add-genesis-account": "Add a genesis account to genesis.json. The provided account must specify\nthe account address or key name and a list of initial coins. If a key name is given,\nthe address will be looked up in the local Keybase. The list of initial tokens must\ncontain valid denominations. Accounts may optionally be supplied with vesting parameters.\n\nUsage:\n  gaiad add-genesis-account [address_or_key_name] [coin][,[coin]] [flags]\n\nFlags:\n      --height int               Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help                     help for add-genesis-account\n      --home string              The application home directory (default \"/home/ubuntu/.gaia\")\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test) (default \"os\")\n      --node string              <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string            Output format (text|json) (default \"text\")\n      --vesting-amount string    amount of coins for vesting accounts\n      --vesting-end-time int     schedule end time (unix epoch) for vesting accounts\n      --vesting-start-time int   schedule start time (unix epoch) for vesting accounts\n\nGlobal Flags:\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad collect-gentxs": "Collect genesis txs and output a genesis.json file\n\nUsage:\n  gaiad collect-gentxs [flags]\n\nFlags:\n      --gentx-dir string   override default \"gentx\" directory from which collect and execute genesis transactions; default [--home]/config/gentx/\n  -h, --help               help for collect-gentxs\n      --home string        The application home directory (default \"/home/ubuntu/.gaia\")\n\nGlobal Flags:\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad config": "Create or query an application CLI configuration file\n\nUsage:\n  gaiad config <key> [value] [flags]\n\nFlags:\n  -h, --help   help for config\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad debug": "Tool for helping with debugging your application\n\nUsage:\n  gaiad debug [flags]\n  gaiad debug [command]\n\nAvailable Commands:\n  addr           Convert an address between hex and bech32\n  bech32-convert Convert any bech32 string to the cosmos prefix\n  pubkey         Decode a pubkey from proto JSON\n  raw-bytes      Convert raw bytes output (eg. [10 21 13 255]) to hex\n\nFlags:\n  -h, --help   help for debug\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad debug [command] --help\" for more information about a command.",
  "gaiad debug addr": "Convert an address between hex encoding and bech32.\n\nExample:\n$ gaiad debug addr cosmos1e0jnq2sun3dzjh8p2xq95kk0expwmd7shwjpfg\n\nUsage:\n  gaiad debug addr [address] [flags]\n\nFlags:\n  -h, --help   help for addr\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad debug bech32-convert": "Convert any bech32 string to the cosmos prefix\n\nExample:\n\tgaiad debug bech32-convert akash1a6zlyvpnksx8wr6wz8wemur2xe8zyh0ytz6d88\n\n\tgaiad debug bech32-convert stride1673f0t8p893rqyqe420mgwwz92ac4qv6synvx2 --prefix osmo\n\nUsage:\n  gaiad debug bech32-convert [address] [flags]\n\nFlags:\n  -h, --help            help for bech32-convert\n  -p, --prefix string   Bech32 Prefix to encode to (default \"cosmos\")\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad debug pubkey": "Decode a pubkey from proto JSON and display it's address.\n\nExample:\n$ gaiad debug pubkey '{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AurroA7jvfPd1AadmmOvWM2rJSwipXfRf8yD6pLbA2DJ\"}'\n\nUsage:\n  gaiad debug pubkey [pubkey] [flags]\n\nFlags:\n  -h, --help   help for pubkey\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad debug raw-bytes": "Convert raw-bytes to hex.\n\nExample:\n$ gaiad debug raw-bytes [72 101 108 108 111 44 32 112 108 97 121 103 114 111 117 110 100]\n\nUsage:\n  gaiad debug raw-bytes [raw-bytes] [flags]\n\nFlags:\n  -h, --help   help for raw-bytes\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad export": "Export state to JSON\n\nUsage:\n  gaiad export [flags]\n\nFlags:\n      --for-zero-height              Export state to start at height zero (perform preproccessing)\n      --height int                   Export state from a particular height (-1 means latest height) (default -1)\n  -h, --help                         help for export\n      --home string                  The application home directory (default \"/home/ubuntu/.gaia\")\n      --jail-allowed-addrs strings   Comma-separated list of operator addresses of jailed validators to unjail\n\nGlobal Flags:\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad gentx": "Generate a genesis transaction that creates a validator with a self-delegation,\nthat is signed by the key in the Keyring referenced by a given name. A node ID and Bech32 consensus\npubkey may optionally be provided. If they are omitted, they will be retrieved from the priv_validator.json\nfile. The following default parameters are included:\n    \n\tdelegation amount:           100000000stake\n\tcommission rate:             0.1\n\tcommission max rate:         0.2\n\tcommission max change rate:  0.01\n\n\nExample:\n$ gaiad gentx my-key-name 1000000stake --home=/path/to/home/dir --keyring-backend=os --chain-id=test-chain-1 \\\n    --moniker=\"myvalidator\" \\\n    --commission-max-change-rate=0.01 \\\n    --commission-max-rate=1.0 \\\n    --commission-rate=0.07 \\\n    --details=\"...\" \\\n    --security-contact=\"...\" \\\n    --website=\"...\"\n\nUsage:\n  gaiad gentx [key_name] [amount] [flags]\n\nFlags:\n  -a, --account-number uint                 The account number of the signing account (offline mode only)\n      --amount string                       Amount of coins to bond\n  -b, --broadcast-mode string               Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --chain-id string                     The network chain ID\n      --commission-max-change-rate string   The maximum commission change rate percentage (per day)\n      --commission-max-rate string          The maximum commission rate percentage\n      --commission-rate string              The initial commission rate percentage\n      --details string                      The validator's (optional) details\n      --dry-run                             ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string                  Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string                         Fees to pay along with transaction; eg: 10uatom\n      --from string                         Name or address of private key with which to sign\n      --gas string                          gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float                adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string                   Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only                       Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                                help for gentx\n      --home string                         The application home directory (default \"/home/ubuntu/.gaia\")\n      --identity string                     The (optional) identity signature (ex. UPort or Keybase)\n      --ip string                           The node's public IP (default \"141.94.243.95\")\n      --keyring-backend string              Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string                  The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                              Use a connected Ledger device\n      --moniker string                      The validator's (optional) moniker\n      --node string                         <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --node-id string                      The node's NodeID\n      --note string                         Note to add a description to the transaction (previously --memo)\n      --offline                             Offline mode (does not allow any online functionality\n  -o, --output string                       Output format (text|json) (default \"json\")\n      --output-document string              Write the genesis transaction JSON document to the given file instead of the default location\n      --pubkey string                       The validator's Protobuf JSON encoded public key\n      --security-contact string             The validator's (optional) security contact email\n  -s, --sequence uint                       The sequence number of the signing account (offline mode only)\n      --sign-mode string                    Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint                 Set a block timeout height to prevent the tx from being committed past a certain height\n      --website string                      The validator's (optional) website\n  -y, --yes                                 Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad init": "Initialize validators's and node's configuration files.\n\nUsage:\n  gaiad init [moniker] [flags]\n\nFlags:\n      --chain-id string   genesis file chain-id, if left blank will be randomly created\n  -h, --help              help for init\n      --home string       node's home directory (default \"/home/ubuntu/.gaia\")\n  -o, --overwrite         overwrite the genesis.json file\n      --recover           provide seed phrase to recover existing key instead of creating\n\nGlobal Flags:\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad keys": "Keyring management commands. These keys may be in any format supported by the\nTendermint crypto library and can be used by light-clients, full nodes, or any other application\nthat needs to sign with a private key.\n\nThe keyring supports the following backends:\n\n    os          Uses the operating system's default credentials store.\n    file        Uses encrypted file-based keystore within the app's configuration directory.\n                This keyring will request a password each time it is accessed, which may occur\n                multiple times in a single command resulting in repeated password prompts.\n    kwallet     Uses KDE Wallet Manager as a credentials management application.\n    pass        Uses the pass command line utility to store and retrieve keys.\n    test        Stores keys insecurely to disk. It does not prompt for a password to be unlocked\n                and it should be use only for testing purposes.\n\nkwallet and pass backends depend on external tools. Refer to their respective documentation for more\ninformation:\n    KWallet     https://github.com/KDE/kwallet\n    pass        https://www.passwordstore.org/\n\nThe pass backend requires GnuPG: https://gnupg.org/\n\nUsage:\n  gaiad keys [command]\n\nAvailable Commands:\n  add         Add an encrypted private key (either newly generated or recovered), encrypt it, and save to <name> file\n  delete      Delete the given keys\n  export      Export private keys\n  import      Import private keys into the local keybase\n  list        List all keys\n  migrate     Migrate keys from the legacy (db-based) Keybase\n  mnemonic    Compute the bip39 mnemonic for some input entropy\n  parse       Parse address from hex to bech32 and vice versa\n  show        Retrieve key information by name or address\n\nFlags:\n  -h, --help                     help for keys\n      --home string              The application home directory (default \"/home/ubuntu/.gaia\")\n      --keyring-backend string   Select keyring's backend (os|file|test) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --output string            Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad keys [command] --help\" for more information about a command.",
  "gaiad keys add": "Derive a new private key and encrypt to disk.\nOptionally specify a BIP39 mnemonic, a BIP39 passphrase to further secure the mnemonic,\nand a bip32 HD path to derive a specific account. The key will be stored under the given name\nand encrypted with the given password. The only input that is required is the encryption password.\n\nIf run with -i, it will prompt the user for BIP44 path, BIP39 mnemonic, and passphrase.\nThe flag --recover allows one to recover a key from a seed passphrase.\nIf run with --dry-run, a key would be generated (or recovered) but not stored to the\nlocal keystore.\nUse the --pubkey flag to add arbitrary public keys to the keystore for constructing\nmultisig transactions.\n\nYou can create and store a multisig key by passing the list of key names stored in a keyring\nand the minimum number of signatures required through --multisig-threshold. The keys are\nsorted by address, unless the flag --nosort is set.\nExample:\n\n    keys add mymultisig --multisig \"keyname1,keyname2,keyname3\" --multisig-threshold 2\n\nUsage:\n  gaiad keys add <name> [flags]\n\nFlags:\n      --account uint32           Account number for HD derivation\n      --algo string              Key signing algorithm to generate keys for (default \"secp256k1\")\n      --coin-type uint32         coin type number for HD derivation (default 118)\n      --dry-run                  Perform action, but don't add key to local keystore\n      --hd-path string           Manual HD Path derivation (overrides BIP44 config)\n  -h, --help                     help for add\n      --index uint32             Address index number for HD derivation\n  -i, --interactive              Interactively prompt user for BIP39 passphrase and mnemonic\n      --ledger                   Store a local reference to a private key on a Ledger device\n      --multisig strings         List of key names stored in keyring to construct a public legacy multisig key\n      --multisig-threshold int   K out of N required signatures. For use in conjunction with --multisig (default 1)\n      --no-backup                Don't print out seed phrase (if others are watching the terminal)\n      --nosort                   Keys passed to --multisig are taken in the order they're supplied\n      --pubkey string            Parse a public key in JSON format and saves key info to <name> file.\n      --recover                  Provide seed phrase to recover existing key instead of creating\n\nGlobal Flags:\n      --home string              The application home directory (default \"/home/ubuntu/.gaia\")\n      --keyring-backend string   Select keyring's backend (os|file|test) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --log_format string        The logging format (json|plain) (default \"plain\")\n      --log_level string         The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --output string            Output format (text|json) (default \"text\")\n      --trace                    print out full stack trace on errors",
  "gaiad keys delete": "Delete keys from the Keybase backend.\n\nNote that removing offline or ledger keys will remove\nonly the public key references stored locally, i.e.\nprivate keys stored in a ledger device cannot be deleted with the CLI.\n\nUsage:\n  gaiad keys delete <name>... [flags]\n\nFlags:\n  -f, --force   Remove the key unconditionally without asking for the passphrase. Deprecated.\n  -h, --help    help for delete\n  -y, --yes     Skip confirmation prompt when deleting offline or ledger key references\n\nGlobal Flags:\n      --home string              The application home directory (default \"/home/ubuntu/.gaia\")\n      --keyring-backend string   Select keyring's backend (os|file|test) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --log_format string        The logging format (json|plain) (default \"plain\")\n      --log_level string         The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --output string            Output format (text|json) (default \"text\")\n      --trace                    print out full stack trace on errors",
  "gaiad keys export": "Export a private key from the local keyring in ASCII-armored encrypted format.\n\nWhen both the --unarmored-hex and --unsafe flags are selected, cryptographic\nprivate key material is exported in an INSECURE fashion that is designed to\nallow users to import their keys in hot wallets. This feature is for advanced\nusers only that are confident about how to handle private keys work and are\nFULLY AWARE OF THE RISKS. If you are unsure, you may want to do some research\nand export your keys in ASCII-armored encrypted format.\n\nUsage:\n  gaiad keys export <name> [flags]\n\nFlags:\n  -h, --help            help for export\n      --unarmored-hex   Export unarmored hex privkey. Requires --unsafe.\n      --unsafe          Enable unsafe operations. This flag must be switched on along with all unsafe operation-specific options.\n\nGlobal Flags:\n      --home string              The application home directory (default \"/home/ubuntu/.gaia\")\n      --keyring-backend string   Select keyring's backend (os|file|test) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --log_format string        The logging format (json|plain) (default \"plain\")\n      --log_level string         The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --output string            Output format (text|json) (default \"text\")\n      --trace                    print out full stack trace on errors",
  "gaiad keys import": "Import a ASCII armored private key into the local keybase.\n\nUsage:\n  gaiad keys import <name> <keyfile> [flags]\n\nFlags:\n  -h, --help   help for import\n\nGlobal Flags:\n      --home string              The application home directory (default \"/home/ubuntu/.gaia\")\n      --keyring-backend string   Select keyring's backend (os|file|test) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --log_format string        The logging format (json|plain) (default \"plain\")\n      --log_level string         The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --output string            Output format (text|json) (default \"text\")\n      --trace                    print out full stack trace on errors",
  "gaiad keys list": "Return a list of all public keys stored by this key manager\nalong with their associated name and address.\n\nUsage:\n  gaiad keys list [flags]\n\nFlags:\n  -h, --help         help for list\n  -n, --list-names   List names only\n\nGlobal Flags:\n      --home string              The application home directory (default \"/home/ubuntu/.gaia\")\n      --keyring-backend string   Select keyring's backend (os|file|test) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --log_format string        The logging format (json|plain) (default \"plain\")\n      --log_level string         The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --output string            Output format (text|json) (default \"text\")\n      --trace                    print out full stack trace on errors",
  "gaiad keys migrate": "Migrate key information from the legacy (db-based) Keybase to the new keyring-based Keyring.\nThe legacy Keybase used to persist keys in a LevelDB database stored in a 'keys' sub-directory of\nthe old client application's home directory, e.g. $HOME/.gaiacli/keys/.\nFor each key material entry, the command will prompt if the key should be skipped or not. If the key\nis not to be skipped, the passphrase must be entered. The key will only be migrated if the passphrase\nis correct. Otherwise, the command will exit and migration must be repeated.\n\nIt is recommended to run in 'dry-run' mode first to verify all key migration material.\n\nUsage:\n  gaiad keys migrate <old_home_dir> [flags]\n\nFlags:\n      --dry-run   Run migration without actually persisting any changes to the new Keybase\n  -h, --help      help for migrate\n\nGlobal Flags:\n      --home string              The application home directory (default \"/home/ubuntu/.gaia\")\n      --keyring-backend string   Select keyring's backend (os|file|test) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --log_format string        The logging format (json|plain) (default \"plain\")\n      --log_level string         The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --output string            Output format (text|json) (default \"text\")\n      --trace                    print out full stack trace on errors",
  "gaiad keys mnemonic": "Create a bip39 mnemonic, sometimes called a seed phrase, by reading from the system entropy. To pass your own entropy, use --unsafe-entropy\n\nUsage:\n  gaiad keys mnemonic [flags]\n\nFlags:\n  -h, --help             help for mnemonic\n      --unsafe-entropy   Prompt the user to supply their own entropy, instead of relying on the system\n\nGlobal Flags:\n      --home string              The application home directory (default \"/home/ubuntu/.gaia\")\n      --keyring-backend string   Select keyring's backend (os|file|test) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --log_format string        The logging format (json|plain) (default \"plain\")\n      --log_level string         The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --output string            Output format (text|json) (default \"text\")\n      --trace                    print out full stack trace on errors",
  "gaiad keys parse": "Convert and print to stdout key addresses and fingerprints from\nhexadecimal into bech32 cosmos prefixed format and vice versa.\n\nUsage:\n  gaiad keys parse <hex-or-bech32-address> [flags]\n\nFlags:\n  -h, --help   help for parse\n\nGlobal Flags:\n      --home string              The application home directory (default \"/home/ubuntu/.gaia\")\n      --keyring-backend string   Select keyring's backend (os|file|test) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --log_format string        The logging format (json|plain) (default \"plain\")\n      --log_level string         The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --output string            Output format (text|json) (default \"text\")\n      --trace                    print out full stack trace on errors",
  "gaiad keys show": "Display keys details. If multiple names or addresses are provided,\nthen an ephemeral multisig key will be created under the name \"multi\"\nconsisting of all the keys provided by name and multisig threshold.\n\nUsage:\n  gaiad keys show [name_or_address [name_or_address...]] [flags]\n\nFlags:\n  -a, --address                  Output the address only (overrides --output)\n      --bech string              The Bech32 prefix encoding for a key (acc|val|cons) (default \"acc\")\n  -d, --device                   Output the address in a ledger device\n  -h, --help                     help for show\n      --multisig-threshold int   K out of N required signatures (default 1)\n  -p, --pubkey                   Output the public key only (overrides --output)\n\nGlobal Flags:\n      --home string              The application home directory (default \"/home/ubuntu/.gaia\")\n      --keyring-backend string   Select keyring's backend (os|file|test) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --log_format string        The logging format (json|plain) (default \"plain\")\n      --log_level string         The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --output string            Output format (text|json) (default \"text\")\n      --trace                    print out full stack trace on errors",
  "gaiad query": "Querying subcommands\n\nUsage:\n  gaiad query [flags]\n  gaiad query [command]\n\nAliases:\n  query, q\n\nAvailable Commands:\n  account                  Query for account by address\n  auth                     Querying commands for the auth module\n  authz                    Querying commands for the authz module\n  bank                     Querying commands for the bank module\n  block                    Get verified data for a the block at given height\n  distribution             Querying commands for the distribution module\n  evidence                 Query for evidence by hash or for all (paginated) submitted evidence\n  feegrant                 Querying commands for the feegrant module\n  globalfee                Querying commands for the global fee module\n  gov                      Querying commands for the governance module\n  ibc                      Querying commands for the IBC module\n  ibc-router               \n  ibc-transfer             IBC fungible token transfer query subcommands\n  interchain-accounts      interchain-accounts subcommands\n  liquidity                Querying commands for the liquidity module\n  mint                     Querying commands for the minting module\n  params                   Querying commands for the params module\n  provider                 Querying commands for the ccv provider module\n  slashing                 Querying commands for the slashing module\n  staking                  Querying commands for the staking module\n  tendermint-validator-set Get the full tendermint validator set at given height\n  tx                       Query for a transaction by hash, \"<addr>/<seq>\" combination or comma-separated signatures in a committed block\n  txs                      Query for paginated transactions that match a set of events\n  upgrade                  Querying commands for the upgrade module\n\nFlags:\n      --chain-id string   The network chain ID\n  -h, --help              help for query\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad query [command] --help\" for more information about a command.",
  "gaiad query account": "Query for account by address\n\nUsage:\n  gaiad query account [address] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for account\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query auth": "Querying commands for the auth module\n\nUsage:\n  gaiad query auth [flags]\n  gaiad query auth [command]\n\nAvailable Commands:\n  account        Query for account by address\n  accounts       Query all the accounts\n  module-account Query module account info by module name\n  params         Query the current auth parameters\n\nFlags:\n  -h, --help   help for auth\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad query auth [command] --help\" for more information about a command.",
  "gaiad query auth account": "Query for account by address\n\nUsage:\n  gaiad query auth account [address] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for account\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query auth accounts": "Query all the accounts\n\nUsage:\n  gaiad query auth accounts [flags]\n\nFlags:\n      --count-total       count total number of records in all-accounts to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for accounts\n      --limit uint        pagination limit of all-accounts to query for (default 100)\n      --node string       <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint       pagination offset of all-accounts to query for\n  -o, --output string     Output format (text|json) (default \"text\")\n      --page uint         pagination page of all-accounts to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of all-accounts to query for\n      --reverse           results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query auth module-account": "Query module account info by module name\n\nUsage:\n  gaiad query auth module-account [module-name] [flags]\n\nExamples:\ngaiad q auth module-account auth\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for module-account\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query auth params": "Query the current auth parameters:\n\n$ <appd> query auth params\n\nUsage:\n  gaiad query auth params [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for params\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query authz": "Querying commands for the authz module\n\nUsage:\n  gaiad query authz [flags]\n  gaiad query authz [command]\n\nAvailable Commands:\n  grants            query grants for a granter-grantee pair and optionally a msg-type-url\n  grants-by-grantee query authorization grants granted to a grantee\n  grants-by-granter query authorization grants granted by granter\n\nFlags:\n  -h, --help   help for authz\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad query authz [command] --help\" for more information about a command.",
  "gaiad query authz grants": "Query authorization grants for a granter-grantee pair. If msg-type-url\nis set, it will select grants only for that msg type.\nExamples:\n$ gaiad query authz grants cosmos1skj.. cosmos1skjwj..\n$ gaiad query authz grants cosmos1skjw.. cosmos1skjwj.. /cosmos.bank.v1beta1.MsgSend\n\nUsage:\n  gaiad query authz grants [granter-addr] [grantee-addr] [msg-type-url]? [flags]\n\nFlags:\n      --count-total       count total number of records in grants to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for grants\n      --limit uint        pagination limit of grants to query for (default 100)\n      --node string       <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint       pagination offset of grants to query for\n  -o, --output string     Output format (text|json) (default \"text\")\n      --page uint         pagination page of grants to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of grants to query for\n      --reverse           results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query authz grants-by-grantee": "Query authorization grants granted to a grantee.\nExamples:\n$ gaiad q authz grants-by-grantee cosmos1skj..\n\nUsage:\n  gaiad query authz grants-by-grantee [grantee-addr] [flags]\n\nAliases:\n  grants-by-grantee, grantee-grants\n\nFlags:\n      --count-total       count total number of records in grantee-grants to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for grants-by-grantee\n      --limit uint        pagination limit of grantee-grants to query for (default 100)\n      --node string       <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint       pagination offset of grantee-grants to query for\n  -o, --output string     Output format (text|json) (default \"text\")\n      --page uint         pagination page of grantee-grants to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of grantee-grants to query for\n      --reverse           results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query authz grants-by-granter": "Query authorization grants granted by granter.\nExamples:\n$ gaiad q authz grants-by-granter cosmos1skj..\n\nUsage:\n  gaiad query authz grants-by-granter [granter-addr] [flags]\n\nAliases:\n  grants-by-granter, granter-grants\n\nFlags:\n      --count-total       count total number of records in granter-grants to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for grants-by-granter\n      --limit uint        pagination limit of granter-grants to query for (default 100)\n      --node string       <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint       pagination offset of granter-grants to query for\n  -o, --output string     Output format (text|json) (default \"text\")\n      --page uint         pagination page of granter-grants to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of granter-grants to query for\n      --reverse           results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query bank": "Querying commands for the bank module\n\nUsage:\n  gaiad query bank [flags]\n  gaiad query bank [command]\n\nAvailable Commands:\n  balances       Query for account balances by address\n  denom-metadata Query the client metadata for coin denominations\n  total          Query the total supply of coins of the chain\n\nFlags:\n  -h, --help   help for bank\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad query bank [command] --help\" for more information about a command.",
  "gaiad query bank balances": "Query the total balance of an account or of a specific denomination.\n\nExample:\n  $ gaiad query bank balances [address]\n  $ gaiad query bank balances [address] --denom=[denom]\n\nUsage:\n  gaiad query bank balances [address] [flags]\n\nFlags:\n      --count-total       count total number of records in all balances to query for\n      --denom string      The specific balance denomination to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for balances\n      --limit uint        pagination limit of all balances to query for (default 100)\n      --node string       <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint       pagination offset of all balances to query for\n  -o, --output string     Output format (text|json) (default \"text\")\n      --page uint         pagination page of all balances to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of all balances to query for\n      --reverse           results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query bank denom-metadata": "Query the client metadata for all the registered coin denominations\n\nExample:\n  To query for the client metadata of all coin denominations use:\n  $ gaiad query bank denom-metadata\n\nTo query for the client metadata of a specific coin denomination use:\n  $ gaiad query bank denom-metadata --denom=[denom]\n\nUsage:\n  gaiad query bank denom-metadata [flags]\n\nFlags:\n      --denom string    The specific denomination to query client metadata for\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for denom-metadata\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query bank total": "Query total supply of coins that are held by accounts in the chain.\n\nExample:\n  $ gaiad query bank total\n\nTo query for the total supply of a specific coin denomination use:\n  $ gaiad query bank total --denom=[denom]\n\nUsage:\n  gaiad query bank total [flags]\n\nFlags:\n      --count-total       count total number of records in all supply totals to query for\n      --denom string      The specific balance denomination to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for total\n      --limit uint        pagination limit of all supply totals to query for (default 100)\n      --node string       <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint       pagination offset of all supply totals to query for\n  -o, --output string     Output format (text|json) (default \"text\")\n      --page uint         pagination page of all supply totals to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of all supply totals to query for\n      --reverse           results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query block": "Get verified data for a the block at given height\n\nUsage:\n  gaiad query block [height] [flags]\n\nFlags:\n  -h, --help          help for block\n  -n, --node string   Node to connect to (default \"tcp://localhost:26657\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query distribution": "Querying commands for the distribution module\n\nUsage:\n  gaiad query distribution [flags]\n  gaiad query distribution [command]\n\nAvailable Commands:\n  commission                    Query distribution validator commission\n  community-pool                Query the amount of coins in the community pool\n  params                        Query distribution params\n  rewards                       Query all distribution delegator rewards or rewards from a particular validator\n  slashes                       Query distribution validator slashes\n  tokenize-share-record-rewards Query distribution tokenize share record rewards\n  validator-outstanding-rewards Query distribution outstanding (un-withdrawn) rewards for a validator and all their delegations\n\nFlags:\n  -h, --help   help for distribution\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad query distribution [command] --help\" for more information about a command.",
  "gaiad query distribution commission": "Query validator commission rewards from delegators to that validator.\n\nExample:\n$ gaiad query distribution commission cosmosvaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\n\nUsage:\n  gaiad query distribution commission [validator] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for commission\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query distribution community-pool": "Query all coins in the community pool which is under Governance control.\n\nExample:\n$ gaiad query distribution community-pool\n\nUsage:\n  gaiad query distribution community-pool [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for community-pool\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query distribution params": "Query distribution params\n\nUsage:\n  gaiad query distribution params [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for params\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query distribution rewards": "Query all rewards earned by a delegator, optionally restrict to rewards from a single validator.\n\nExample:\n$ gaiad query distribution rewards cosmos1gghjut3ccd8ay0zduzj64hwre2fxs9ld75ru9p\n$ gaiad query distribution rewards cosmos1gghjut3ccd8ay0zduzj64hwre2fxs9ld75ru9p cosmosvaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\n\nUsage:\n  gaiad query distribution rewards [delegator-addr] [validator-addr] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for rewards\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query distribution slashes": "Query all slashes of a validator for a given block range.\n\nExample:\n$ gaiad query distribution slashes cosmosvalopervaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj 0 100\n\nUsage:\n  gaiad query distribution slashes [validator] [start-height] [end-height] [flags]\n\nFlags:\n      --count-total       count total number of records in validator slashes to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for slashes\n      --limit uint        pagination limit of validator slashes to query for (default 100)\n      --node string       <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint       pagination offset of validator slashes to query for\n  -o, --output string     Output format (text|json) (default \"text\")\n      --page uint         pagination page of validator slashes to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of validator slashes to query for\n      --reverse           results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query distribution tokenize-share-record-rewards": "Query the query tokenize share record rewards.\n\nExample:\n$ gaiad query distribution tokenize-share-record-rewards cosmos1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\n\nUsage:\n  gaiad query distribution tokenize-share-record-rewards [owner] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for tokenize-share-record-rewards\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query distribution validator-outstanding-rewards": "Query distribution outstanding (un-withdrawn) rewards for a validator and all their delegations.\n\nExample:\n$ gaiad query distribution validator-outstanding-rewards cosmosvaloper1lwjmdnks33xwnmfayc64ycprww49n33mtm92ne\n\nUsage:\n  gaiad query distribution validator-outstanding-rewards [validator] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for validator-outstanding-rewards\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query feegrant": "Querying commands for the feegrant module\n\nUsage:\n  gaiad query feegrant [flags]\n  gaiad query feegrant [command]\n\nAvailable Commands:\n  grant             Query details of a single grant\n  grants-by-grantee Query all grants of a grantee\n  grants-by-granter Query all grants by a granter\n\nFlags:\n  -h, --help   help for feegrant\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad query feegrant [command] --help\" for more information about a command.",
  "gaiad query feegrant grant": "Query details for a grant. \nYou can find the fee-grant of a granter and grantee.\n\nExample:\n$ gaiad query feegrant grant [granter] [grantee]\n\nUsage:\n  gaiad query feegrant grant [granter] [grantee] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for grant\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query feegrant grants-by-grantee": "Queries all the grants for a grantee address.\n\nExample:\n$ gaiad query feegrant grants-by-grantee [grantee]\n\nUsage:\n  gaiad query feegrant grants-by-grantee [grantee] [flags]\n\nAliases:\n  grants-by-grantee, grants\n\nFlags:\n      --count-total       count total number of records in grants to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for grants-by-grantee\n      --limit uint        pagination limit of grants to query for (default 100)\n      --node string       <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint       pagination offset of grants to query for\n  -o, --output string     Output format (text|json) (default \"text\")\n      --page uint         pagination page of grants to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of grants to query for\n      --reverse           results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query feegrant grants-by-granter": "Queries all the grants issued for a granter address.\n\nExample:\n$ gaiad query feegrant grants-by-granter [granter]\n\nUsage:\n  gaiad query feegrant grants-by-granter [granter] [flags]\n\nFlags:\n      --count-total       count total number of records in grants to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for grants-by-granter\n      --limit uint        pagination limit of grants to query for (default 100)\n      --node string       <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint       pagination offset of grants to query for\n  -o, --output string     Output format (text|json) (default \"text\")\n      --page uint         pagination page of grants to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of grants to query for\n      --reverse           results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query globalfee": "Querying commands for the global fee module\n\nUsage:\n  gaiad query globalfee [flags]\n  gaiad query globalfee [command]\n\nAvailable Commands:\n  params      Show globalfee params\n\nFlags:\n  -h, --help   help for globalfee\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad query globalfee [command] --help\" for more information about a command.",
  "gaiad query globalfee params": "Show globalfee requirement: minimum_gas_prices, bypass_min_fee_msg_types, max_total_bypass_minFee_msg_gas_usage\n\nUsage:\n  gaiad query globalfee params [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for params\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query gov": "Querying commands for the governance module\n\nUsage:\n  gaiad query gov [flags]\n  gaiad query gov [command]\n\nAvailable Commands:\n  deposit     Query details of a deposit\n  deposits    Query deposits on a proposal\n  param       Query the parameters (voting|tallying|deposit) of the governance process\n  params      Query the parameters of the governance process\n  proposal    Query details of a single proposal\n  proposals   Query proposals with optional filters\n  proposer    Query the proposer of a governance proposal\n  tally       Get the tally of a proposal vote\n  vote        Query details of a single vote\n  votes       Query votes on a proposal\n\nFlags:\n  -h, --help   help for gov\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad query gov [command] --help\" for more information about a command.",
  "gaiad query gov deposit": "Query details for a single proposal deposit on a proposal by its identifier.\n\nExample:\n$ gaiad query gov deposit 1 cosmos1skjwj5whet0lpe65qaq4rpq03hjxlwd9nf39lk\n\nUsage:\n  gaiad query gov deposit [proposal-id] [depositer-addr] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for deposit\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query gov deposits": "Query details for all deposits on a proposal.\nYou can find the proposal-id by running \"gaiad query gov proposals\".\n\nExample:\n$ gaiad query gov deposits 1\n\nUsage:\n  gaiad query gov deposits [proposal-id] [flags]\n\nFlags:\n      --count-total       count total number of records in deposits to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for deposits\n      --limit uint        pagination limit of deposits to query for (default 100)\n      --node string       <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint       pagination offset of deposits to query for\n  -o, --output string     Output format (text|json) (default \"text\")\n      --page uint         pagination page of deposits to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of deposits to query for\n      --reverse           results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query gov param": "Query the all the parameters for the governance process.\n\nExample:\n$ gaiad query gov param voting\n$ gaiad query gov param tallying\n$ gaiad query gov param deposit\n\nUsage:\n  gaiad query gov param [param-type] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for param\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query gov params": "Query the all the parameters for the governance process.\n\nExample:\n$ gaiad query gov params\n\nUsage:\n  gaiad query gov params [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for params\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query gov proposal": "Query details for a proposal. You can find the\nproposal-id by running \"gaiad query gov proposals\".\n\nExample:\n$ gaiad query gov proposal 1\n\nUsage:\n  gaiad query gov proposal [proposal-id] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for proposal\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query gov proposals": "Query for a all paginated proposals that match optional filters:\n\nExample:\n$ gaiad query gov proposals --depositor cosmos1skjwj5whet0lpe65qaq4rpq03hjxlwd9nf39lk\n$ gaiad query gov proposals --voter cosmos1skjwj5whet0lpe65qaq4rpq03hjxlwd9nf39lk\n$ gaiad query gov proposals --status (DepositPeriod|VotingPeriod|Passed|Rejected)\n$ gaiad query gov proposals --page=2 --limit=100\n\nUsage:\n  gaiad query gov proposals [flags]\n\nFlags:\n      --count-total        count total number of records in proposals to query for\n      --depositor string   (optional) filter by proposals deposited on by depositor\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for proposals\n      --limit uint         pagination limit of proposals to query for (default 100)\n      --node string        <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint        pagination offset of proposals to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of proposals to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of proposals to query for\n      --reverse            results are sorted in descending order\n      --status string      (optional) filter proposals by proposal status, status: deposit_period/voting_period/passed/rejected\n      --voter string       (optional) filter by proposals voted on by voted\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query gov proposer": "Query which address proposed a proposal with a given ID.\n\nExample:\n$ gaiad query gov proposer 1\n\nUsage:\n  gaiad query gov proposer [proposal-id] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for proposer\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query gov tally": "Query tally of votes on a proposal. You can find\nthe proposal-id by running \"gaiad query gov proposals\".\n\nExample:\n$ gaiad query gov tally 1\n\nUsage:\n  gaiad query gov tally [proposal-id] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for tally\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query gov vote": "Query details for a single vote on a proposal given its identifier.\n\nExample:\n$ gaiad query gov vote 1 cosmos1skjwj5whet0lpe65qaq4rpq03hjxlwd9nf39lk\n\nUsage:\n  gaiad query gov vote [proposal-id] [voter-addr] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for vote\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query gov votes": "Query vote details for a single proposal by its identifier.\n\nExample:\n$ gaiad query gov votes 1\n$ gaiad query gov votes 1 --page=2 --limit=100\n\nUsage:\n  gaiad query gov votes [proposal-id] [flags]\n\nFlags:\n      --count-total       count total number of records in votes to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for votes\n      --limit uint        pagination limit of votes to query for (default 100)\n      --node string       <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint       pagination offset of votes to query for\n  -o, --output string     Output format (text|json) (default \"text\")\n      --page uint         pagination page of votes to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of votes to query for\n      --reverse           results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query ibc": "Querying commands for the IBC module\n\nUsage:\n  gaiad query ibc [flags]\n  gaiad query ibc [command]\n\nAvailable Commands:\n  channel     IBC channel query subcommands\n  client      IBC client query subcommands\n  connection  IBC connection query subcommands\n\nFlags:\n  -h, --help   help for ibc\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad query ibc [command] --help\" for more information about a command.",
  "gaiad query ibc channel": "IBC channel query subcommands\n\nUsage:\n  gaiad query ibc channel [flags]\n  gaiad query ibc channel [command]\n\nAvailable Commands:\n  channels              Query all channels\n  client-state          Query the client state associated with a channel\n  connections           Query all channels associated with a connection\n  end                   Query a channel end\n  next-sequence-receive Query a next receive sequence\n  packet-ack            Query a packet acknowledgement\n  packet-commitment     Query a packet commitment\n  packet-commitments    Query all packet commitments associated with a channel\n  packet-receipt        Query a packet receipt\n  unreceived-acks       Query all the unreceived acks associated with a channel\n  unreceived-packets    Query all the unreceived packets associated with a channel\n\nFlags:\n  -h, --help   help for channel\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad query ibc channel [command] --help\" for more information about a command.",
  "gaiad query ibc channel channels": "Query all channels from a chain\n\nUsage:\n  gaiad query ibc channel channels [flags]\n\nExamples:\ngaiad query ibc channel channels\n\nFlags:\n      --count-total       count total number of records in channels to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for channels\n      --limit uint        pagination limit of channels to query for (default 100)\n      --node string       <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint       pagination offset of channels to query for\n  -o, --output string     Output format (text|json) (default \"text\")\n      --page uint         pagination page of channels to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of channels to query for\n      --reverse           results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query ibc channel client-state": "Query the client state associated with a channel, by providing its port and channel identifiers.\n\nUsage:\n  gaiad query ibc channel client-state [port-id] [channel-id] [flags]\n\nExamples:\ngaiad query ibc channel client-state [port-id] [channel-id]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for client-state\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query ibc channel connections": "Query all channels associated with a connection\n\nUsage:\n  gaiad query ibc channel connections [connection-id] [flags]\n\nExamples:\ngaiad query ibc channel connections [connection-id]\n\nFlags:\n      --count-total       count total number of records in channels associated with a connection to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for connections\n      --limit uint        pagination limit of channels associated with a connection to query for (default 100)\n      --node string       <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint       pagination offset of channels associated with a connection to query for\n  -o, --output string     Output format (text|json) (default \"text\")\n      --page uint         pagination page of channels associated with a connection to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of channels associated with a connection to query for\n      --reverse           results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query ibc channel end": "Query an IBC channel end from a port and channel identifiers\n\nUsage:\n  gaiad query ibc channel end [port-id] [channel-id] [flags]\n\nExamples:\ngaiad query ibc channel end [port-id] [channel-id]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for end\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n      --prove           show proofs for the query results (default true)\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query ibc channel next-sequence-receive": "Query the next receive sequence for a given channel\n\nUsage:\n  gaiad query ibc channel next-sequence-receive [port-id] [channel-id] [flags]\n\nExamples:\ngaiad query ibc channel next-sequence-receive [port-id] [channel-id]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for next-sequence-receive\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n      --prove           show proofs for the query results (default true)\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query ibc channel packet-ack": "Query a packet acknowledgement\n\nUsage:\n  gaiad query ibc channel packet-ack [port-id] [channel-id] [sequence] [flags]\n\nExamples:\ngaiad query ibc channel packet-ack [port-id] [channel-id] [sequence]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for packet-ack\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n      --prove           show proofs for the query results (default true)\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query ibc channel packet-commitment": "Query a packet commitment\n\nUsage:\n  gaiad query ibc channel packet-commitment [port-id] [channel-id] [sequence] [flags]\n\nExamples:\ngaiad query ibc channel packet-commitment [port-id] [channel-id] [sequence]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for packet-commitment\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n      --prove           show proofs for the query results (default true)\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query ibc channel packet-commitments": "Query all packet commitments associated with a channel\n\nUsage:\n  gaiad query ibc channel packet-commitments [port-id] [channel-id] [flags]\n\nExamples:\ngaiad query ibc channel packet-commitments [port-id] [channel-id]\n\nFlags:\n      --count-total       count total number of records in packet commitments associated with a channel to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for packet-commitments\n      --limit uint        pagination limit of packet commitments associated with a channel to query for (default 100)\n      --node string       <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint       pagination offset of packet commitments associated with a channel to query for\n  -o, --output string     Output format (text|json) (default \"text\")\n      --page uint         pagination page of packet commitments associated with a channel to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of packet commitments associated with a channel to query for\n      --reverse           results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query ibc channel packet-receipt": "Query a packet receipt\n\nUsage:\n  gaiad query ibc channel packet-receipt [port-id] [channel-id] [sequence] [flags]\n\nExamples:\ngaiad query ibc channel packet-receipt [port-id] [channel-id] [sequence]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for packet-receipt\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n      --prove           show proofs for the query results (default true)\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query ibc channel unreceived-acks": "Given a list of acknowledgement sequences from counterparty, determine if an ack on the counterparty chain has been received on the executing chain.\n\nThe return value represents:\n- Unreceived packet acknowledgement: packet commitment exists on original sending (executing) chain and ack exists on receiving chain.\n\nUsage:\n  gaiad query ibc channel unreceived-acks [port-id] [channel-id] [flags]\n\nExamples:\ngaiad query ibc channel unreceived-acks [port-id] [channel-id] --sequences=1,2,3\n\nFlags:\n      --height int             Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help                   help for unreceived-acks\n      --node string            <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string          Output format (text|json) (default \"text\")\n      --sequences int64Slice   comma separated list of packet sequence numbers (default [])\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query ibc channel unreceived-packets": "Determine if a packet, given a list of packet commitment sequences, is unreceived.\n\nThe return value represents:\n- Unreceived packet commitments: no acknowledgement exists on receiving chain for the given packet commitment sequence on sending chain.\n\nUsage:\n  gaiad query ibc channel unreceived-packets [port-id] [channel-id] [flags]\n\nExamples:\ngaiad query ibc channel unreceived-packets [port-id] [channel-id] --sequences=1,2,3\n\nFlags:\n      --height int             Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help                   help for unreceived-packets\n      --node string            <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string          Output format (text|json) (default \"text\")\n      --sequences int64Slice   comma separated list of packet sequence numbers (default [])\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query ibc client": "IBC client query subcommands\n\nUsage:\n  gaiad query ibc client [flags]\n  gaiad query ibc client [command]\n\nAvailable Commands:\n  consensus-state         Query the consensus state of a client at a given height\n  consensus-state-heights Query the heights of all consensus states of a client.\n  consensus-states        Query all the consensus states of a client.\n  header                  Query the latest header of the running chain\n  params                  Query the current ibc client parameters\n  self-consensus-state    Query the self consensus state for this chain\n  state                   Query a client state\n  states                  Query all available light clients\n  status                  Query client status\n\nFlags:\n  -h, --help   help for client\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad query ibc client [command] --help\" for more information about a command.",
  "gaiad query ibc client consensus-state": "Query the consensus state for a particular light client at a given height.\nIf the '--latest' flag is included, the query returns the latest consensus state, overriding the height argument.\n\nUsage:\n  gaiad query ibc client consensus-state [client-id] [height] [flags]\n\nExamples:\ngaiad query ibc client  consensus-state [client-id] [height]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for consensus-state\n      --latest-height   return latest stored consensus state\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n      --prove           show proofs for the query results (default true)\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query ibc client consensus-state-heights": "Query the heights of all consensus states associated with the provided client ID.\n\nUsage:\n  gaiad query ibc client consensus-state-heights [client-id] [flags]\n\nExamples:\ngaiad query ibc client consensus-state-heights [client-id]\n\nFlags:\n      --count-total       count total number of records in consensus state heights to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for consensus-state-heights\n      --limit uint        pagination limit of consensus state heights to query for (default 100)\n      --node string       <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint       pagination offset of consensus state heights to query for\n  -o, --output string     Output format (text|json) (default \"text\")\n      --page uint         pagination page of consensus state heights to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of consensus state heights to query for\n      --reverse           results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query ibc client consensus-states": "Query all the consensus states from a given client state.\n\nUsage:\n  gaiad query ibc client consensus-states [client-id] [flags]\n\nExamples:\ngaiad query ibc client consensus-states [client-id]\n\nFlags:\n      --count-total       count total number of records in consensus states to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for consensus-states\n      --limit uint        pagination limit of consensus states to query for (default 100)\n      --node string       <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint       pagination offset of consensus states to query for\n  -o, --output string     Output format (text|json) (default \"text\")\n      --page uint         pagination page of consensus states to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of consensus states to query for\n      --reverse           results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query ibc client header": "Query the latest Tendermint header of the running chain\n\nUsage:\n  gaiad query ibc client header [flags]\n\nExamples:\ngaiad query ibc client  header\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for header\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query ibc client params": "Query the current ibc client parameters\n\nUsage:\n  gaiad query ibc client params [flags]\n\nExamples:\ngaiad query ibc client params\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for params\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query ibc client self-consensus-state": "Query the self consensus state for this chain. This result may be used for verifying IBC clients representing this chain which are hosted on counterparty chains.\n\nUsage:\n  gaiad query ibc client self-consensus-state [flags]\n\nExamples:\ngaiad query ibc client self-consensus-state\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for self-consensus-state\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query ibc client state": "Query stored client state\n\nUsage:\n  gaiad query ibc client state [client-id] [flags]\n\nExamples:\ngaiad query ibc client state [client-id]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for state\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n      --prove           show proofs for the query results (default true)\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query ibc client states": "Query all available light clients\n\nUsage:\n  gaiad query ibc client states [flags]\n\nExamples:\ngaiad query ibc client states\n\nFlags:\n      --count-total       count total number of records in client states to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for states\n      --limit uint        pagination limit of client states to query for (default 100)\n      --node string       <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint       pagination offset of client states to query for\n  -o, --output string     Output format (text|json) (default \"text\")\n      --page uint         pagination page of client states to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of client states to query for\n      --reverse           results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query ibc client status": "Query client activity status. Any client without an 'Active' status is considered inactive\n\nUsage:\n  gaiad query ibc client status [client-id] [flags]\n\nExamples:\ngaiad query ibc client status [client-id]\n\nFlags:\n  -h, --help   help for status\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query ibc connection": "IBC connection query subcommands\n\nUsage:\n  gaiad query ibc connection [command]\n\nAvailable Commands:\n  connections Query all connections\n  end         Query stored connection end\n  path        Query stored client connection paths\n\nFlags:\n  -h, --help   help for connection\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad query ibc connection [command] --help\" for more information about a command.",
  "gaiad query ibc connection connections": "Query all connections ends from a chain\n\nUsage:\n  gaiad query ibc connection connections [flags]\n\nExamples:\ngaiad query ibc connection connections\n\nFlags:\n      --count-total       count total number of records in connection ends to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for connections\n      --limit uint        pagination limit of connection ends to query for (default 100)\n      --node string       <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint       pagination offset of connection ends to query for\n  -o, --output string     Output format (text|json) (default \"text\")\n      --page uint         pagination page of connection ends to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of connection ends to query for\n      --reverse           results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query ibc connection end": "Query stored connection end\n\nUsage:\n  gaiad query ibc connection end [connection-id] [flags]\n\nExamples:\ngaiad query ibc connection end [connection-id]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for end\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n      --prove           show proofs for the query results (default true)\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query ibc connection path": "Query stored client connection paths\n\nUsage:\n  gaiad query ibc connection path [client-id] [flags]\n\nExamples:\ngaiad query  ibc connection path [client-id]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for path\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n      --prove           show proofs for the query results (default true)\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query ibc-router": "Usage:\n  gaiad query ibc-router [command]\n\nAvailable Commands:\n  params      Query the current ibc-router parameters\n\nFlags:\n  -h, --help   help for ibc-router\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad query ibc-router [command] --help\" for more information about a command.",
  "gaiad query ibc-router params": "Query the current ibc-router parameters\n\nUsage:\n  gaiad query ibc-router params [flags]\n\nExamples:\ngaiad query ibc-router params\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for params\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query ibc-transfer": "IBC fungible token transfer query subcommands\n\nUsage:\n  gaiad query ibc-transfer [command]\n\nAvailable Commands:\n  denom-hash     Query the denom hash info from a given denom trace\n  denom-trace    Query the denom trace info from a given trace hash or ibc denom\n  denom-traces   Query the trace info for all token denominations\n  escrow-address Get the escrow address for a channel\n  params         Query the current ibc-transfer parameters\n\nFlags:\n  -h, --help   help for ibc-transfer\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad query ibc-transfer [command] --help\" for more information about a command.",
  "gaiad query ibc-transfer denom-hash": "Query the denom hash info from a given denom trace\n\nUsage:\n  gaiad query ibc-transfer denom-hash [trace] [flags]\n\nExamples:\ngaiad query ibc-transfer denom-hash transfer/channel-0/uatom\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for denom-hash\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query ibc-transfer denom-trace": "Query the denom trace info from a given trace hash or ibc denom\n\nUsage:\n  gaiad query ibc-transfer denom-trace [hash/denom] [flags]\n\nExamples:\ngaiad query ibc-transfer denom-trace 27A6394C3F9FF9C9DCF5DFFADF9BB5FE9A37C7E92B006199894CF1824DF9AC7C\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for denom-trace\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query ibc-transfer denom-traces": "Query the trace info for all token denominations\n\nUsage:\n  gaiad query ibc-transfer denom-traces [flags]\n\nExamples:\ngaiad query ibc-transfer denom-traces\n\nFlags:\n      --count-total       count total number of records in denominations trace to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for denom-traces\n      --limit uint        pagination limit of denominations trace to query for (default 100)\n      --node string       <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint       pagination offset of denominations trace to query for\n  -o, --output string     Output format (text|json) (default \"text\")\n      --page uint         pagination page of denominations trace to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of denominations trace to query for\n      --reverse           results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query ibc-transfer escrow-address": "Get the escrow address for a channel\n\nUsage:\n  gaiad query ibc-transfer escrow-address [flags]\n\nExamples:\ngaiad query ibc-transfer escrow-address [port] [channel-id]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for escrow-address\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query ibc-transfer params": "Query the current ibc-transfer parameters\n\nUsage:\n  gaiad query ibc-transfer params [flags]\n\nExamples:\ngaiad query ibc-transfer params\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for params\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query interchain-accounts": "interchain-accounts subcommands\n\nUsage:\n  gaiad query interchain-accounts [command]\n\nAliases:\n  interchain-accounts, ica\n\nAvailable Commands:\n  controller  interchain-accounts controller subcommands\n  host        interchain-accounts host subcommands\n\nFlags:\n  -h, --help   help for interchain-accounts\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad query interchain-accounts [command] --help\" for more information about a command.",
  "gaiad query interchain-accounts controller": "interchain-accounts controller subcommands\n\nUsage:\n  gaiad query interchain-accounts controller [command]\n\nAvailable Commands:\n  interchain-account Query the interchain account address for a given owner on a particular connection\n  params             Query the current interchain-accounts controller submodule parameters\n\nFlags:\n  -h, --help   help for controller\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad query interchain-accounts controller [command] --help\" for more information about a command.",
  "gaiad query interchain-accounts controller interchain-account": "Query the controller submodule for the interchain account address for a given owner on a particular connection\n\nUsage:\n  gaiad query interchain-accounts controller interchain-account [owner] [connection-id] [flags]\n\nExamples:\ngaiad query interchain-accounts controller interchain-account cosmos1layxcsmyye0dc0har9sdfzwckaz8sjwlfsj8zs connection-0\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for interchain-account\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query interchain-accounts controller params": "Query the current interchain-accounts controller submodule parameters\n\nUsage:\n  gaiad query interchain-accounts controller params [flags]\n\nExamples:\ngaiad query interchain-accounts controller params\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for params\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query interchain-accounts host": "interchain-accounts host subcommands\n\nUsage:\n  gaiad query interchain-accounts host [command]\n\nAvailable Commands:\n  packet-events Query the interchain-accounts host submodule packet events\n  params        Query the current interchain-accounts host submodule parameters\n\nFlags:\n  -h, --help   help for host\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad query interchain-accounts host [command] --help\" for more information about a command.",
  "gaiad query interchain-accounts host packet-events": "Query the interchain-accounts host submodule packet events for a particular channel and sequence\n\nUsage:\n  gaiad query interchain-accounts host packet-events [channel-id] [sequence] [flags]\n\nExamples:\ngaiad query interchain-accounts host packet-events channel-0 100\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for packet-events\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query interchain-accounts host params": "Query the current interchain-accounts host submodule parameters\n\nUsage:\n  gaiad query interchain-accounts host params [flags]\n\nExamples:\ngaiad query interchain-accounts host params\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for params\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query liquidity": "Querying commands for the liquidity module\n\nUsage:\n  gaiad query liquidity [flags]\n  gaiad query liquidity [command]\n\nAvailable Commands:\n  batch       Query details of a liquidity pool batch\n  deposit     Query the deposit messages on the liquidity pool batch\n  deposits    Query all deposit messages of the liquidity pool batch\n  params      Query the values set as liquidity parameters\n  pool        Query details of a liquidity pool\n  pools       Query for all liquidity pools\n  swap        Query for the swap message on the batch of the liquidity pool specified pool-id and msg-index\n  swaps       Query all swap messages in the liquidity pool batch\n  withdraw    Query the withdraw messages in the liquidity pool batch\n  withdraws   Query for all withdraw messages on the liquidity pool batch\n\nFlags:\n  -h, --help   help for liquidity\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad query liquidity [command] --help\" for more information about a command.",
  "gaiad query liquidity batch": "Query details of a liquidity pool batch\nExample:\n$ gaiad query liquidity batch 1\n\nUsage:\n  gaiad query liquidity batch [pool-id] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for batch\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query liquidity deposit": "Query the deposit messages on the liquidity pool batch for the specified pool-id and msg-index\n\nIf batch messages are normally processed from the endblock,\nthe resulting state is applied and the messages are removed from the beginning of the next block.\nTo query for past blocks, query the block height using the REST/gRPC API of a node that is not pruned.\n\nExample:\n$ gaiad query liquidity deposit 1 20\n\nUsage:\n  gaiad query liquidity deposit [pool-id] [msg-index] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for deposit\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query liquidity deposits": "Query all deposit messages of the liquidity pool batch on the specified pool\n\nIf batch messages are normally processed from the endblock, the resulting state is applied and the messages are removed in the beginning of next block.\nTo query for past blocks, query the block height using the REST/gRPC API of a node that is not pruned.\n\nExample:\n$ gaiad query liquidity deposits 1\n\nUsage:\n  gaiad query liquidity deposits [pool-id] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for deposits\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query liquidity params": "Query values set as liquidity parameters.\n\nExample:\n$ gaiad query liquidity params\n\nUsage:\n  gaiad query liquidity params [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for params\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query liquidity pool": "Query details of a liquidity pool\nExample:\n$ gaiad query liquidity pool 1\n\nExample (with pool coin denom):\n$ gaiad query liquidity pool --pool-coin-denom=[denom]\n\nExample (with reserve acc):\n$ gaiad query liquidity pool --reserve-acc=[address]\n\nUsage:\n  gaiad query liquidity pool [pool-id] [flags]\n\nFlags:\n      --height int               Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help                     help for pool\n      --node string              <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string            Output format (text|json) (default \"text\")\n      --pool-coin-denom string   The denomination of the pool coin\n      --reserve-acc string       The Bech32 address of the reserve account\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query liquidity pools": "Query details about all liquidity pools on a network.\nExample:\n$ gaiad query liquidity pools\n\nUsage:\n  gaiad query liquidity pools [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for pools\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query liquidity swap": "Query for the swap message on the batch of the liquidity pool specified pool-id and msg-index\n\nIf the batch message are normally processed and from the endblock,\nthe resulting state is applied and the messages are removed in the beginning of next block.\nTo query for past blocks, query the block height using the REST/gRPC API of a node that is not pruned.\n\nExample:\n$ gaiad query liquidity swap 1 20\n\nUsage:\n  gaiad query liquidity swap [pool-id] [msg-index] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for swap\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query liquidity swaps": "Query all swap messages in the liquidity pool batch for the specified pool-id\n\nIf batch messages are normally processed from the endblock,\nthe resulting state is applied and the messages are removed in the beginning of next block.\nTo query for past blocks, query the block height using the REST/gRPC API of a node that is not pruned.\n\nExample:\n$ gaiad query liquidity swaps 1\n\nUsage:\n  gaiad query liquidity swaps [pool-id] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for swaps\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query liquidity withdraw": "Query the withdraw messages in the liquidity pool batch for the specified pool-id and msg-index\n\nif the batch message are normally processed from the endblock,\nthe resulting state is applied and the messages are removed in the beginning of next block.\nTo query for past blocks, query the block height using the REST/gRPC API of a node that is not pruned.\n\nExample:\n$ gaiad query liquidity withdraw 1 20\n\nUsage:\n  gaiad query liquidity withdraw [pool-id] [msg-index] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for withdraw\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query liquidity withdraws": "Query all withdraw messages on the liquidity pool batch for the specified pool-id\n\nIf batch messages are normally processed from the endblock,\nthe resulting state is applied and the messages are removed in the beginning of next block.\nTo query for past blocks, query the block height using the REST/gRPC API of a node that is not pruned.\n\nExample:\n$ gaiad query liquidity withdraws 1\n\nUsage:\n  gaiad query liquidity withdraws [pool-id] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for withdraws\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query mint": "Querying commands for the minting module\n\nUsage:\n  gaiad query mint [flags]\n  gaiad query mint [command]\n\nAvailable Commands:\n  annual-provisions Query the current minting annual provisions value\n  inflation         Query the current minting inflation value\n  params            Query the current minting parameters\n\nFlags:\n  -h, --help   help for mint\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad query mint [command] --help\" for more information about a command.",
  "gaiad query mint annual-provisions": "Query the current minting annual provisions value\n\nUsage:\n  gaiad query mint annual-provisions [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for annual-provisions\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query mint inflation": "Query the current minting inflation value\n\nUsage:\n  gaiad query mint inflation [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for inflation\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query mint params": "Query the current minting parameters\n\nUsage:\n  gaiad query mint params [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for params\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query params": "Querying commands for the params module\n\nUsage:\n  gaiad query params [flags]\n  gaiad query params [command]\n\nAvailable Commands:\n  subspace    Query for raw parameters by subspace and key\n\nFlags:\n  -h, --help   help for params\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad query params [command] --help\" for more information about a command.",
  "gaiad query params subspace": "Query for raw parameters by subspace and key\n\nUsage:\n  gaiad query params subspace [subspace] [key] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for subspace\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query provider": "Querying commands for the ccv provider module\n\nUsage:\n  gaiad query provider [flags]\n  gaiad query provider [command]\n\nAvailable Commands:\n  consumer-genesis                  Query for consumer chain genesis state by chain id\n  list-consumer-chains              Query active consumer chains for provider chain.\n  list-start-proposals              Query consumer chains start proposals on provider chain.\n  list-stop-proposals               Query consumer chains stop proposals on provider chain.\n  registered-consumer-reward-denoms Query registered consumer reward denoms\n  throttle-state                    Query on-chain state relevant to slash packet throttling\n  throttled-consumer-packet-data    Query pending VSCMatured and slash packet data for a consumer chainId\n  validator-consumer-key            Query assigned validator consensus public key for a consumer chain\n  validator-provider-key            Query validator consensus public key for the provider chain\n\nFlags:\n  -h, --help   help for provider\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad query provider [command] --help\" for more information about a command.",
  "gaiad query provider consumer-genesis": "Query for consumer chain genesis state by chain id\n\nUsage:\n  gaiad query provider consumer-genesis [chainid] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for consumer-genesis\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query provider list-consumer-chains": "Query active consumer chains for provider chain.\n\nUsage:\n  gaiad query provider list-consumer-chains [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for list-consumer-chains\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query provider list-start-proposals": "Query mature and pending consumer chains start proposals on provider chain.\n\t\tMatured proposals will be executed on the next block - their spawn_time has passed\n\t\tPending proposals are waiting for their spawn_time to pass.\n\nUsage:\n  gaiad query provider list-start-proposals [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for list-start-proposals\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query provider list-stop-proposals": "Query mature and pending consumer chains stop proposals on provider chain.\n\t\tMatured proposals will be executed on the next block - their stop_time has passed\n\t\tPending proposals are waiting for their stop_time to pass.\n\nUsage:\n  gaiad query provider list-stop-proposals [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for list-stop-proposals\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query provider registered-consumer-reward-denoms": "Returns the registered consumer reward denoms.\nExample:\n$ gaiad query provider registered-consumer-reward-denoms\n\nUsage:\n  gaiad query provider registered-consumer-reward-denoms [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for registered-consumer-reward-denoms\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query provider throttle-state": "Returns state relevant to throttled slash packet queue on the provider chain.\n\t\t\tQueue is ordered by time of arrival.\nExample:\n$ gaiad query provider throttle-state\n\nUsage:\n  gaiad query provider throttle-state [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for throttle-state\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query provider throttled-consumer-packet-data": "Returns the current pending VSCMatured and slash packet data instances for a consumer chainId.\n\t\t\tQueue is ordered by ibc sequence number. \nExample:\n$ gaiad query provider throttled-consumer-packet-data foochain\n\nUsage:\n  gaiad query provider throttled-consumer-packet-data [chainid] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for throttled-consumer-packet-data\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query provider validator-consumer-key": "Returns the currently assigned validator consensus public key for a\nconsumer chain, if one has been assigned.\nExample:\n$ gaiad query provider validator-consumer-key foochain cosmosvalcons1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\n\nUsage:\n  gaiad query provider validator-consumer-key [chainid] [provider-validator-address] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for validator-consumer-key\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query provider validator-provider-key": "Returns the currently assigned validator consensus public key for the provider chain.\nExample:\n$ gaiad query provider validator-provider-key foochain cosmosvalcons1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\n\nUsage:\n  gaiad query provider validator-provider-key [chainid] [consumer-validator-address] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for validator-provider-key\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query slashing": "Querying commands for the slashing module\n\nUsage:\n  gaiad query slashing [flags]\n  gaiad query slashing [command]\n\nAvailable Commands:\n  params        Query the current slashing parameters\n  signing-info  Query a validator's signing information\n  signing-infos Query signing information of all validators\n\nFlags:\n  -h, --help   help for slashing\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad query slashing [command] --help\" for more information about a command.",
  "gaiad query slashing params": "Query genesis parameters for the slashing module:\n\n$ <appd> query slashing params\n\nUsage:\n  gaiad query slashing params [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for params\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query slashing signing-info": "Use a validators' consensus public key to find the signing-info for that validator:\n\n$ <appd> query slashing signing-info '{\"@type\":\"/cosmos.crypto.ed25519.PubKey\",\"key\":\"OauFcTKbN5Lx3fJL689cikXBqe+hcp6Y+x0rYUdR9Jk=\"}'\n\nUsage:\n  gaiad query slashing signing-info [validator-conspub] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for signing-info\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query slashing signing-infos": "signing infos of validators:\n\n$ <appd> query slashing signing-infos\n\nUsage:\n  gaiad query slashing signing-infos [flags]\n\nFlags:\n      --count-total       count total number of records in signing infos to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for signing-infos\n      --limit uint        pagination limit of signing infos to query for (default 100)\n      --node string       <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint       pagination offset of signing infos to query for\n  -o, --output string     Output format (text|json) (default \"text\")\n      --page uint         pagination page of signing infos to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of signing infos to query for\n      --reverse           results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query staking": "Querying commands for the staking module\n\nUsage:\n  gaiad query staking [flags]\n  gaiad query staking [command]\n\nAvailable Commands:\n  all-tokenize-share-records     Query for all tokenize share records\n  delegation                     Query a delegation based on address and validator address\n  delegations                    Query all delegations made by one delegator\n  delegations-to                 Query all delegations made to one validator\n  historical-info                Query historical info at given height\n  last-tokenize-share-record-id  Query for last tokenize share record id\n  params                         Query the current staking parameters information\n  pool                           Query the current staking pool values\n  redelegation                   Query a redelegation record based on delegator and a source and destination validator address\n  redelegations                  Query all redelegations records for one delegator\n  redelegations-from             Query all outgoing redelegatations from a validator\n  tokenize-share-lock-info       Query tokenize share lock information\n  tokenize-share-record-by-denom Query individual tokenize share record information by share denom\n  tokenize-share-record-by-id    Query individual tokenize share record information by share by id\n  tokenize-share-records-owned   Query tokenize share records by address\n  total-liquid-staked            Query for total liquid staked tokens\n  total-tokenize-share-assets    Query for total tokenized staked assets\n  unbonding-delegation           Query an unbonding-delegation record based on delegator and validator address\n  unbonding-delegations          Query all unbonding-delegations records for one delegator\n  unbonding-delegations-from     Query all unbonding delegatations from a validator\n  validator                      Query a validator\n  validators                     Query for all validators\n\nFlags:\n  -h, --help   help for staking\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad query staking [command] --help\" for more information about a command.",
  "gaiad query staking all-tokenize-share-records": "Query for all tokenize share records.\n\nExample:\n$ gaiad query staking all-tokenize-share-records\n\nUsage:\n  gaiad query staking all-tokenize-share-records [flags]\n\nFlags:\n      --count-total       count total number of records in tokenize share records to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for all-tokenize-share-records\n      --limit uint        pagination limit of tokenize share records to query for (default 100)\n      --node string       <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint       pagination offset of tokenize share records to query for\n  -o, --output string     Output format (text|json) (default \"text\")\n      --page uint         pagination page of tokenize share records to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of tokenize share records to query for\n      --reverse           results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query staking delegation": "Query delegations for an individual delegator on an individual validator.\n\nExample:\n$ gaiad query staking delegation cosmos1gghjut3ccd8ay0zduzj64hwre2fxs9ld75ru9p cosmosvaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\n\nUsage:\n  gaiad query staking delegation [delegator-addr] [validator-addr] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for delegation\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query staking delegations": "Query delegations for an individual delegator on all validators.\n\nExample:\n$ gaiad query staking delegations cosmos1gghjut3ccd8ay0zduzj64hwre2fxs9ld75ru9p\n\nUsage:\n  gaiad query staking delegations [delegator-addr] [flags]\n\nFlags:\n      --count-total       count total number of records in delegations to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for delegations\n      --limit uint        pagination limit of delegations to query for (default 100)\n      --node string       <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint       pagination offset of delegations to query for\n  -o, --output string     Output format (text|json) (default \"text\")\n      --page uint         pagination page of delegations to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of delegations to query for\n      --reverse           results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query staking delegations-to": "Query delegations on an individual validator.\n\nExample:\n$ gaiad query staking delegations-to cosmosvaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\n\nUsage:\n  gaiad query staking delegations-to [validator-addr] [flags]\n\nFlags:\n      --count-total       count total number of records in validator delegations to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for delegations-to\n      --limit uint        pagination limit of validator delegations to query for (default 100)\n      --node string       <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint       pagination offset of validator delegations to query for\n  -o, --output string     Output format (text|json) (default \"text\")\n      --page uint         pagination page of validator delegations to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of validator delegations to query for\n      --reverse           results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query staking historical-info": "Query historical info at given height.\n\nExample:\n$ gaiad query staking historical-info 5\n\nUsage:\n  gaiad query staking historical-info [height] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for historical-info\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query staking last-tokenize-share-record-id": "Query for last tokenize share record id.\n\nExample:\n$ gaiad query staking last-tokenize-share-record-id\n\nUsage:\n  gaiad query staking last-tokenize-share-record-id [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for last-tokenize-share-record-id\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query staking params": "Query values set as staking parameters.\n\nExample:\n$ gaiad query staking params\n\nUsage:\n  gaiad query staking params [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for params\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query staking pool": "Query values for amounts stored in the staking pool.\n\nExample:\n$ gaiad query staking pool\n\nUsage:\n  gaiad query staking pool [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for pool\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query staking redelegation": "Query a redelegation record for an individual delegator between a source and destination validator.\n\nExample:\n$ gaiad query staking redelegation cosmos1gghjut3ccd8ay0zduzj64hwre2fxs9ld75ru9p cosmosvaloper1l2rsakp388kuv9k8qzq6lrm9taddae7fpx59wm cosmosvaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\n\nUsage:\n  gaiad query staking redelegation [delegator-addr] [src-validator-addr] [dst-validator-addr] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for redelegation\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query staking redelegations": "Query all redelegation records for an individual delegator.\n\nExample:\n$ gaiad query staking redelegation cosmos1gghjut3ccd8ay0zduzj64hwre2fxs9ld75ru9p\n\nUsage:\n  gaiad query staking redelegations [delegator-addr] [flags]\n\nFlags:\n      --count-total       count total number of records in delegator redelegations to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for redelegations\n      --limit uint        pagination limit of delegator redelegations to query for (default 100)\n      --node string       <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint       pagination offset of delegator redelegations to query for\n  -o, --output string     Output format (text|json) (default \"text\")\n      --page uint         pagination page of delegator redelegations to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of delegator redelegations to query for\n      --reverse           results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query staking redelegations-from": "Query delegations that are redelegating _from_ a validator.\n\nExample:\n$ gaiad query staking redelegations-from cosmosvaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\n\nUsage:\n  gaiad query staking redelegations-from [validator-addr] [flags]\n\nFlags:\n      --count-total       count total number of records in validator redelegations to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for redelegations-from\n      --limit uint        pagination limit of validator redelegations to query for (default 100)\n      --node string       <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint       pagination offset of validator redelegations to query for\n  -o, --output string     Output format (text|json) (default \"text\")\n      --page uint         pagination page of validator redelegations to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of validator redelegations to query for\n      --reverse           results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query staking tokenize-share-lock-info": "Query the status of a tokenize share lock for a given account\nExample:\n$ gaiad query staking tokenize-share-lock-info cosmos1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\n\nUsage:\n  gaiad query staking tokenize-share-lock-info [address] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for tokenize-share-lock-info\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query staking tokenize-share-record-by-denom": "Query individual tokenize share record information by share denom.\n\nExample:\n$ gaiad query staking tokenize-share-record-by-denom\n\nUsage:\n  gaiad query staking tokenize-share-record-by-denom [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for tokenize-share-record-by-denom\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query staking tokenize-share-record-by-id": "Query individual tokenize share record information by share by id.\n\nExample:\n$ gaiad query staking tokenize-share-record-by-id [id]\n\nUsage:\n  gaiad query staking tokenize-share-record-by-id [id] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for tokenize-share-record-by-id\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query staking tokenize-share-records-owned": "Query tokenize share records by address.\n\nExample:\n$ gaiad query staking tokenize-share-records-owned [owner]\n\nUsage:\n  gaiad query staking tokenize-share-records-owned [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for tokenize-share-records-owned\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query staking total-liquid-staked": "Query for total number of liquid staked tokens.\nLiquid staked tokens are identified as either a tokenized delegation, \nor tokens owned by an interchain account.\nExample:\n$ gaiad query staking total-liquid-staked\n\nUsage:\n  gaiad query staking total-liquid-staked [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for total-liquid-staked\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query staking total-tokenize-share-assets": "Query for total tokenized staked assets.\n\nExample:\n$ gaiad query staking total-tokenize-share-assets\n\nUsage:\n  gaiad query staking total-tokenize-share-assets [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for total-tokenize-share-assets\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query staking unbonding-delegation": "Query unbonding delegations for an individual delegator on an individual validator.\n\nExample:\n$ gaiad query staking unbonding-delegation cosmos1gghjut3ccd8ay0zduzj64hwre2fxs9ld75ru9p cosmosvaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\n\nUsage:\n  gaiad query staking unbonding-delegation [delegator-addr] [validator-addr] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for unbonding-delegation\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query staking unbonding-delegations": "Query unbonding delegations for an individual delegator.\n\nExample:\n$ gaiad query staking unbonding-delegations cosmos1gghjut3ccd8ay0zduzj64hwre2fxs9ld75ru9p\n\nUsage:\n  gaiad query staking unbonding-delegations [delegator-addr] [flags]\n\nFlags:\n      --count-total       count total number of records in unbonding delegations to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for unbonding-delegations\n      --limit uint        pagination limit of unbonding delegations to query for (default 100)\n      --node string       <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint       pagination offset of unbonding delegations to query for\n  -o, --output string     Output format (text|json) (default \"text\")\n      --page uint         pagination page of unbonding delegations to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of unbonding delegations to query for\n      --reverse           results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query staking unbonding-delegations-from": "Query delegations that are unbonding _from_ a validator.\n\nExample:\n$ gaiad query staking unbonding-delegations-from cosmosvaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\n\nUsage:\n  gaiad query staking unbonding-delegations-from [validator-addr] [flags]\n\nFlags:\n      --count-total       count total number of records in unbonding delegations to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for unbonding-delegations-from\n      --limit uint        pagination limit of unbonding delegations to query for (default 100)\n      --node string       <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint       pagination offset of unbonding delegations to query for\n  -o, --output string     Output format (text|json) (default \"text\")\n      --page uint         pagination page of unbonding delegations to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of unbonding delegations to query for\n      --reverse           results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query staking validator": "Query details about an individual validator.\n\nExample:\n$ gaiad query staking validator cosmosvaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\n\nUsage:\n  gaiad query staking validator [validator-addr] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for validator\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query staking validators": "Query details about all validators on a network.\n\nExample:\n$ gaiad query staking validators\n\nUsage:\n  gaiad query staking validators [flags]\n\nFlags:\n      --count-total       count total number of records in validators to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for validators\n      --limit uint        pagination limit of validators to query for (default 100)\n      --node string       <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n      --offset uint       pagination offset of validators to query for\n  -o, --output string     Output format (text|json) (default \"text\")\n      --page uint         pagination page of validators to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of validators to query for\n      --reverse           results are sorted in descending order\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query tendermint-validator-set": "Get the full tendermint validator set at given height\n\nUsage:\n  gaiad query tendermint-validator-set [height] [flags]\n\nFlags:\n  -h, --help                     help for tendermint-validator-set\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test) (default \"os\")\n      --limit int                Query number of results returned per page (default 100)\n  -n, --node string              Node to connect to (default \"tcp://localhost:26657\")\n      --page int                 Query a specific page of paginated results (default 1)\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query tx": "Example:\n$ gaiad query tx <hash>\n$ gaiad query tx --type=acc_seq <addr>/<sequence>\n$ gaiad query tx --type=signature <sig1_base64>,<sig2_base64...>\n\nUsage:\n  gaiad query tx --type=[hash|acc_seq|signature] [hash|acc_seq|signature] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for tx\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n      --type string     The type to be used when querying tx, can be one of \"hash\", \"acc_seq\", \"signature\" (default \"hash\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query txs": "Search for transactions that match the exact given events where results are paginated.\nEach event takes the form of '{eventType}.{eventAttribute}={value}'. Please refer\nto each module's documentation for the full set of events to query for. Each module\ndocuments its respective events under 'xx_events.md'.\n\nExample:\n$ gaiad query txs --events 'message.sender=cosmos1...&message.action=withdraw_delegator_reward' --page 1 --limit 30\n\nUsage:\n  gaiad query txs [flags]\n\nFlags:\n      --events string   list of transaction events in the form of {eventType}.{eventAttribute}={value}\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for txs\n      --limit int       Query number of transactions results per page returned (default 30)\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n      --page int        Query a specific page of paginated results (default 1)\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query upgrade": "Querying commands for the upgrade module\n\nUsage:\n  gaiad query upgrade [command]\n\nAvailable Commands:\n  applied         block header for height at which a completed upgrade was applied\n  module_versions get the list of module versions\n  plan            get upgrade plan (if one exists)\n\nFlags:\n  -h, --help   help for upgrade\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad query upgrade [command] --help\" for more information about a command.",
  "gaiad query upgrade applied": "If upgrade-name was previously executed on the chain, this returns the header for the block at which it was applied.\nThis helps a client determine which binary was valid over a given range of blocks, as well as more context to understand past migrations.\n\nUsage:\n  gaiad query upgrade applied [upgrade-name] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for applied\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query upgrade module_versions": "Gets a list of module names and their respective consensus versions.\nFollowing the command with a specific module name will return only\nthat module's information.\n\nUsage:\n  gaiad query upgrade module_versions [optional module_name] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for module_versions\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad query upgrade plan": "Gets the currently scheduled upgrade plan, if one exists\n\nUsage:\n  gaiad query upgrade plan [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for plan\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default \"tcp://localhost:26657\")\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad rollback": "A state rollback is performed to recover from an incorrect application state transition,\nwhen Tendermint has persisted an incorrect app hash and is thus unable to make\nprogress. Rollback overwrites a state at height n with the state at height n - 1.\nThe application also roll back to height n - 1. No blocks are removed, so upon\nrestarting Tendermint the transactions in block n will be re-executed against the\napplication.\n\nUsage:\n  gaiad rollback [flags]\n\nFlags:\n  -h, --help          help for rollback\n      --home string   The application home directory (default \"/home/ubuntu/.gaia\")\n\nGlobal Flags:\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad rosetta": "spin up a rosetta server\n\nUsage:\n  gaiad rosetta [flags]\n\nFlags:\n      --addr string         the address rosetta will bind to (default \":8080\")\n      --blockchain string   the blockchain type (default \"app\")\n      --grpc string         the app gRPC endpoint (default \"localhost:9090\")\n  -h, --help                help for rosetta\n      --network string      the network name (default \"network\")\n      --offline             run rosetta only with construction API\n      --retries int         the number of retries that will be done before quitting (default 5)\n      --tendermint string   the tendermint rpc endpoint, without tcp:// (default \"localhost:26657\")\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad start": "Run the full node application with Tendermint in or out of process. By\ndefault, the application will run with Tendermint in process.\n\nPruning options can be provided via the '--pruning' flag or alternatively with '--pruning-keep-recent',\n'pruning-keep-every', and 'pruning-interval' together.\n\nFor '--pruning' the options are as follows:\n\ndefault: the last 100 states are kept in addition to every 500th state; pruning at 10 block intervals\nnothing: all historic states will be saved, nothing will be deleted (i.e. archiving node)\neverything: all saved states will be deleted, storing only the current and previous state; pruning at 10 block intervals\ncustom: allow pruning options to be manually specified through 'pruning-keep-recent', 'pruning-keep-every', and 'pruning-interval'\n\nNode halting configurations exist in the form of two flags: '--halt-height' and '--halt-time'. During\nthe ABCI Commit phase, the node will check if the current block height is greater than or equal to\nthe halt-height or if the current block time is greater than or equal to the halt-time. If so, the\nnode will attempt to gracefully shutdown and the block will not be committed. In addition, the node\nwill not be able to commit subsequent blocks.\n\nFor profiling and benchmarking purposes, CPU profiling can be enabled via the '--cpu-profile' flag\nwhich accepts a path for the resulting pprof file.\n\nThe node may be started in a 'query only' mode where only the gRPC and JSON HTTP\nAPI services are enabled via the 'grpc-only' flag. In this mode, Tendermint is\nbypassed and can be used when legacy queries are needed after an on-chain upgrade\nis performed. Note, when enabled, gRPC will also be automatically enabled.\n\nUsage:\n  gaiad start [flags]\n\nFlags:\n      --abci string                                     specify abci transport (socket | grpc) (default \"socket\")\n      --address string                                  Listen address (default \"tcp://0.0.0.0:26658\")\n      --consensus.create_empty_blocks                   set this to false to only produce blocks when there are txs or when the AppHash changes (default true)\n      --consensus.create_empty_blocks_interval string   the possible interval between empty blocks (default \"0s\")\n      --consensus.double_sign_check_height int          how many blocks to look back to check existence of the node's consensus votes before joining consensus\n      --cpu-profile string                              Enable CPU profiling and write to the provided file\n      --db_backend string                               database backend: goleveldb | cleveldb | boltdb | rocksdb | badgerdb (default \"goleveldb\")\n      --db_dir string                                   database directory (default \"data\")\n      --fast_sync                                       fast blockchain syncing (default true)\n      --genesis_hash bytesHex                           optional SHA-256 hash of the genesis file\n      --grpc-only                                       Start the node in gRPC query only mode (no Tendermint process is started)\n      --grpc-web.address string                         The gRPC-Web server address to listen on (default \"0.0.0.0:9091\")\n      --grpc-web.enable                                 Define if the gRPC-Web server should be enabled. (Note: gRPC must also be enabled.) (default true)\n      --grpc.address string                             the gRPC server address to listen on (default \"0.0.0.0:9090\")\n      --grpc.enable                                     Define if the gRPC server should be enabled (default true)\n      --halt-height uint                                Block height at which to gracefully halt the chain and shutdown the node\n      --halt-time uint                                  Minimum block time (in Unix seconds) at which to gracefully halt the chain and shutdown the node\n  -h, --help                                            help for start\n      --home string                                     The application home directory (default \"/home/ubuntu/.gaia\")\n      --iavl-disable-fastnode                           Disable fast node for IAVL tree (default true)\n      --inter-block-cache                               Enable inter-block caching (default true)\n      --inv-check-period uint                           Assert registered invariants every N blocks\n      --min-retain-blocks uint                          Minimum block height offset during ABCI commit to prune Tendermint blocks\n      --minimum-gas-prices string                       Minimum gas prices to accept for transactions; Any fee in a tx must meet this minimum (e.g. 0.01photino;0.0001stake)\n      --moniker string                                  node name (default \"pistachio\")\n      --p2p.external-address string                     ip:port address to advertise to peers for them to dial\n      --p2p.laddr string                                node listen address. (0.0.0.0:0 means any interface, any port) (default \"tcp://0.0.0.0:26656\")\n      --p2p.persistent_peers string                     comma-delimited ID@host:port persistent peers\n      --p2p.pex                                         enable/disable Peer-Exchange (default true)\n      --p2p.private_peer_ids string                     comma-delimited private peer IDs\n      --p2p.seed_mode                                   enable/disable seed mode\n      --p2p.seeds string                                comma-delimited ID@host:port seed nodes\n      --p2p.unconditional_peer_ids string               comma-delimited IDs of unconditional peers\n      --p2p.upnp                                        enable/disable UPNP port forwarding\n      --priv_validator_laddr string                     socket address to listen on for connections from external priv_validator process\n      --proxy_app string                                proxy app address, or one of: 'kvstore', 'persistent_kvstore', 'counter', 'e2e' or 'noop' for local testing. (default \"tcp://127.0.0.1:26658\")\n      --pruning string                                  Pruning strategy (default|nothing|everything|custom) (default \"default\")\n      --pruning-interval uint                           Height interval at which pruned heights are removed from disk (ignored if pruning is not 'custom')\n      --pruning-keep-every uint                         Offset heights to keep on disk after 'keep-every' (ignored if pruning is not 'custom')\n      --pruning-keep-recent uint                        Number of recent heights to keep on disk (ignored if pruning is not 'custom')\n      --rpc.grpc_laddr string                           GRPC listen address (BroadcastTx only). Port required\n      --rpc.laddr string                                RPC listen address. Port required (default \"tcp://127.0.0.1:26657\")\n      --rpc.pprof_laddr string                          pprof listen address (https://golang.org/pkg/net/http/pprof)\n      --rpc.unsafe                                      enabled unsafe rpc methods\n      --state-sync.snapshot-interval uint               State sync snapshot interval\n      --state-sync.snapshot-keep-recent uint32          State sync snapshot to keep (default 2)\n      --trace                                           Provide full stack traces for errors in ABCI Log\n      --trace-store string                              Enable KVStore tracing to an output file\n      --transport string                                Transport protocol: socket, grpc (default \"socket\")\n      --unsafe-skip-upgrades ints                       Skip a set of upgrade heights to continue the old binary\n      --with-tendermint                                 Run abci app embedded in-process with tendermint (default true)\n      --x-crisis-skip-assert-invariants                 Skip x/crisis invariants check on startup\n\nGlobal Flags:\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")",
  "gaiad status": "Query remote node for status\n\nUsage:\n  gaiad status [flags]\n\nFlags:\n  -h, --help          help for status\n  -n, --node string   Node to connect to (default \"tcp://localhost:26657\")\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tendermint": "Tendermint subcommands\n\nUsage:\n  gaiad tendermint [command]\n\nAvailable Commands:\n  reset-state      Remove all the data and WAL\n  show-address     Shows this node's tendermint validator consensus address\n  show-node-id     Show this node's ID\n  show-validator   Show this node's tendermint validator info\n  unsafe-reset-all (unsafe) Remove all the data and WAL, reset this node's validator to genesis state\n  version          Print tendermint libraries' version\n\nFlags:\n  -h, --help   help for tendermint\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad tendermint [command] --help\" for more information about a command.",
  "gaiad tendermint reset-state": "Remove all the data and WAL\n\nUsage:\n  gaiad tendermint reset-state [flags]\n\nAliases:\n  reset-state, reset_state\n\nFlags:\n  -h, --help   help for reset-state\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tendermint show-address": "Shows this node's tendermint validator consensus address\n\nUsage:\n  gaiad tendermint show-address [flags]\n\nFlags:\n  -h, --help   help for show-address\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tendermint show-node-id": "Show this node's ID\n\nUsage:\n  gaiad tendermint show-node-id [flags]\n\nFlags:\n  -h, --help   help for show-node-id\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tendermint show-validator": "Show this node's tendermint validator info\n\nUsage:\n  gaiad tendermint show-validator [flags]\n\nFlags:\n  -h, --help   help for show-validator\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tendermint unsafe-reset-all": "(unsafe) Remove all the data and WAL, reset this node's validator to genesis state\n\nUsage:\n  gaiad tendermint unsafe-reset-all [flags]\n\nAliases:\n  unsafe-reset-all, unsafe_reset_all\n\nFlags:\n  -h, --help             help for unsafe-reset-all\n      --keep-addr-book   keep the address book intact\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tendermint version": "Print protocols' and libraries' version numbers\nagainst which this app has been compiled.\n\nUsage:\n  gaiad tendermint version [flags]\n\nFlags:\n  -h, --help   help for version\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad testnet": "testnet will create \"v\" number of directories and populate each with\nnecessary files (private validator, genesis, config, etc.).\n\nNote, strict routability for addresses is turned off in the config file.\n\nExample:\n\tgaiad testnet --v 4 --output-dir ./output --starting-ip-address 192.168.10.2\n\nUsage:\n  gaiad testnet [flags]\n\nFlags:\n      --algo string                  Key signing algorithm to generate keys for (default \"secp256k1\")\n      --chain-id string              genesis file chain-id, if left blank will be randomly created\n  -h, --help                         help for testnet\n      --keyring-backend string       Select keyring's backend (os|file|test) (default \"os\")\n      --minimum-gas-prices string    Minimum gas prices to accept for transactions; All fees in a tx must meet this minimum (e.g. 0.01photino,0.001stake) (default \"0.000006stake\")\n      --node-daemon-home string      Home directory of the node's daemon configuration (default \"gaiad\")\n      --node-dir-prefix string       Prefix the directory name for each node with (node results in node0, node1, ...) (default \"node\")\n  -o, --output-dir string            Directory to store initialization data for the testnet (default \"./mytestnet\")\n      --starting-ip-address string   Starting IP address (192.168.0.1 results in persistent peers list ID0@192.168.0.1:46656, ID1@192.168.0.2:46656, ...) (default \"192.168.0.1\")\n      --v int                        Number of validators to initialize the testnet with (default 4)\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx": "Transactions subcommands\n\nUsage:\n  gaiad tx [flags]\n  gaiad tx [command]\n\nAvailable Commands:\n                      \n  authz               Authorization transactions subcommands\n  bank                Bank transaction subcommands\n  broadcast           Broadcast transactions generated offline\n  crisis              Crisis transactions subcommands\n  decode              Decode a binary encoded transaction string\n  distribution        Distribution transactions subcommands\n  encode              Encode transactions generated offline\n  evidence            Evidence transaction subcommands\n  feegrant            Feegrant transactions subcommands\n  gov                 Governance transactions subcommands\n  ibc                 IBC transaction subcommands\n  ibc-transfer        IBC fungible token transfer transaction subcommands\n  liquidity           Liquidity transaction subcommands\n  multisign           Generate multisig signatures for transactions generated offline\n  multisign-batch     Assemble multisig transactions in batch from batch signatures\n  provider            provider transactions subcommands\n  sign                Sign a transaction generated offline\n  sign-batch          Sign transaction batch files\n  slashing            Slashing transaction subcommands\n  staking             Staking transaction subcommands\n  validate-signatures validate transactions signatures\n  vesting             Vesting transaction subcommands\n\nFlags:\n      --chain-id string   The network chain ID\n  -h, --help              help for tx\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nAdditional help topics:\n  gaiad tx upgrade       Upgrade transaction subcommands\n\nUse \"gaiad tx [command] --help\" for more information about a command.",
  "gaiad tx authz": "Authorize and revoke access to execute transactions on behalf of your address\n\nUsage:\n  gaiad tx authz [flags]\n  gaiad tx authz [command]\n\nAvailable Commands:\n  exec        execute tx on behalf of granter account\n  grant       Grant authorization to an address\n  revoke      revoke authorization\n\nFlags:\n  -h, --help   help for authz\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad tx authz [command] --help\" for more information about a command.",
  "gaiad tx authz exec": "execute tx on behalf of granter account:\nExample:\n $ gaiad tx authz exec tx.json --from grantee\n $ gaiad tx bank send <granter> <recipient> --from <granter> --chain-id <chain-id> --generate-only > tx.json && gaiad tx authz exec tx.json --from grantee\n\nUsage:\n  gaiad tx authz exec [msg_tx_json_file] --from [grantee] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for exec\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx authz grant": "grant authorization to an address to execute a transaction on your behalf:\n\nExamples:\n $ gaiad tx authz grant cosmos1skjw.. send /cosmos.bank.v1beta1.MsgSend --spend-limit=1000stake --from=cosmos1skl..\n $ gaiad tx authz grant cosmos1skjw.. generic --msg-type=/cosmos.gov.v1beta1.MsgVote --from=cosmos1sk..\n\nUsage:\n  gaiad tx authz grant <grantee> <authorization_type=\"send\"|\"generic\"|\"delegate\"|\"unbond\"|\"redelegate\"> --from <granter> [flags]\n\nFlags:\n  -a, --account-number uint          The account number of the signing account (offline mode only)\n      --allowed-validators strings   Allowed validators addresses separated by ,\n  -b, --broadcast-mode string        Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --deny-validators strings      Deny validators addresses separated by ,\n      --dry-run                      ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --expiration int               The Unix timestamp. Default is one year. (default 1742680263)\n      --fee-account string           Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string                  Fees to pay along with transaction; eg: 10uatom\n      --from string                  Name or address of private key with which to sign\n      --gas string                   gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float         adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string            Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only                Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                         help for grant\n      --keyring-backend string       Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string           The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                       Use a connected Ledger device\n      --msg-type string              The Msg method name for which we are creating a GenericAuthorization\n      --node string                  <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string                  Note to add a description to the transaction (previously --memo)\n      --offline                      Offline mode (does not allow any online functionality\n  -o, --output string                Output format (text|json) (default \"json\")\n  -s, --sequence uint                The sequence number of the signing account (offline mode only)\n      --sign-mode string             Choose sign mode (direct|amino-json), this is an advanced feature\n      --spend-limit string           SpendLimit for Send Authorization, an array of Coins allowed spend\n      --timeout-height uint          Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                          Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx authz revoke": "revoke authorization from a granter to a grantee:\nExample:\n $ gaiad tx authz revoke cosmos1skj.. /cosmos.bank.v1beta1.MsgSend --from=cosmos1skj..\n\nUsage:\n  gaiad tx authz revoke [grantee] [msg_type] --from=[granter] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for revoke\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx bank": "Bank transaction subcommands\n\nUsage:\n  gaiad tx bank [flags]\n  gaiad tx bank [command]\n\nAvailable Commands:\n  send        Send funds from one account to another. \n\t\tNote, the'--from' flag is ignored as it is implied from [from_key_or_address].\n\t\tWhen using '--dry-run' a key name cannot be used, only a bech32 address.\n\nFlags:\n  -h, --help   help for bank\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad tx bank [command] --help\" for more information about a command.",
  "gaiad tx bank send": "Send funds from one account to another. \n\t\tNote, the'--from' flag is ignored as it is implied from [from_key_or_address].\n\t\tWhen using '--dry-run' a key name cannot be used, only a bech32 address.\n\nUsage:\n  gaiad tx bank send [from_key_or_address] [to_address] [amount] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for send\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx broadcast": "Broadcast transactions created with the --generate-only\nflag and signed with the sign command. Read a transaction from [file_path] and\nbroadcast it to a node. If you supply a dash (-) argument in place of an input\nfilename, the command reads from standard input.\n\n$ <appd> tx broadcast ./mytxn.json\n\nUsage:\n  gaiad tx broadcast [file_path] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for broadcast\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx crisis": "Crisis transactions subcommands\n\nUsage:\n  gaiad tx crisis [flags]\n  gaiad tx crisis [command]\n\nAvailable Commands:\n  invariant-broken Submit proof that an invariant broken to halt the chain\n\nFlags:\n  -h, --help   help for crisis\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad tx crisis [command] --help\" for more information about a command.",
  "gaiad tx crisis invariant-broken": "Submit proof that an invariant broken to halt the chain\n\nUsage:\n  gaiad tx crisis invariant-broken [module-name] [invariant-route] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for invariant-broken\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx decode": "Decode a binary encoded transaction string\n\nUsage:\n  gaiad tx decode [amino-byte-string] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for decode\n  -x, --hex                      Treat input as hexadecimal instead of base64\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx distribution": "Distribution transactions subcommands\n\nUsage:\n  gaiad tx distribution [flags]\n  gaiad tx distribution [command]\n\nAvailable Commands:\n  fund-community-pool                 Funds the community pool with the specified amount\n  set-withdraw-addr                   change the default withdraw address for rewards associated with an address\n  withdraw-all-rewards                withdraw all delegations rewards for a delegator\n  withdraw-all-tokenize-share-rewards Withdraw reward for all owning TokenizeShareRecord\n  withdraw-rewards                    Withdraw rewards from a given delegation address, and optionally withdraw validator commission if the delegation address given is a validator operator\n  withdraw-tokenize-share-rewards     Withdraw reward for an owning TokenizeShareRecord\n\nFlags:\n  -h, --help   help for distribution\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad tx distribution [command] --help\" for more information about a command.",
  "gaiad tx distribution fund-community-pool": "Funds the community pool with the specified amount\n\nExample:\n$ gaiad tx distribution fund-community-pool 100uatom --from mykey\n\nUsage:\n  gaiad tx distribution fund-community-pool [amount] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for fund-community-pool\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx distribution set-withdraw-addr": "Set the withdraw address for rewards associated with a delegator address.\n\nExample:\n$ gaiad tx distribution set-withdraw-addr cosmos1gghjut3ccd8ay0zduzj64hwre2fxs9ld75ru9p --from mykey\n\nUsage:\n  gaiad tx distribution set-withdraw-addr [withdraw-addr] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for set-withdraw-addr\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx distribution withdraw-all-rewards": "Withdraw all rewards for a single delegator.\nNote that if you use this command with --broadcast-mode=sync or --broadcast-mode=async, the max-msgs flag will automatically be set to 0.\n\nExample:\n$ gaiad tx distribution withdraw-all-rewards --from mykey\n\nUsage:\n  gaiad tx distribution withdraw-all-rewards [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for withdraw-all-rewards\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --max-msgs int             Limit the number of messages per tx (0 for unlimited)\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx distribution withdraw-all-tokenize-share-rewards": "Withdraw reward for all owned TokenizeShareRecord\n\nExample:\n$ gaiad tx distribution withdraw-tokenize-share-rewards --from mykey\n\nUsage:\n  gaiad tx distribution withdraw-all-tokenize-share-rewards [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for withdraw-all-tokenize-share-rewards\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx distribution withdraw-rewards": "Withdraw rewards from a given delegation address,\nand optionally withdraw validator commission if the delegation address given is a validator operator.\n\nExample:\n$ gaiad tx distribution withdraw-rewards cosmosvaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj --from mykey\n$ gaiad tx distribution withdraw-rewards cosmosvaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj --from mykey --commission\n\nUsage:\n  gaiad tx distribution withdraw-rewards [validator-addr] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --commission               Withdraw the validator's commission in addition to the rewards\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for withdraw-rewards\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx distribution withdraw-tokenize-share-rewards": "Withdraw reward for an owned TokenizeShareRecord\n\nExample:\n$ gaiad tx distribution withdraw-tokenize-share-rewards 1 --from mykey\n\nUsage:\n  gaiad tx distribution withdraw-tokenize-share-rewards [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for withdraw-tokenize-share-rewards\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx encode": "Encode transactions created with the --generate-only flag and signed with the sign command.\nRead a transaction from <file>, serialize it to the Amino wire protocol, and output it as base64.\nIf you supply a dash (-) argument in place of an input filename, the command reads from standard input.\n\nUsage:\n  gaiad tx encode [file] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for encode\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx evidence": "Evidence transaction subcommands\n\nUsage:\n  gaiad tx evidence [flags]\n\nFlags:\n  -h, --help   help for evidence\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx feegrant": "Grant and revoke fee allowance for a grantee by a granter\n\nUsage:\n  gaiad tx feegrant [flags]\n  gaiad tx feegrant [command]\n\nAvailable Commands:\n  grant       Grant Fee allowance to an address\n  revoke      revoke fee-grant\n\nFlags:\n  -h, --help   help for feegrant\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad tx feegrant [command] --help\" for more information about a command.",
  "gaiad tx feegrant grant": "Grant authorization to pay fees from your address. Note, the'--from' flag is\n\t\t\t\tignored as it is implied from [granter].\n\nExamples:\ngaiad tx feegrant grant cosmos1skjw... cosmos1skjw... --spend-limit 100stake --expiration 2022-01-30T15:04:05Z or\ngaiad tx feegrant grant cosmos1skjw... cosmos1skjw... --spend-limit 100stake --period 3600 --period-limit 10stake --expiration 36000 or\ngaiad tx feegrant grant cosmos1skjw... cosmos1skjw... --spend-limit 100stake --expiration 2022-01-30T15:04:05Z \n\t--allowed-messages \"/cosmos.gov.v1beta1.MsgSubmitProposal,/cosmos.gov.v1beta1.MsgVote\"\n\nUsage:\n  gaiad tx feegrant grant [granter_key_or_address] [grantee] [flags]\n\nFlags:\n  -a, --account-number uint        The account number of the signing account (offline mode only)\n      --allowed-messages strings   Set of allowed messages for fee allowance\n  -b, --broadcast-mode string      Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                    ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --expiration string          The RFC 3339 timestamp after which the grant expires for the user\n      --fee-account string         Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string                Fees to pay along with transaction; eg: 10uatom\n      --from string                Name or address of private key with which to sign\n      --gas string                 gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float       adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string          Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only              Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                       help for grant\n      --keyring-backend string     Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string         The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                     Use a connected Ledger device\n      --node string                <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string                Note to add a description to the transaction (previously --memo)\n      --offline                    Offline mode (does not allow any online functionality\n  -o, --output string              Output format (text|json) (default \"json\")\n      --period int                 period specifies the time duration in which period_spend_limit coins can be spent before that allowance is reset\n      --period-limit string        period limit specifies the maximum number of coins that can be spent in the period\n  -s, --sequence uint              The sequence number of the signing account (offline mode only)\n      --sign-mode string           Choose sign mode (direct|amino-json), this is an advanced feature\n      --spend-limit string         Spend limit specifies the max limit can be used, if not mentioned there is no limit\n      --timeout-height uint        Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                        Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx feegrant revoke": "revoke fee grant from a granter to a grantee. Note, the'--from' flag is\n\t\t\tignored as it is implied from [granter].\n\nExample:\n $ gaiad tx feegrant revoke cosmos1skj.. cosmos1skj..\n\nUsage:\n  gaiad tx feegrant revoke [granter] [grantee] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for revoke\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx gov": "Governance transactions subcommands\n\nUsage:\n  gaiad tx gov [flags]\n  gaiad tx gov [command]\n\nAvailable Commands:\n  deposit         Deposit tokens for an active proposal\n  submit-proposal Submit a proposal along with an initial deposit\n  vote            Vote for an active proposal, options: yes/no/no_with_veto/abstain\n  weighted-vote   Vote for an active proposal, options: yes/no/no_with_veto/abstain\n\nFlags:\n  -h, --help   help for gov\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad tx gov [command] --help\" for more information about a command.",
  "gaiad tx gov deposit": "Submit a deposit for an active proposal. You can\nfind the proposal-id by running \"gaiad query gov proposals\".\n\nExample:\n$ gaiad tx gov deposit 1 10stake --from mykey\n\nUsage:\n  gaiad tx gov deposit [proposal-id] [deposit] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for deposit\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx gov submit-proposal": "Submit a proposal along with an initial deposit.\nProposal title, description, type and deposit can be given directly or through a proposal JSON file.\n\nExample:\n$ gaiad tx gov submit-proposal --proposal=\"path/to/proposal.json\" --from mykey\n\nWhere proposal.json contains:\n\n{\n  \"title\": \"Test Proposal\",\n  \"description\": \"My awesome proposal\",\n  \"type\": \"Text\",\n  \"deposit\": \"10test\"\n}\n\nWhich is equivalent to:\n\n$ gaiad tx gov submit-proposal --title=\"Test Proposal\" --description=\"My awesome proposal\" --type=\"Text\" --deposit=\"10test\" --from mykey\n\nUsage:\n  gaiad tx gov submit-proposal [flags]\n  gaiad tx gov submit-proposal [command]\n\nAvailable Commands:\n  cancel-software-upgrade Cancel the current software upgrade proposal\n  community-pool-spend    Submit a community pool spend proposal\n  consumer-addition       Submit a consumer addition proposal\n  consumer-removal        Submit a consumer chain removal proposal\n  equivocation            Submit an equivocation proposal\n  ibc-upgrade             Submit an IBC upgrade proposal\n  param-change            Submit a parameter change proposal\n  software-upgrade        Submit a software upgrade proposal\n  update-client           Submit an update IBC client proposal\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --deposit string           The proposal deposit\n      --description string       The proposal description\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for submit-proposal\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n      --proposal string          Proposal file path (if this path is given, other proposal flags are ignored)\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --title string             The proposal title\n      --type string              The proposal Type\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad tx gov submit-proposal [command] --help\" for more information about a command.",
  "gaiad tx gov submit-proposal cancel-software-upgrade": "Cancel a software upgrade along with an initial deposit.\n\nUsage:\n  gaiad tx gov submit-proposal cancel-software-upgrade [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --deposit string           deposit of proposal\n      --description string       description of proposal\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for cancel-software-upgrade\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --title string             title of proposal\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx gov submit-proposal community-pool-spend": "Submit a community pool spend proposal along with an initial deposit.\nThe proposal details must be supplied via a JSON file.\n\nExample:\n$ gaiad tx gov submit-proposal community-pool-spend <path/to/proposal.json> --from=<key_or_address>\n\nWhere proposal.json contains:\n\n{\n  \"title\": \"Community Pool Spend\",\n  \"description\": \"Pay me some Atoms!\",\n  \"recipient\": \"cosmos1s5afhd6gxevu37mkqcvvsj8qeylhn0rz46zdlq\",\n  \"amount\": \"1000stake\",\n  \"deposit\": \"1000stake\"\n}\n\nUsage:\n  gaiad tx gov submit-proposal community-pool-spend [proposal-file] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for community-pool-spend\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx gov submit-proposal consumer-addition": "Submit a consumer addition proposal along with an initial deposit.\nThe proposal details must be supplied via a JSON file.\nUnbonding period, transfer timeout period and ccv timeout period should be provided as nanosecond time periods.\n\nExample:\n$ <appd> tx gov submit-proposal consumer-addition <path/to/proposal.json> --from=<key_or_address>\n\nWhere proposal.json contains:\n\n{\n    \"title\": \"Create the FooChain\",\n    \"description\": \"Gonna be a great chain\",\n    \"chain_id\": \"foochain\",\n    \"initial_height\": {\n        \"revision_number\": 2,\n        \"revision_height\": 3\n    },\n    \"genesis_hash\": \"Z2VuZXNpcyBoYXNo\",\n    \"binary_hash\": \"YmluYXJ5IGhhc2g=\",\n    \"spawn_time\": \"2022-01-27T15:59:50.121607-08:00\",\n    \"blocks_per_distribution_transmission\": 1000,\n    \"consumer_redistribution_fraction\": \"0.75\",\n\t\"distribution_transmission_channel\": \"\",\n    \"historical_entries\": 10000,\n    \"transfer_timeout_period\": 3600000000000,\n    \"ccv_timeout_period\": 2419200000000000,\n    \"unbonding_period\": 1728000000000000,\n    \"deposit\": \"10000stake\"\n}\n\nUsage:\n  gaiad tx gov submit-proposal consumer-addition [proposal-file] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for consumer-addition\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx gov submit-proposal consumer-removal": "Submit a consumer chain removal proposal along with an initial deposit.\nThe proposal details must be supplied via a JSON file.\n\nExample:\n$ <appd> tx gov submit-proposal consumer-removal <path/to/proposal.json> --from=<key_or_address>\n\nWhere proposal.json contains:\n{\n\t \"title\": \"Stop the FooChain\",\n\t \"description\": \"It was a great chain\",\n\t \"chain_id\": \"foochain\",\n\t \"stop_time\": \"2022-01-27T15:59:50.121607-08:00\",\n\t \"deposit\": \"10000stake\"\n}\n\nUsage:\n  gaiad tx gov submit-proposal consumer-removal [proposal-file] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for consumer-removal\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx gov submit-proposal equivocation": "Submit an equivocation proposal along with an initial deposit.\nThe proposal details must be supplied via a JSON file.\n\nExample:\n$ <appd> tx gov submit-proposal equivocation <path/to/proposal.json> --from=<key_or_address>\n\nWhere proposal.json contains:\n{\n\t \"title\": \"Equivoque Foo validator\",\n\t \"description\": \"He double-signs on the Foobar consumer chain\",\n\t \"equivocations\": [\n\t\t{\n\t\t\t\"height\": 10420042,\n\t\t\t\"time\": \"2023-01-27T15:59:50.121607-08:00\",\n\t\t\t\"power\": 10,\n\t\t\t\"consensus_address\": \"cosmosvalcons1s5afhd6gxevu37mkqcvvsj8qeylhn0rz46zdlq\"\n\t\t}\n\t ],\n\t \"deposit\": \"10000stake\"\n}\n\nUsage:\n  gaiad tx gov submit-proposal equivocation [proposal-file] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for equivocation\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx gov submit-proposal ibc-upgrade": "Submit an IBC client breaking upgrade proposal along with an initial deposit.\nThe client state specified is the upgraded client state representing the upgraded chain\nExample Upgraded Client State JSON: \n{\n\t\"@type\":\"/ibc.lightclients.tendermint.v1.ClientState\",\n \t\"chain_id\":\"testchain1\",\n\t\"unbonding_period\":\"1814400s\",\n\t\"latest_height\":{\"revision_number\":\"0\",\"revision_height\":\"2\"},\n\t\"proof_specs\":[{\"leaf_spec\":{\"hash\":\"SHA256\",\"prehash_key\":\"NO_HASH\",\"prehash_value\":\"SHA256\",\"length\":\"VAR_PROTO\",\"prefix\":\"AA==\"},\"inner_spec\":{\"child_order\":[0,1],\"child_size\":33,\"min_prefix_length\":4,\"max_prefix_length\":12,\"empty_child\":null,\"hash\":\"SHA256\"},\"max_depth\":0,\"min_depth\":0},{\"leaf_spec\":{\"hash\":\"SHA256\",\"prehash_key\":\"NO_HASH\",\"prehash_value\":\"SHA256\",\"length\":\"VAR_PROTO\",\"prefix\":\"AA==\"},\"inner_spec\":{\"child_order\":[0,1],\"child_size\":32,\"min_prefix_length\":1,\"max_prefix_length\":1,\"empty_child\":null,\"hash\":\"SHA256\"},\"max_depth\":0,\"min_depth\":0}],\n\t\"upgrade_path\":[\"upgrade\",\"upgradedIBCState\"],\n}\n\nUsage:\n  gaiad tx gov submit-proposal ibc-upgrade [name] [height] [path/to/upgraded_client_state.json] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --deposit string           deposit of proposal\n      --description string       description of proposal\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for ibc-upgrade\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --title string             title of proposal\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx gov submit-proposal param-change": "Submit a parameter proposal along with an initial deposit.\nThe proposal details must be supplied via a JSON file. For values that contains\nobjects, only non-empty fields will be updated.\n\nIMPORTANT: Currently parameter changes are evaluated but not validated, so it is\nvery important that any \"value\" change is valid (ie. correct type and within bounds)\nfor its respective parameter, eg. \"MaxValidators\" should be an integer and not a decimal.\n\nProper vetting of a parameter change proposal should prevent this from happening\n(no deposits should occur during the governance process), but it should be noted\nregardless.\n\nExample:\n$ gaiad tx gov submit-proposal param-change <path/to/proposal.json> --from=<key_or_address>\n\nWhere proposal.json contains:\n\n{\n  \"title\": \"Staking Param Change\",\n  \"description\": \"Update max validators\",\n  \"changes\": [\n    {\n      \"subspace\": \"staking\",\n      \"key\": \"MaxValidators\",\n      \"value\": 105\n    }\n  ],\n  \"deposit\": \"1000stake\"\n}\n\nUsage:\n  gaiad tx gov submit-proposal param-change [proposal-file] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for param-change\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx gov submit-proposal software-upgrade": "Submit a software upgrade along with an initial deposit.\nPlease specify a unique name and height for the upgrade to take effect.\nYou may include info to reference a binary download link, in a format compatible with: https://github.com/cosmos/cosmos-sdk/tree/master/cosmovisor\n\nUsage:\n  gaiad tx gov submit-proposal software-upgrade [name] (--upgrade-height [height]) (--upgrade-info [info]) [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --deposit string           deposit of proposal\n      --description string       description of proposal\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for software-upgrade\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --title string             title of proposal\n      --upgrade-height int       The height at which the upgrade must happen\n      --upgrade-info string      Optional info for the planned upgrade such as commit hash, etc.\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx gov submit-proposal update-client": "Submit an update IBC client proposal along with an initial deposit.\nPlease specify a subject client identifier you want to update..\nPlease specify the substitute client the subject client will be updated to.\n\nUsage:\n  gaiad tx gov submit-proposal update-client [subject-client-id] [substitute-client-id] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --deposit string           deposit of proposal\n      --description string       description of proposal\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for update-client\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n      --title string             title of proposal\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx gov vote": "Submit a vote for an active proposal. You can\nfind the proposal-id by running \"gaiad query gov proposals\".\n\nExample:\n$ gaiad tx gov vote 1 yes --from mykey\n\nUsage:\n  gaiad tx gov vote [proposal-id] [option] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for vote\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx gov weighted-vote": "Submit a vote for an active proposal. You can\nfind the proposal-id by running \"gaiad query gov proposals\".\n\nExample:\n$ gaiad tx gov weighted-vote 1 yes=0.6,no=0.3,abstain=0.05,no_with_veto=0.05 --from mykey\n\nUsage:\n  gaiad tx gov weighted-vote [proposal-id] [weighted-options] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for weighted-vote\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx ibc": "IBC transaction subcommands\n\nUsage:\n  gaiad tx ibc [flags]\n  gaiad tx ibc [command]\n\nAvailable Commands:\n  channel     IBC channel transaction subcommands\n  client      IBC client transaction subcommands\n\nFlags:\n  -h, --help   help for ibc\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad tx ibc [command] --help\" for more information about a command.",
  "gaiad tx ibc channel": "IBC channel transaction subcommands\n\nUsage:\n  gaiad tx ibc channel [flags]\n\nFlags:\n  -h, --help   help for channel\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx ibc client": "IBC client transaction subcommands\n\nUsage:\n  gaiad tx ibc client [flags]\n  gaiad tx ibc client [command]\n\nAvailable Commands:\n  create       create new IBC client\n  misbehaviour submit a client misbehaviour\n  update       update existing client with a header\n  upgrade      upgrade an IBC client\n\nFlags:\n  -h, --help   help for client\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad tx ibc client [command] --help\" for more information about a command.",
  "gaiad tx ibc client create": "create a new IBC client with the specified client state and consensus state\n\t- ClientState JSON example: {\"@type\":\"/ibc.lightclients.solomachine.v1.ClientState\",\"sequence\":\"1\",\"frozen_sequence\":\"0\",\"consensus_state\":{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AtK50+5pJOoaa04qqAqrnyAqsYrwrR/INnA6UPIaYZlp\"},\"diversifier\":\"testing\",\"timestamp\":\"10\"},\"allow_update_after_proposal\":false}\n\t- ConsensusState JSON example: {\"@type\":\"/ibc.lightclients.solomachine.v1.ConsensusState\",\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AtK50+5pJOoaa04qqAqrnyAqsYrwrR/INnA6UPIaYZlp\"},\"diversifier\":\"testing\",\"timestamp\":\"10\"}\n\nUsage:\n  gaiad tx ibc client create [path/to/client_state.json] [path/to/consensus_state.json] [flags]\n\nExamples:\ngaiad tx ibc client create [path/to/client_state.json] [path/to/consensus_state.json] --from node0 --home ../node0/<app>cli --chain-id $CID\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for create\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx ibc client misbehaviour": "submit a client misbehaviour to prevent future updates\n\nUsage:\n  gaiad tx ibc client misbehaviour [path/to/misbehaviour.json] [flags]\n\nExamples:\ngaiad tx ibc client misbehaviour [path/to/misbehaviour.json] --from node0 --home ../node0/<app>cli --chain-id $CID\n\nFlags:\n  -h, --help   help for misbehaviour\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx ibc client update": "update existing client with a header\n\nUsage:\n  gaiad tx ibc client update [client-id] [path/to/header.json] [flags]\n\nExamples:\ngaiad tx ibc client update [client-id] [path/to/header.json] --from node0 --home ../node0/<app>cli --chain-id $CID\n\nFlags:\n  -h, --help   help for update\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx ibc client upgrade": "upgrade the IBC client associated with the provided client identifier while providing proof committed by the counterparty chain to the new client and consensus states\n\t- ClientState JSON example: {\"@type\":\"/ibc.lightclients.solomachine.v1.ClientState\",\"sequence\":\"1\",\"frozen_sequence\":\"0\",\"consensus_state\":{\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AtK50+5pJOoaa04qqAqrnyAqsYrwrR/INnA6UPIaYZlp\"},\"diversifier\":\"testing\",\"timestamp\":\"10\"},\"allow_update_after_proposal\":false}\n\t- ConsensusState JSON example: {\"@type\":\"/ibc.lightclients.solomachine.v1.ConsensusState\",\"public_key\":{\"@type\":\"/cosmos.crypto.secp256k1.PubKey\",\"key\":\"AtK50+5pJOoaa04qqAqrnyAqsYrwrR/INnA6UPIaYZlp\"},\"diversifier\":\"testing\",\"timestamp\":\"10\"}\n\nUsage:\n  gaiad tx ibc client upgrade [client-identifier] [path/to/client_state.json] [path/to/consensus_state.json] [upgrade-client-proof] [upgrade-consensus-state-proof] [flags]\n\nExamples:\ngaiad tx ibc client upgrade [client-identifier] [path/to/client_state.json] [path/to/consensus_state.json] [client-state-proof] [consensus-state-proof] --from node0 --home ../node0/<app>cli --chain-id $CID\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for upgrade\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx ibc-transfer": "IBC fungible token transfer transaction subcommands\n\nUsage:\n  gaiad tx ibc-transfer [flags]\n  gaiad tx ibc-transfer [command]\n\nAvailable Commands:\n  transfer    Transfer a fungible token through IBC\n\nFlags:\n  -h, --help   help for ibc-transfer\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad tx ibc-transfer [command] --help\" for more information about a command.",
  "gaiad tx ibc-transfer transfer": "Transfer a fungible token through IBC. Timeouts can be specified\nas absolute or relative using the \"absolute-timeouts\" flag. Timeout height can be set by passing in the height string\nin the form {revision}-{height} using the \"packet-timeout-height\" flag. Relative timeout height is added to the block\nheight queried from the latest consensus state corresponding to the counterparty channel. Relative timeout timestamp \nis added to the greater value of the local clock time and the block timestamp queried from the latest consensus state \ncorresponding to the counterparty channel. Any timeout set to 0 is disabled.\n\nUsage:\n  gaiad tx ibc-transfer transfer [src-port] [src-channel] [receiver] [amount] [flags]\n\nExamples:\ngaiad tx ibc-transfer transfer [src-port] [src-channel] [receiver] [amount]\n\nFlags:\n      --absolute-timeouts               Timeout flags are used as absolute timeouts.\n  -a, --account-number uint             The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string           Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                         ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string              Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string                     Fees to pay along with transaction; eg: 10uatom\n      --from string                     Name or address of private key with which to sign\n      --gas string                      gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float            adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string               Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only                   Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                            help for transfer\n      --keyring-backend string          Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string              The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                          Use a connected Ledger device\n      --memo string                     Memo to be sent along with the packet.\n      --node string                     <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string                     Note to add a description to the transaction (previously --memo)\n      --offline                         Offline mode (does not allow any online functionality\n  -o, --output string                   Output format (text|json) (default \"json\")\n      --packet-timeout-height string    Packet timeout block height. The timeout is disabled when set to 0-0. (default \"0-1000\")\n      --packet-timeout-timestamp uint   Packet timeout timestamp in nanoseconds from now. Default is 10 minutes. The timeout is disabled when set to 0. (default 600000000000)\n  -s, --sequence uint                   The sequence number of the signing account (offline mode only)\n      --sign-mode string                Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint             Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                             Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx liquidity": "Liquidity transaction subcommands\n\nUsage:\n  gaiad tx liquidity [flags]\n  gaiad tx liquidity [command]\n\nAvailable Commands:\n  create-pool Create liquidity pool and deposit coins\n  deposit     Deposit coins to a liquidity pool\n  swap        Swap offer coin with demand coin from the liquidity pool with the given order price\n  withdraw    Withdraw pool coin from the specified liquidity pool\n\nFlags:\n  -h, --help   help for liquidity\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad tx liquidity [command] --help\" for more information about a command.",
  "gaiad tx liquidity create-pool": "Create liquidity pool and deposit coins.\n\nExample:\n$ gaiad tx liquidity create-pool 1 1000000000uatom,50000000000uusd --from mykey\n\nThis example creates a liquidity pool of pool-type 1 (two coins) and deposits 1000000000uatom and 50000000000uusd.\nNew liquidity pools can be created only for coin combinations that do not already exist in the network.\n\n[pool-type]: The id of the liquidity pool-type. The only supported pool type is 1\n[deposit-coins]: The amount of coins to deposit to the liquidity pool. The number of deposit coins must be 2 in pool type 1.\n\nUsage:\n  gaiad tx liquidity create-pool [pool-type] [deposit-coins] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for create-pool\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx liquidity deposit": "Deposit coins a liquidity pool.\n\nThis deposit request is not processed immediately since it is accumulated in the liquidity pool batch.\nAll requests in a batch are treated equally and executed at the same swap price.\n\nExample:\n$ gaiad tx liquidity deposit 1 100000000uatom,5000000000uusd --from mykey\n\nThis example request deposits 100000000uatom and 5000000000uusd to pool-id 1.\nDeposits must be the same coin denoms as the reserve coins.\n\n[pool-id]: The pool id of the liquidity pool\n[deposit-coins]: The amount of coins to deposit to the liquidity pool\n\nUsage:\n  gaiad tx liquidity deposit [pool-id] [deposit-coins] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for deposit\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx liquidity swap": "Swap offer coin with demand coin from the liquidity pool with the given order price.\n\nThis swap request is not processed immediately since it is accumulated in the liquidity pool batch.\nAll requests in a batch are treated equally and executed at the same swap price.\nThe order of swap requests is ignored since the universal swap price is calculated in every batch to prevent front running.\n\nThe requested swap is executed with a swap price that is calculated from the given swap price function of the pool, the other swap requests, and the liquidity pool coin reserve status.\nSwap orders are executed only when the execution swap price is equal to or greater than the submitted order price of the swap order.\n\nExample:\n$ gaiad tx liquidity swap 1 1 50000000uusd uatom 0.019 0.003 --from mykey\n\nFor this example, imagine that an existing liquidity pool has with 1000000000uatom and 50000000000uusd.\nThis example request swaps 50000000uusd for at least 950000uatom with the order price of 0.019 and swap fee rate of 0.003.\nA sufficient balance of half of the swap-fee-rate of the offer coin is required to reserve the offer coin fee.\n\nThe order price is the exchange ratio of X/Y, where X is the amount of the first coin and Y is the amount of the second coin when their denoms are sorted alphabetically.\nIncreasing order price reduces the possibility for your request to be processed and results in buying uatom at a lower price than the pool price.\n\nFor explicit calculations, The swap fee rate must be the value that set as liquidity parameter in the current network.\nThe only supported swap-type is 1. For the detailed swap algorithm, see https://github.com/gravity-devs/liquidity\n\n[pool-id]: The pool id of the liquidity pool \n[swap-type]: The swap type of the swap message. The only supported swap type is 1 (instant swap).\n[offer-coin]: The amount of offer coin to swap \n[demand-coin-denom]: The denomination of the coin to exchange with offer coin \n[order-price]: The limit order price for the swap order. The price is the exchange ratio of X/Y where X is the amount of the first coin and Y is the amount of the second coin when their denoms are sorted alphabetically \n[swap-fee-rate]: The swap fee rate to pay for swap that is proportional to swap amount. The swap fee rate must be the value that set as liquidity parameter in the current network.\n\nUsage:\n  gaiad tx liquidity swap [pool-id] [swap-type] [offer-coin] [demand-coin-denom] [order-price] [swap-fee-rate] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for swap\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx liquidity withdraw": "Withdraw pool coin from the specified liquidity pool.\n\nThis swap request is not processed immediately since it is accumulated in the liquidity pool batch.\nAll requests in a batch are treated equally and executed at the same swap price.\n\nExample:\n$ gaiad tx liquidity withdraw 1 10000pool96EF6EA6E5AC828ED87E8D07E7AE2A8180570ADD212117B2DA6F0B75D17A6295 --from mykey\n\nThis example request withdraws 10000 pool coin from the specified liquidity pool.\nThe appropriate pool coin must be requested from the specified pool.\n\n[pool-id]: The pool id of the liquidity pool\n[pool-coin]: The amount of pool coin to withdraw from the liquidity pool\n\nUsage:\n  gaiad tx liquidity withdraw [pool-id] [pool-coin] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for withdraw\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx multisign": "Sign transactions created with the --generate-only flag that require multisig signatures.\n\nRead one or more signatures from one or more [signature] file, generate a multisig signature compliant to the\nmultisig key [name], and attach the key name to the transaction read from [file].\n\nExample:\n$ gaiad tx multisign transaction.json k1k2k3 k1sig.json k2sig.json k3sig.json\n\nIf --signature-only flag is on, output a JSON representation\nof only the generated signature.\n\nIf the --offline flag is on, the client will not reach out to an external node.\nAccount number or sequence number lookups are not performed so you must\nset these parameters manually.\n\nThe current multisig implementation defaults to amino-json sign mode.\nThe SIGN_MODE_DIRECT sign mode is not supported.'\n\nUsage:\n  gaiad tx multisign [file] [name] [[signature]...] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --amino                    Generate Amino-encoded JSON suitable for submitting to the txs REST endpoint\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --chain-id string          network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for multisign\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n      --output-document string   The document is written to the given file instead of STDOUT\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --signature-only           Print only the generated signature, then exit\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx multisign-batch": "Assemble a batch of multisig transactions generated by batch sign command.\n\nRead one or more signatures from one or more [signature] file, generate a multisig signature compliant to the\nmultisig key [name], and attach the key name to the transaction read from [file].\n\nExample:\n$ gaiad tx multisign-batch transactions.json multisigk1k2k3 k1sigs.json k2sigs.json k3sig.json\n\nThe current multisig implementation defaults to amino-json sign mode.\nThe SIGN_MODE_DIRECT sign mode is not supported.'\n\nUsage:\n  gaiad tx multisign-batch [file] [name] [[signature-file]...] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for multisign-batch\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --multisig string          Address of the multisig account that the transaction signs on behalf of\n      --no-auto-increment        disable sequence auto increment\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n      --output-document string   The document is written to the given file instead of STDOUT\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx provider": "provider transactions subcommands\n\nUsage:\n  gaiad tx provider [flags]\n  gaiad tx provider [command]\n\nAvailable Commands:\n  assign-consensus-key           assign a consensus public key to use for a consumer chain\n  register-consumer-reward-denom Registers a denom that can be sent from consumer chains to all validators and delegators as a reward\n\nFlags:\n  -h, --help   help for provider\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad tx provider [command] --help\" for more information about a command.",
  "gaiad tx provider assign-consensus-key": "assign a consensus public key to use for a consumer chain\n\nUsage:\n  gaiad tx provider assign-consensus-key [consumer-chain-id] [consumer-pubkey] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for assign-consensus-key\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx provider register-consumer-reward-denom": "Registers a denom that can be sent from consumer chains to all validators and delegators as a reward.\n\nCosts a fee, which is specified in genesis.json under the \"consumer_reward_denom_fee\" key. Will fail if the sending account has an insufficient balance.\n\nExample:\n$ gaiad tx provider register-consumer-reward-denom untrn --from mykey\n\nUsage:\n  gaiad tx provider register-consumer-reward-denom [denom] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for register-consumer-reward-denom\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx sign": "Sign a transaction created with the --generate-only flag.\nIt will read a transaction from [file], sign it, and print its JSON encoding.\n\nIf the --signature-only flag is set, it will output the signature parts only.\n\nThe --offline flag makes sure that the client will not reach out to full node.\nAs a result, the account and sequence number queries will not be performed and\nit is required to set such parameters manually. Note, invalid values will cause\nthe transaction to fail.\n\nThe --multisig=<multisig_key> flag generates a signature on behalf of a multisig account\nkey. It implies --signature-only. Full multisig signed transactions may eventually\nbe generated via the 'multisign' command.\n\nUsage:\n  gaiad tx sign [file] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --amino                    Generate Amino encoded JSON suitable for submiting to the txs REST endpoint\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for sign\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --multisig string          Address or key name of the multisig account on behalf of which the transaction shall be signed\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n      --output-document string   The document will be written to the given file instead of STDOUT\n      --overwrite                Overwrite existing signatures with a new one. If disabled, new signature will be appended\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --signature-only           Print only the signatures\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx sign-batch": "Sign batch files of transactions generated with --generate-only.\nThe command processes list of transactions from file (one StdTx each line), generate\nsigned transactions or signatures and print their JSON encoding, delimited by '\\n'.\nAs the signatures are generated, the command updates the account sequence number accordingly.\n\nIf the --signature-only flag is set, it will output the signature parts only.\n\nThe --offline flag makes sure that the client will not reach out to full node.\nAs a result, the account and the sequence number queries will not be performed and\nit is required to set such parameters manually. Note, invalid values will cause\nthe transaction to fail. The sequence will be incremented automatically for each\ntransaction that is signed.\n\nThe --multisig=<multisig_key> flag generates a signature on behalf of a multisig\naccount key. It implies --signature-only.\n\nUsage:\n  gaiad tx sign-batch [file] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --chain-id string          network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for sign-batch\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --multisig string          Address or key name of the multisig account on behalf of which the transaction shall be signed\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n      --output-document string   The document will be written to the given file instead of STDOUT\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --signature-only           Print only the generated signature, then exit (default true)\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx slashing": "Slashing transaction subcommands\n\nUsage:\n  gaiad tx slashing [flags]\n  gaiad tx slashing [command]\n\nAvailable Commands:\n  unjail      unjail validator previously jailed for downtime\n\nFlags:\n  -h, --help   help for slashing\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad tx slashing [command] --help\" for more information about a command.",
  "gaiad tx slashing unjail": "unjail a jailed validator:\n\n$ <appd> tx slashing unjail --from mykey\n\nUsage:\n  gaiad tx slashing unjail [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for unjail\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx staking": "Staking transaction subcommands\n\nUsage:\n  gaiad tx staking [flags]\n  gaiad tx staking [command]\n\nAvailable Commands:\n  cancel-unbond                  Cancel unbonding delegation and delegate back to the validator\n  create-validator               create new validator initialized with a self-delegation to it\n  delegate                       Delegate liquid tokens to a validator\n  disable-tokenize-shares        Disable tokenization of shares\n  edit-validator                 edit an existing validator account\n  enable-tokenize-shares         Enable tokenization of shares\n  redeem-tokens                  Redeem specified amount of share tokens to delegation\n  redelegate                     Redelegate illiquid tokens from one validator to another\n  tokenize-share                 Tokenize delegation to share tokens\n  transfer-tokenize-share-record Transfer ownership of TokenizeShareRecord\n  unbond                         Unbond shares from a validator\n  unbond-validator               Unbond a validator\n  validator-bond                 Mark a delegation as a validator self-bond\n\nFlags:\n  -h, --help   help for staking\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad tx staking [command] --help\" for more information about a command.",
  "gaiad tx staking cancel-unbond": "Cancel Unbonding Delegation and delegate back to the validator.\n\nExample:\n$ gaiad tx staking cancel-unbond cosmosvaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj 100stake 2 --from mykey\n\nUsage:\n  gaiad tx staking cancel-unbond [validator-addr] [amount] [creation-height] [flags]\n\nExamples:\n$ gaiad tx staking cancel-unbond cosmosvaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj 100stake 2 --from mykey\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for cancel-unbond\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx staking create-validator": "create new validator initialized with a self-delegation to it\n\nUsage:\n  gaiad tx staking create-validator [flags]\n\nFlags:\n  -a, --account-number uint                 The account number of the signing account (offline mode only)\n      --amount string                       Amount of coins to bond\n  -b, --broadcast-mode string               Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --commission-max-change-rate string   The maximum commission change rate percentage (per day)\n      --commission-max-rate string          The maximum commission rate percentage\n      --commission-rate string              The initial commission rate percentage\n      --details string                      The validator's (optional) details\n      --dry-run                             ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string                  Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string                         Fees to pay along with transaction; eg: 10uatom\n      --from string                         Name or address of private key with which to sign\n      --gas string                          gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float                adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string                   Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only                       Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                                help for create-validator\n      --identity string                     The optional identity signature (ex. UPort or Keybase)\n      --ip string                           The node's public IP. It takes effect only when used in combination with --generate-only\n      --keyring-backend string              Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string                  The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                              Use a connected Ledger device\n      --moniker string                      The validator's name\n      --node string                         <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --node-id string                      The node's ID\n      --note string                         Note to add a description to the transaction (previously --memo)\n      --offline                             Offline mode (does not allow any online functionality\n  -o, --output string                       Output format (text|json) (default \"json\")\n      --pubkey string                       The validator's Protobuf JSON encoded public key\n      --security-contact string             The validator's (optional) security contact email\n  -s, --sequence uint                       The sequence number of the signing account (offline mode only)\n      --sign-mode string                    Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint                 Set a block timeout height to prevent the tx from being committed past a certain height\n      --website string                      The validator's (optional) website\n  -y, --yes                                 Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx staking delegate": "Delegate an amount of liquid coins to a validator from your wallet.\n\nExample:\n$ gaiad tx staking delegate cosmosvaloper1l2rsakp388kuv9k8qzq6lrm9taddae7fpx59wm 1000stake --from mykey\n\nUsage:\n  gaiad tx staking delegate [validator-addr] [amount] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for delegate\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx staking disable-tokenize-shares": "Disables the tokenization of shares for an address. The account\nmust explicitly re-enable if they wish to tokenize again, at which point they must wait \nthe chain's unbonding period. \n\nExample:\n$ gaiad tx staking disable-tokenize-shares --from mykey\n\nUsage:\n  gaiad tx staking disable-tokenize-shares [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for disable-tokenize-shares\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx staking edit-validator": "edit an existing validator account\n\nUsage:\n  gaiad tx staking edit-validator [flags]\n\nFlags:\n  -a, --account-number uint       The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string     Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --commission-rate string    The new commission rate percentage\n      --details string            The validator's (optional) details (default \"[do-not-modify]\")\n      --dry-run                   ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string        Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string               Fees to pay along with transaction; eg: 10uatom\n      --from string               Name or address of private key with which to sign\n      --gas string                gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float      adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string         Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only             Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                      help for edit-validator\n      --identity string           The (optional) identity signature (ex. UPort or Keybase) (default \"[do-not-modify]\")\n      --keyring-backend string    Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string        The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                    Use a connected Ledger device\n      --new-moniker string        The validator's name (default \"[do-not-modify]\")\n      --node string               <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string               Note to add a description to the transaction (previously --memo)\n      --offline                   Offline mode (does not allow any online functionality\n  -o, --output string             Output format (text|json) (default \"json\")\n      --security-contact string   The validator's (optional) security contact email (default \"[do-not-modify]\")\n  -s, --sequence uint             The sequence number of the signing account (offline mode only)\n      --sign-mode string          Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint       Set a block timeout height to prevent the tx from being committed past a certain height\n      --website string            The validator's (optional) website (default \"[do-not-modify]\")\n  -y, --yes                       Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx staking enable-tokenize-shares": "Enables the tokenization of shares for an address after \nit had been disable. This transaction queues the enablement of tokenization, but\nthe address must wait 1 unbonding period from the time of this transaction before\ntokenization is permitted.\n\nExample:\n$ gaiad tx staking enable-tokenize-shares --from mykey\n\nUsage:\n  gaiad tx staking enable-tokenize-shares [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for enable-tokenize-shares\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx staking redeem-tokens": "Redeem specified amount of share tokens to delegation.\n\nExample:\n$ gaiad tx staking redeem-tokens 100sharetoken --from mykey\n\nUsage:\n  gaiad tx staking redeem-tokens [amount] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for redeem-tokens\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx staking redelegate": "Redelegate an amount of illiquid staking tokens from one validator to another.\n\nExample:\n$ gaiad tx staking redelegate cosmosvaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj cosmosvaloper1l2rsakp388kuv9k8qzq6lrm9taddae7fpx59wm 100stake --from mykey\n\nUsage:\n  gaiad tx staking redelegate [src-validator-addr] [dst-validator-addr] [amount] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for redelegate\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx staking tokenize-share": "Tokenize delegation to share tokens.\n\nExample:\n$ gaiad tx staking tokenize-share cosmosvaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj 100stake cosmos1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj --from mykey\n\nUsage:\n  gaiad tx staking tokenize-share [validator-addr] [amount] [rewardOwner] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for tokenize-share\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx staking transfer-tokenize-share-record": "Transfer ownership of TokenizeShareRecord.\n\nExample:\n$ gaiad tx staking transfer-tokenize-share-record 1 cosmos1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj --from mykey\n\nUsage:\n  gaiad tx staking transfer-tokenize-share-record [record-id] [new-owner] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for transfer-tokenize-share-record\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx staking unbond": "Unbond an amount of bonded shares from a validator.\n\nExample:\n$ gaiad tx staking unbond cosmosvaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj 100stake --from mykey\n\nUsage:\n  gaiad tx staking unbond [validator-addr] [amount] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for unbond\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx staking unbond-validator": "Unbond a validator.\n\nExample:\n$ gaiad tx staking unbond-validator --from mykey\n\nUsage:\n  gaiad tx staking unbond-validator [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for unbond-validator\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx staking validator-bond": "Mark a delegation as a validator self-bond.\n\nExample:\n$ gaiad tx staking validator-bond cosmosvaloper13h5xdxhsdaugwdrkusf8lkgu406h8t62jkqv3h --from mykey\n\nUsage:\n  gaiad tx staking validator-bond [validator] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for validator-bond\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx validate-signatures": "Print the addresses that must sign the transaction, those who have already\nsigned it, and make sure that signatures are in the correct order.\n\nThe command would check whether all required signers have signed the transactions, whether\nthe signatures were collected in the right order, and if the signature is valid over the\ngiven transaction. If the --offline flag is also set, signature validation over the\ntransaction will be not be performed as that will require RPC communication with a full node.\n\nUsage:\n  gaiad tx validate-signatures [file] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --chain-id string          The network chain ID\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for validate-signatures\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad tx vesting": "Vesting transaction subcommands\n\nUsage:\n  gaiad tx vesting [flags]\n  gaiad tx vesting [command]\n\nAvailable Commands:\n  create-vesting-account Create a new vesting account funded with an allocation of tokens.\n\nFlags:\n  -h, --help   help for vesting\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors\n\nUse \"gaiad tx vesting [command] --help\" for more information about a command.",
  "gaiad tx vesting create-vesting-account": "Create a new vesting account funded with an allocation of tokens. The\naccount can either be a delayed or continuous vesting account, which is determined\nby the '--delayed' flag. All vesting accouts created will have their start time\nset by the committed block's time. The end_time must be provided as a UNIX epoch\ntimestamp.\n\nUsage:\n  gaiad tx vesting create-vesting-account [to_address] [amount] [end_time] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --delayed                  Create a delayed vesting account if true\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --fees string              Fees to pay along with transaction; eg: 10uatom\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for create-vesting-account\n      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --node string              <host>:<port> to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\nGlobal Flags:\n      --chain-id string     The network chain ID\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad validate-genesis": "validates the genesis file at the default location or at the location passed as an arg\n\nUsage:\n  gaiad validate-genesis [file] [flags]\n\nFlags:\n  -h, --help   help for validate-genesis\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors",
  "gaiad version": "Print the application binary version information\n\nUsage:\n  gaiad version [flags]\n\nFlags:\n  -h, --help            help for version\n      --long            Print long version information\n  -o, --output string   Output format (text|json) (default \"text\")\n\nGlobal Flags:\n      --home string         directory for config and data (default \"/home/ubuntu/.gaia\")\n      --log_format string   The logging format (json|plain) (default \"plain\")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --trace               print out full stack trace on errors"
}