<cli>namada --help

Namada command line interface.

Usage: namada [OPTIONS] <COMMAND>

Commands:
  node                  Node sub-commands.
  relayer               Relayer sub-commands.
  client                Client sub-commands.
  wallet                Wallet sub-commands.
  ethereum-bridge-pool  Functionality for interacting with the Ethereum bridge pool. This pool holds transfers waiting to be relayed to Ethereum.
  ledger                Ledger node sub-commands. If no sub-command specified, defaults to run the node.
  tx                    Send a transaction with custom WASM code.
  transfer              Send a signed transfer transaction.
  ibc-transfer          Send a signed IBC transfer transaction.
  update-account        Send a signed transaction to update account's validity predicate.
  init-proposal         Create a new proposal.
  vote-proposal         Vote a proposal.
  reveal-pk             Submit a tx to reveal the public key an implicit account. Typically, you don't have to do this manually and the client will detect when a tx to reveal PK is needed and submit it automatically. This will write the PK into the account's storage so that it can be used for signature verification on transactions authorized by this account.
  help                  Print this message or the help of the given subcommand(s)

Options:
      --chain-id <chain-id>  The chain ID.
      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\Namada` on Windows.
      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.
      --pre-genesis          Dispatch pre-genesis specific logic.
  -h, --help                 Print help
  -V, --version              Print version
</cli>

<cli>namada relayer --help

Relayer sub-commands.

Usage: namada relayer [OPTIONS] <COMMAND>

Commands:
  ethereum-bridge-pool  Functionality for interacting with the Ethereum bridge pool. This pool holds transfers waiting to be relayed to Ethereum.
  validator-set         Validator set queries, that return data in a format to be consumed by the Namada Ethereum bridge smart contracts.
  help                  Print this message or the help of the given subcommand(s)

Options:
      --chain-id <chain-id>  The chain ID.
      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\Namada` on Windows.
      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.
      --pre-genesis          Dispatch pre-genesis specific logic.
  -h, --help                 Print help
</cli>

<cli>namada relayer validator-set governance --help

Query the Governance validator set in Namada, at the given epoch, or the latest one, if none is provided.

Usage: namada relayer validator-set governance [OPTIONS]

Options:
      --chain-id <chain-id>  The chain ID.
      --node <node>          Address of a ledger node as "{scheme}://{host}:{port}". If the scheme is not supplied, it is assumed to be TCP.
      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\Namada` on Windows.
      --epoch <epoch>        The epoch of the Governance set of validators to query.
      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.
      --pre-genesis          Dispatch pre-genesis specific logic.
  -h, --help                 Print help
</cli>

<cli>namada relayer validator-set proof --help

Query an Ethereum ABI encoding of a proof of the consensus validator set in Namada, at the requested epoch, or the next one, if no epoch is provided.

Usage: namada relayer validator-set proof [OPTIONS]

Options:
      --chain-id <chain-id>  The chain ID.
      --node <node>          Address of a ledger node as "{scheme}://{host}:{port}". If the scheme is not supplied, it is assumed to be TCP.
      --base-dir <base-dir>  The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\Namada` on Windows.
      --epoch <epoch>        The epoch of the set of validators to be proven.
      --wasm-dir <wasm-dir>  Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.
      --pre-genesis          Dispatch pre-genesis specific logic.
  -h, --help                 Print help
</cli>

<cli>namada relayer validator-set relay --help

Relay a validator set update to Namada's Ethereum bridge smart contracts.

Usage: namada relayer validator-set relay [OPTIONS] --confirmations <confirmations>

Options:
      --chain-id <chain-id>
          The chain ID.
      --node <node>
          Address of a ledger node as "{scheme}://{host}:{port}". If the scheme is not supplied, it is assumed to be TCP.
      --base-dir <base-dir>
          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\Namada` on Windows.
      --safe-mode
          Safe mode overrides keyboard interrupt signals, to ensure Ethereum transfers aren't canceled midway through.
      --daemon
          Run in daemon mode, which will continuously perform validator set updates.
      --wasm-dir <wasm-dir>
          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.
      --pre-genesis
          Dispatch pre-genesis specific logic.
      --retry-sleep <retry-sleep>
          The amount of time to sleep between failed daemon mode relays.
      --success-sleep <success-sleep>
          The amount of time to sleep between successful daemon mode relays.
      --ethereum-address <ethereum-address>
          The address of the Ethereum wallet to pay the gas fees. If unset, the default wallet is used.
      --epoch <epoch>
          The epoch of the set of validators to relay.
      --eth-gas <eth-gas>
          The Ethereum gas that can be spent during the relay call.
      --eth-gas-price <eth-gas-price>
          The price of Ethereum gas, during the relay call.
      --eth-rpc-endpoint <eth-rpc-endpoint>
          The Ethereum RPC endpoint.
      --confirmations <confirmations>
          The number of block confirmations on Ethereum.
      --sync
          Synchronize with the network, or exit immediately, if the Ethereum node has fallen behind.
  -h, --help
          Print help
</cli>

<cli>namada ethereum-bridge-pool relay-proof --help

Construct a merkle proof that the given transfers are in the pool and relay it to Ethereum.

Usage: namada ethereum-bridge-pool relay-proof [OPTIONS] --hash-list <hash-list> --relayer <relayer> --confirmations <confirmations>

Options:
      --chain-id <chain-id>
          The chain ID.
      --node <node>
          Address of a ledger node as "{scheme}://{host}:{port}". If the scheme is not supplied, it is assumed to be TCP.
      --base-dir <base-dir>
          The base directory is where the nodes, client and wallet configuration and state is stored. This value can also be set via `NAMADA_BASE_DIR` environment variable, but the argument takes precedence, if specified. Defaults to `$XDG_DATA_HOME/namada` (`$HOME/.local/share/namada` where `XDG_DATA_HOME` is unset) on Unix,`$HOME/Library/Application Support/Namada` on Mac,and `%AppData%\Namada` on Windows.
      --safe-mode
          Safe mode overrides keyboard interrupt signals, to ensure Ethereum transfers aren't canceled midway through.
      --hash-list <hash-list>
          Whitespace separated Keccak hash list of transfers in the Bridge pool.
      --wasm-dir <wasm-dir>
          Directory with built WASM validity predicates, transactions. This value can also be set via `NAMADA_WASM_DIR` environment variable, but the argument takes precedence, if specified.
      --pre-genesis
          Dispatch pre-genesis specific logic.
      --relayer <relayer>
          The rewards address for relaying this proof.
      --ethereum-address <ethereum-address>
          The address of the Ethereum wallet to pay the gas fees. If unset, the default wallet is used.
      --eth-gas <eth-gas>
          The Ethereum gas that can be spent during the relay call.
      --eth-gas-price <eth-gas-price>
          The price of Ethereum gas, during the relay call.
      --eth-rpc-endpoint <eth-rpc-endpoint>
          The Ethereum RPC endpoint.
      --confirmations <confirmations>
          The number of block confirmations on Ethereum.
      --sync
          Synchronize with the network, or exit immediately, if the Ethereum node has fallen behind.
  -h, --help
          Print help
</cli>

<cli>osmosisd query --help

Querying subcommands

Usage:
  osmosisd query [flags]
  osmosisd query [command]

Aliases:
  query, q

Available Commands:
  account                  Query for account by address
  auth                     Querying commands for the auth module
  authz                    Querying commands for the authz module
  bank                     Querying commands for the bank module
  block                    Get verified data for the block at given height
  concentratedliquidity    Querying commands for the concentratedliquidity module
  cosmwasmpool             Querying commands for the cosmwasmpool module
  distribution             Querying commands for the distribution module
  downtimedetector         Querying commands for the downtimedetector module
  epochs                   Querying commands for the epochs module
  evidence                 Query for evidence by hash or for all (paginated) submitted evidence
  gamm                     Querying commands for the gamm module
  gov                      Querying commands for the governance module
  ibc                      Querying commands for the IBC module
  ibc-transfer             IBC fungible token transfer query subcommands
  ibchooks                 Querying commands for the ibchooks module
  incentives               Querying commands for the incentives module
  interchain-accounts      IBC interchain accounts query subcommands
  interchainquery          Querying commands for the interchainquery module
  lockup                   Querying commands for the lockup module
  mint                     Querying commands for the mint module
  packetforward            Querying commands for the packetforward module
  params                   Querying commands for the params module
  poolincentives           Querying commands for the poolincentives module
  poolmanager              Querying commands for the poolmanager module
  protorev                 Querying commands for the protorev module
  rate-limited-ibc         Querying commands for the rate-limited-ibc module
  slashing                 Querying commands for the slashing module
  staking                  Querying commands for the staking module
  superfluid               Querying commands for the superfluid module
  tendermint-validator-set Get the full tendermint validator set at given height
  tokenfactory             Querying commands for the tokenfactory module
  twap                     Querying commands for the twap module
  tx                       Query for a transaction by hash, "<addr>/<seq>" combination or comma-separated signatures in a committed block
  txfees                   Querying commands for the txfees module
  txs                      Query for paginated transactions that match a set of events
  upgrade                  Querying commands for the upgrade module
  valsetpref               Querying commands for the valsetpref module
  wasm                     Querying commands for the wasm module

Flags:
      --chain-id string   The network chain ID
  -h, --help              help for query

Global Flags:
      --home string         directory for config and data (default "/home/ubuntu/.osmosisd")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors

Use "osmosisd query [command] --help" for more information about a command.
</cli>

<cli>osmosisd query auth --help

Querying commands for the auth module

Usage:
  osmosisd query auth [flags]
  osmosisd query auth [command]

Available Commands:
  account            Query for account by address
  accounts           Query all the accounts
  address-by-acc-num Query for an address by account number
  module-account     Query module account info by module name
  module-accounts    Query all module accounts
  params             Query the current auth parameters

Flags:
  -h, --help   help for auth

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.osmosisd")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors

Use "osmosisd query auth [command] --help" for more information about a command.
</cli>

<cli>osmosisd query authz --help

Querying commands for the authz module

Usage:
  osmosisd query authz [flags]
  osmosisd query authz [command]

Available Commands:
  grants            query grants for a granter-grantee pair and optionally a msg-type-url
  grants-by-grantee query authorization grants granted to a grantee
  grants-by-granter query authorization grants granted by granter

Flags:
  -h, --help   help for authz

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.osmosisd")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors

Use "osmosisd query authz [command] --help" for more information about a command.
</cli>

<cli>osmosisd query gamm --help

Querying commands for the gamm module

Usage:
  osmosisd query gamm [command]
  
Available Commands:
  cfmm-cl-pool-links             Query all concentrated pool and cfmm pool id links
  cl-pool-link-from-cfmm         Query concentrated pool id link from cfmm pool id
  estimate-swap-exact-amount-in  Query estimate-swap-exact-amount-in
  estimate-swap-exact-amount-out Query estimate-swap-exact-amount-out
  num-pools                      Query number of pools
  pool                           Query pool
  pool-params                    Query pool-params
  pool-type                      Query pool type
  pools                          Query pools
  pools-with-filter              Query pools with filter
  spot-price                     Query spot-price (LEGACY, arguments are reversed!!)
  total-liquidity                Query total-liquidity
  total-pool-liquidity           Query total-pool-liquidity
  total-share                    Query total-share

Use "osmosisd query gamm [command] --help" for more information about a command.
</cli>

<cli>osmosisd query gamm cfmm-cl-pool-links --help

Query all concentrated pool and cfmm pool id links

Example:
$ osmosisd q gamm cfmm-cl-pool-links

Usage:
  osmosisd query gamm cfmm-cl-pool-links [flags]

Flags:
      --grpc-addr string   the gRPC endpoint to use for this chain
      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS
      --height int         Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help               help for cfmm-cl-pool-links
      --node string        <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string      Output format (text|json) (default "text")

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.osmosisd")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>osmosisd query ibc --help

Querying commands for the IBC module

Usage:
  osmosisd query ibc [flags]
  osmosisd query ibc [command]

Available Commands:
  channel     IBC channel query subcommands
  client      IBC client query subcommands
  connection  IBC connection query subcommands

Flags:
  -h, --help   help for ibc

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.osmosisd")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors

Use "osmosisd query ibc [command] --help" for more information about a command.
</cli>

<cli>osmosisd query ibc channel --help

IBC channel query subcommands

Usage:
  osmosisd query ibc channel [flags]
  osmosisd query ibc channel [command]

Available Commands:
  channels              Query all channels
  client-state          Query the client state associated with a channel
  connections           Query all channels associated with a connection
  end                   Query a channel end
  next-sequence-receive Query a next receive sequence
  packet-ack            Query a packet acknowledgement
  packet-commitment     Query a packet commitment
  packet-commitments    Query all packet commitments associated with a channel
  packet-receipt        Query a packet receipt
  unreceived-acks       Query all the unreceived acks associated with a channel
  unreceived-packets    Query all the unreceived packets associated with a channel

Flags:
  -h, --help   help for channel

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.osmosisd")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors

Use "osmosisd query ibc channel [command] --help" for more information about a command.
</cli>

<cli>osmosisd query ibc channel channels --help

Query all channels from a chain

Usage:
  osmosisd query ibc channel channels [flags]

Examples:
osmosisd query ibc channel channels

Flags:
      --count-total        count total number of records in channels to query for
      --grpc-addr string   the gRPC endpoint to use for this chain
      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS
      --height int         Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help               help for channels
      --limit uint         pagination limit of channels to query for (default 100)
      --node string        <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
      --offset uint        pagination offset of channels to query for
  -o, --output string      Output format (text|json) (default "text")
      --page uint          pagination page of channels to query for. This sets offset to a multiple of limit (default 1)
      --page-key string    pagination page-key of channels to query for
      --reverse            results are sorted in descending order

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.osmosisd")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>osmosisd query ibc channel client-state --help

Query the client state associated with a channel, by providing its port and channel identifiers.

Usage:
  osmosisd query ibc channel client-state [port-id] [channel-id] [flags]

Examples:
osmosisd query ibc channel client-state [port-id] [channel-id]

Flags:
      --grpc-addr string   the gRPC endpoint to use for this chain
      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS
      --height int         Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help               help for client-state
      --node string        <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string      Output format (text|json) (default "text")

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.osmosisd")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>osmosisd query ibc channel connections --help

Query all channels associated with a connection

Usage:
  osmosisd query ibc channel connections [connection-id] [flags]

Examples:
osmosisd query ibc channel connections [connection-id]

Flags:
      --count-total        count total number of records in channels associated with a connection to query for
      --grpc-addr string   the gRPC endpoint to use for this chain
      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS
      --height int         Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help               help for connections
      --limit uint         pagination limit of channels associated with a connection to query for (default 100)
      --node string        <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
      --offset uint        pagination offset of channels associated with a connection to query for
  -o, --output string      Output format (text|json) (default "text")
      --page uint          pagination page of channels associated with a connection to query for. This sets offset to a multiple of limit (default 1)
      --page-key string    pagination page-key of channels associated with a connection to query for
      --reverse            results are sorted in descending order

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.osmosisd")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>osmosisd query ibc channel end --help

Query an IBC channel end from a port and channel identifiers

Usage:
  osmosisd query ibc channel end [port-id] [channel-id] [flags]

Examples:
osmosisd query ibc channel end [port-id] [channel-id]

Flags:
      --grpc-addr string   the gRPC endpoint to use for this chain
      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS
      --height int         Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help               help for end
      --node string        <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string      Output format (text|json) (default "text")
      --prove              show proofs for the query results (default true)

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.osmosisd")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>osmosisd query ibc channel next-sequence-receive --help

Query the next receive sequence for a given channel

Usage:
  osmosisd query ibc channel next-sequence-receive [port-id] [channel-id] [flags]

Examples:
osmosisd query ibc channel next-sequence-receive [port-id] [channel-id]

Flags:
      --grpc-addr string   the gRPC endpoint to use for this chain
      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS
      --height int         Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help               help for next-sequence-receive
      --node string        <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string      Output format (text|json) (default "text")
      --prove              show proofs for the query results (default true)

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.osmosisd")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>osmosisd query ibc channel packet-ack --help

Query a packet acknowledgement

Usage:
  osmosisd query ibc channel packet-ack [port-id] [channel-id] [sequence] [flags]

Examples:
osmosisd query ibc channel packet-ack [port-id] [channel-id] [sequence]

Flags:
      --grpc-addr string   the gRPC endpoint to use for this chain
      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS
      --height int         Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help               help for packet-ack
      --node string        <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string      Output format (text|json) (default "text")
      --prove              show proofs for the query results (default true)

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.osmosisd")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>osmosisd query ibc channel packet-commitment --help

Query a packet commitment

Usage:
  osmosisd query ibc channel packet-commitment [port-id] [channel-id] [sequence] [flags]

Examples:
osmosisd query ibc channel packet-commitment [port-id] [channel-id] [sequence]

Flags:
      --grpc-addr string   the gRPC endpoint to use for this chain
      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS
      --height int         Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help               help for packet-commitment
      --node string        <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string      Output format (text|json) (default "text")
      --prove              show proofs for the query results (default true)

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.osmosisd")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>osmosisd query ibc channel packet-commitments --help

Query all packet commitments associated with a channel

Usage:
  osmosisd query ibc channel packet-commitments [port-id] [channel-id] [flags]

Examples:
osmosisd query ibc channel packet-commitments [port-id] [channel-id]

Flags:
      --count-total        count total number of records in packet commitments associated with a channel to query for
      --grpc-addr string   the gRPC endpoint to use for this chain
      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS
      --height int         Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help               help for packet-commitments
      --limit uint         pagination limit of packet commitments associated with a channel to query for (default 100)
      --node string        <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
      --offset uint        pagination offset of packet commitments associated with a channel to query for
  -o, --output string      Output format (text|json) (default "text")
      --page uint          pagination page of packet commitments associated with a channel to query for. This sets offset to a multiple of limit (default 1)
      --page-key string    pagination page-key of packet commitments associated with a channel to query for
      --reverse            results are sorted in descending order

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.osmosisd")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>osmosisd query ibc channel packet-receipt --help

Query a packet receipt

Usage:
  osmosisd query ibc channel packet-receipt [port-id] [channel-id] [sequence] [flags]

Examples:
osmosisd query ibc channel packet-receipt [port-id] [channel-id] [sequence]

Flags:
      --grpc-addr string   the gRPC endpoint to use for this chain
      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS
      --height int         Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help               help for packet-receipt
      --node string        <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string      Output format (text|json) (default "text")
      --prove              show proofs for the query results (default true)

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.osmosisd")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>osmosisd query ibc channel unreceived-acks --help

Given a list of acknowledgement sequences from counterparty, determine if an ack on the counterparty chain has been received on the executing chain.

The return value represents:
- Unreceived packet acknowledgement: packet commitment exists on original sending (executing) chain and ack exists on receiving chain.

Usage:
  osmosisd query ibc channel unreceived-acks [port-id] [channel-id] [flags]

Examples:
osmosisd query ibc channel unreceived-acks [port-id] [channel-id] --sequences=1,2,3

Flags:
      --grpc-addr string       the gRPC endpoint to use for this chain
      --grpc-insecure          allow gRPC over insecure channels, if not TLS the server must use TLS
      --height int             Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help                   help for unreceived-acks
      --node string            <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string          Output format (text|json) (default "text")
      --sequences int64Slice   comma separated list of packet sequence numbers (default [])

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.osmosisd")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>osmosisd query ibc channel unreceived-packets --help

Determine if a packet, given a list of packet commitment sequences, is unreceived.

The return value represents:
- Unreceived packet commitments: no acknowledgement exists on receiving chain for the given packet commitment sequence on sending chain.

Usage:
  osmosisd query ibc channel unreceived-packets [port-id] [channel-id] [flags]

Examples:
osmosisd query ibc channel unreceived-packets [port-id] [channel-id] --sequences=1,2,3

Flags:
      --grpc-addr string       the gRPC endpoint to use for this chain
      --grpc-insecure          allow gRPC over insecure channels, if not TLS the server must use TLS
      --height int             Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help                   help for unreceived-packets
      --node string            <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string          Output format (text|json) (default "text")
      --sequences int64Slice   comma separated list of packet sequence numbers (default [])

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.osmosisd")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>osmosisd query ibc client --help

IBC client query subcommands

Usage:
  osmosisd query ibc client [flags]
  osmosisd query ibc client [command]

Available Commands:
  consensus-state         Query the consensus state of a client at a given height
  consensus-state-heights Query the heights of all consensus states of a client.
  consensus-states        Query all the consensus states of a client.
  header                  Query the latest header of the running chain
  params                  Query the current ibc client parameters
  self-consensus-state    Query the self consensus state for this chain
  state                   Query a client state
  states                  Query all available light clients
  status                  Query client status

Flags:
  -h, --help   help for client

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.osmosisd")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors

Use "osmosisd query ibc client [command] --help" for more information about a command.
</cli>


<cli>osmosisd query superfluid --help

Querying commands for the superfluid module

Usage:
  osmosisd query superfluid [command]
  
Available Commands:
  all-intermediary-accounts            Query all superfluid intermediary accounts
  all-superfluid-assets                Query all superfluid assets
  asset-multiplier                     Query asset multiplier by denom
  connected-intermediary-account       Query connected intermediary account
  params                               Query the current superfluid parameters
  superfluid-delegation-amount         Query coins superfluid delegated for a delegator, validator, denom
  superfluid-delegation-by-delegator   Query coins superfluid delegated for the specified delegator
  superfluid-undelegation-by-delegator Query coins superfluid undelegated for the specified delegator
  total-delegation-by-delegator        Query both superfluid delegation and normal delegation
  total-superfluid-delegations         Query total amount of osmo delegated via superfluid staking
  unpool-whitelist                     Query whitelisted pool ids to unpool

Use "osmosisd query superfluid [command] --help" for more information about a command.
</cli>

<cli>osmosisd query superfluid all-intermediary-accounts --help

Query all superfluid intermediary accounts

Usage:
  osmosisd query superfluid all-intermediary-accounts [flags]

Flags:
      --count-total        count total number of records in all-intermediary-accounts to query for
      --grpc-addr string   the gRPC endpoint to use for this chain
      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS
      --height int         Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help               help for all-intermediary-accounts
      --limit uint         pagination limit of all-intermediary-accounts to query for (default 100)
      --node string        <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
      --offset uint        pagination offset of all-intermediary-accounts to query for
  -o, --output string      Output format (text|json) (default "text")
      --page uint          pagination page of all-intermediary-accounts to query for. This sets offset to a multiple of limit (default 1)
      --page-key string    pagination page-key of all-intermediary-accounts to query for
      --reverse            results are sorted in descending order

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.osmosisd")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>osmosisd query superfluid all-superfluid-assets --help

Query all superfluid assets

Usage:
  osmosisd query superfluid all-superfluid-assets [flags]

Flags:
      --grpc-addr string   the gRPC endpoint to use for this chain
      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS
      --height int         Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help               help for all-superfluid-assets
      --node string        <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string      Output format (text|json) (default "text")

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.osmosisd")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>osmosisd query superfluid asset-multiplier --help

Query asset multiplier by denom

Example:
$ osmosisd q superfluid asset-multiplier gamm/pool/1

Usage:
  osmosisd query superfluid asset-multiplier [denom] [flags]

Flags:
      --grpc-addr string   the gRPC endpoint to use for this chain
      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS
      --height int         Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help               help for asset-multiplier
      --node string        <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string      Output format (text|json) (default "text")

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.osmosisd")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>osmosisd query superfluid connected-intermediary-account --help

Query connected intermediary account

Example:
$ osmosisd q superfluid connected-intermediary-account 1

Usage:
  osmosisd query superfluid connected-intermediary-account [lock-id] [flags]

Flags:
      --grpc-addr string   the gRPC endpoint to use for this chain
      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS
      --height int         Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help               help for connected-intermediary-account
      --node string        <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string      Output format (text|json) (default "text")

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.osmosisd")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>osmosisd query superfluid params --help

Query parameters for the superfluid module:

$ <appd> query superfluid params

Usage:
  osmosisd query superfluid params [flags]

Flags:
      --grpc-addr string   the gRPC endpoint to use for this chain
      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS
      --height int         Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help               help for params
      --node string        <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string      Output format (text|json) (default "text")

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.osmosisd")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>osmosisd query superfluid superfluid-delegation-amount --help

Query coins superfluid delegated for a delegator, validator, denom

Usage:
  osmosisd query superfluid superfluid-delegation-amount [delegator-address] [validator-address] [denom] [flags]

Flags:
      --grpc-addr string   the gRPC endpoint to use for this chain
      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS
      --height int         Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help               help for superfluid-delegation-amount
      --node string        <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string      Output format (text|json) (default "text")

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.osmosisd")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>osmosisd query superfluid superfluid-delegation-by-delegator --help

Query coins superfluid delegated for the specified delegator

Usage:
  osmosisd query superfluid superfluid-delegation-by-delegator [delegator-address] [validator-address] [denom] [flags]

Flags:
      --grpc-addr string   the gRPC endpoint to use for this chain
      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS
      --height int         Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help               help for superfluid-delegation-by-delegator
      --node string        <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string      Output format (text|json) (default "text")

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.osmosisd")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>osmosisd query superfluid superfluid-undelegation-by-delegator --help

Query coins superfluid undelegated for the specified delegator

Usage:
  osmosisd query superfluid superfluid-undelegation-by-delegator [delegator-address] [denom] [flags]

Flags:
      --grpc-addr string   the gRPC endpoint to use for this chain
      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS
      --height int         Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help               help for superfluid-undelegation-by-delegator
      --node string        <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string      Output format (text|json) (default "text")

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.osmosisd")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>osmosisd query superfluid total-delegation-by-delegator --help

Query both superfluid delegation and normal delegation

Usage:
  osmosisd query superfluid total-delegation-by-delegator [delegator-address] [flags]

Flags:
      --grpc-addr string   the gRPC endpoint to use for this chain
      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS
      --height int         Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help               help for total-delegation-by-delegator
      --node string        <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string      Output format (text|json) (default "text")

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.osmosisd")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>osmosisd query superfluid total-superfluid-delegations --help

Query total amount of osmo delegated via superfluid staking

Usage:
  osmosisd query superfluid total-superfluid-delegations [flags]

Flags:
      --grpc-addr string   the gRPC endpoint to use for this chain
      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS
      --height int         Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help               help for total-superfluid-delegations
      --node string        <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string      Output format (text|json) (default "text")

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.osmosisd")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>osmosisd query superfluid unpool-whitelist --help

Query whitelisted pool ids to unpool

Usage:
  osmosisd query superfluid unpool-whitelist [flags]

Flags:
      --grpc-addr string   the gRPC endpoint to use for this chain
      --grpc-insecure      allow gRPC over insecure channels, if not TLS the server must use TLS
      --height int         Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help               help for unpool-whitelist
      --node string        <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string      Output format (text|json) (default "text")

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.osmosisd")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>


<cli>osmosisd tx ibc --help

IBC transaction subcommands

Usage:
  osmosisd tx ibc [flags]
  osmosisd tx ibc [command]

Available Commands:
  channel     IBC channel transaction subcommands
  client      IBC client transaction subcommands

Flags:
  -h, --help   help for ibc

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.osmosisd")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors

Use "osmosisd tx ibc [command] --help" for more information about a command.
</cli>

<cli>osmosisd tx ibc channel --help

IBC channel transaction subcommands

Usage:
  osmosisd tx ibc channel [flags]

Flags:
  -h, --help   help for channel

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.osmosisd")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>osmosisd tx ibc client --help

IBC client transaction subcommands

Usage:
  osmosisd tx ibc client [flags]
  osmosisd tx ibc client [command]

Available Commands:
  create       create new IBC client
  misbehaviour submit a client misbehaviour
  update       update existing client with a client message
  upgrade      upgrade an IBC client

Flags:
  -h, --help   help for client

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.osmosisd")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors

Use "osmosisd tx ibc client [command] --help" for more information about a command.
</cli>

<cli>osmosisd tx ibc client create --help

create a new IBC client with the specified client state and consensus state
	- ClientState JSON example: {"@type":"/ibc.lightclients.solomachine.v1.ClientState","sequence":"1","frozen_sequence":"0","consensus_state":{"public_key":{"@type":"/cosmos.crypto.secp256k1.PubKey","key":"AtK50+5pJOoaa04qqAqrnyAqsYrwrR/INnA6UPIaYZlp"},"diversifier":"testing","timestamp":"10"},"allow_update_after_proposal":false}
	- ConsensusState JSON example: {"@type":"/ibc.lightclients.solomachine.v1.ConsensusState","public_key":{"@type":"/cosmos.crypto.secp256k1.PubKey","key":"AtK50+5pJOoaa04qqAqrnyAqsYrwrR/INnA6UPIaYZlp"},"diversifier":"testing","timestamp":"10"}

Usage:
  osmosisd tx ibc client create [path/to/client_state.json] [path/to/consensus_state.json] [flags]

Examples:
osmosisd tx ibc client create [path/to/client_state.json] [path/to/consensus_state.json] --from node0 --home ../node0/<app>cli --chain-id $CID

Flags:
  -a, --account-number uint      The account number of the signing account (offline mode only)
      --aux                      Generate aux signer data instead of sending a tx
  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default "sync")
      --chain-id string          The network chain ID
      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)
      --fee-granter string       Fee granter grants fees for the transaction
      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer
      --fees string              Fees to pay along with transaction; eg: 10uatom
      --from string              Name or address of private key with which to sign
      --gas string               gas limit to set per-transaction; set to "auto" to calculate sufficient gas automatically. Note: "auto" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of "fees". (default 200000)
      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)
      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)
      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)
  -h, --help                     help for create
      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default "os")
      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used
      --ledger                   Use a connected Ledger device
      --node string              <host>:<port> to tendermint rpc interface for this chain (default "tcp://localhost:26657")
      --note string              Note to add a description to the transaction (previously --memo)
      --offline                  Offline mode (does not allow any online functionality)
  -o, --output string            Output format (text|json) (default "json")
  -s, --sequence uint            The sequence number of the signing account (offline mode only)
      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature
      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height
      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator
  -y, --yes                      Skip tx broadcasting prompt confirmation

Global Flags:
      --home string         directory for config and data (default "/home/ubuntu/.osmosisd")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>osmosisd tx ibc client misbehaviour --help

submit a client misbehaviour to prevent future updates

Usage:
  osmosisd tx ibc client misbehaviour [clientID] [path/to/misbehaviour.json] [flags]

Examples:
osmosisd tx ibc client misbehaviour [clientID] [path/to/misbehaviour.json] --from node0 --home ../node0/<app>cli --chain-id $CID

Flags:
  -a, --account-number uint      The account number of the signing account (offline mode only)
      --aux                      Generate aux signer data instead of sending a tx
  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default "sync")
      --chain-id string          The network chain ID
      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)
      --fee-granter string       Fee granter grants fees for the transaction
      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer
      --fees string              Fees to pay along with transaction; eg: 10uatom
      --from string              Name or address of private key with which to sign
      --gas string               gas limit to set per-transaction; set to "auto" to calculate sufficient gas automatically. Note: "auto" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of "fees". (default 200000)
      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)
      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)
      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)
  -h, --help                     help for misbehaviour
      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default "os")
      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used
      --ledger                   Use a connected Ledger device
      --node string              <host>:<port> to tendermint rpc interface for this chain (default "tcp://localhost:26657")
      --note string              Note to add a description to the transaction (previously --memo)
      --offline                  Offline mode (does not allow any online functionality)
  -o, --output string            Output format (text|json) (default "json")
  -s, --sequence uint            The sequence number of the signing account (offline mode only)
      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature
      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height
      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator
  -y, --yes                      Skip tx broadcasting prompt confirmation

Global Flags:
      --home string         directory for config and data (default "/home/ubuntu/.osmosisd")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>osmosisd tx ibc client update --help

update existing client with a client message, for example a header, misbehaviour or batch update

Usage:
  osmosisd tx ibc client update [client-id] [path/to/client_msg.json] [flags]

Examples:
osmosisd tx ibc client update [client-id] [path/to/client_msg.json] --from node0 --home ../node0/<app>cli --chain-id $CID

Flags:
  -a, --account-number uint      The account number of the signing account (offline mode only)
      --aux                      Generate aux signer data instead of sending a tx
  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default "sync")
      --chain-id string          The network chain ID
      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)
      --fee-granter string       Fee granter grants fees for the transaction
      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer
      --fees string              Fees to pay along with transaction; eg: 10uatom
      --from string              Name or address of private key with which to sign
      --gas string               gas limit to set per-transaction; set to "auto" to calculate sufficient gas automatically. Note: "auto" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of "fees". (default 200000)
      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)
      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)
      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)
  -h, --help                     help for update
      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default "os")
      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used
      --ledger                   Use a connected Ledger device
      --node string              <host>:<port> to tendermint rpc interface for this chain (default "tcp://localhost:26657")
      --note string              Note to add a description to the transaction (previously --memo)
      --offline                  Offline mode (does not allow any online functionality)
  -o, --output string            Output format (text|json) (default "json")
  -s, --sequence uint            The sequence number of the signing account (offline mode only)
      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature
      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height
      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator
  -y, --yes                      Skip tx broadcasting prompt confirmation

Global Flags:
      --home string         directory for config and data (default "/home/ubuntu/.osmosisd")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>osmosisd tx ibc client upgrade --help

upgrade the IBC client associated with the provided client identifier while providing proof committed by the counterparty chain to the new client and consensus states
	- ClientState JSON example: {"@type":"/ibc.lightclients.solomachine.v1.ClientState","sequence":"1","frozen_sequence":"0","consensus_state":{"public_key":{"@type":"/cosmos.crypto.secp256k1.PubKey","key":"AtK50+5pJOoaa04qqAqrnyAqsYrwrR/INnA6UPIaYZlp"},"diversifier":"testing","timestamp":"10"},"allow_update_after_proposal":false}
	- ConsensusState JSON example: {"@type":"/ibc.lightclients.solomachine.v1.ConsensusState","public_key":{"@type":"/cosmos.crypto.secp256k1.PubKey","key":"AtK50+5pJOoaa04qqAqrnyAqsYrwrR/INnA6UPIaYZlp"},"diversifier":"testing","timestamp":"10"}

Usage:
  osmosisd tx ibc client upgrade [client-identifier] [path/to/client_state.json] [path/to/consensus_state.json] [upgrade-client-proof] [upgrade-consensus-state-proof] [flags]

Examples:
osmosisd tx ibc client upgrade [client-identifier] [path/to/client_state.json] [path/to/consensus_state.json] [client-state-proof] [consensus-state-proof] --from node0 --home ../node0/<app>cli --chain-id $CID

Flags:
  -a, --account-number uint      The account number of the signing account (offline mode only)
      --aux                      Generate aux signer data instead of sending a tx
  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async) (default "sync")
      --chain-id string          The network chain ID
      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)
      --fee-granter string       Fee granter grants fees for the transaction
      --fee-payer string         Fee payer pays fees for the transaction instead of deducting from the signer
      --fees string              Fees to pay along with transaction; eg: 10uatom
      --from string              Name or address of private key with which to sign
      --gas string               gas limit to set per-transaction; set to "auto" to calculate sufficient gas automatically. Note: "auto" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of "fees". (default 200000)
      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)
      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)
      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)
  -h, --help                     help for upgrade
      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default "os")
      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used
      --ledger                   Use a connected Ledger device
      --node string              <host>:<port> to tendermint rpc interface for this chain (default "tcp://localhost:26657")
      --note string              Note to add a description to the transaction (previously --memo)
      --offline                  Offline mode (does not allow any online functionality)
  -o, --output string            Output format (text|json) (default "json")
  -s, --sequence uint            The sequence number of the signing account (offline mode only)
      --sign-mode string         Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature
      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height
      --tip string               Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator
  -y, --yes                      Skip tx broadcasting prompt confirmation

Global Flags:
      --home string         directory for config and data (default "/home/ubuntu/.osmosisd")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>osmosisd tx ibc-transfer --help

IBC fungible token transfer transaction subcommands

Usage:
  osmosisd tx ibc-transfer [flags]
  osmosisd tx ibc-transfer [command]

Available Commands:
  transfer    Transfer a fungible token through IBC

Flags:
  -h, --help   help for ibc-transfer

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.osmosisd")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors

Use "osmosisd tx ibc-transfer [command] --help" for more information about a command.
</cli>

<cli>osmosisd tx ibc-transfer transfer --help

Transfer a fungible token through IBC. Timeouts can be specified
as absolute or relative using the "absolute-timeouts" flag. Timeout height can be set by passing in the height string
in the form {revision}-{height} using the "packet-timeout-height" flag. Relative timeout height is added to the block
height queried from the latest consensus state corresponding to the counterparty channel. Relative timeout timestamp 
is added to the greater value of the local clock time and the block timestamp queried from the latest consensus state 
corresponding to the counterparty channel. Any timeout set to 0 is disabled.

Usage:
  osmosisd tx ibc-transfer transfer [src-port] [src-channel] [receiver] [amount] [flags]

Examples:
osmosisd tx ibc-transfer transfer [src-port] [src-channel] [receiver] [amount]

Flags:
      --absolute-timeouts               Timeout flags are used as absolute timeouts.
  -a, --account-number uint             The account number of the signing account (offline mode only)
      --aux                             Generate aux signer data instead of sending a tx
  -b, --broadcast-mode string           Transaction broadcasting mode (sync|async) (default "sync")
      --chain-id string                 The network chain ID
      --dry-run                         ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)
      --fee-granter string              Fee granter grants fees for the transaction
      --fee-payer string                Fee payer pays fees for the transaction instead of deducting from the signer
      --fees string                     Fees to pay along with transaction; eg: 10uatom
      --from string                     Name or address of private key with which to sign
      --gas string                      gas limit to set per-transaction; set to "auto" to calculate sufficient gas automatically. Note: "auto" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of "fees". (default 200000)
      --gas-adjustment float            adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)
      --gas-prices string               Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)
      --generate-only                   Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)
  -h, --help                            help for transfer
      --keyring-backend string          Select keyring's backend (os|file|kwallet|pass|test|memory) (default "os")
      --keyring-dir string              The client Keyring directory; if omitted, the default 'home' directory will be used
      --ledger                          Use a connected Ledger device
      --memo string                     Memo to be sent along with the packet.
      --node string                     <host>:<port> to tendermint rpc interface for this chain (default "tcp://localhost:26657")
      --note string                     Note to add a description to the transaction (previously --memo)
      --offline                         Offline mode (does not allow any online functionality)
  -o, --output string                   Output format (text|json) (default "json")
      --packet-timeout-height string    Packet timeout block height. The timeout is disabled when set to 0-0. (default "0-1000")
      --packet-timeout-timestamp uint   Packet timeout timestamp in nanoseconds from now. Default is 10 minutes. The timeout is disabled when set to 0. (default 600000000000)
  -s, --sequence uint                   The sequence number of the signing account (offline mode only)
      --sign-mode string                Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature
      --timeout-height uint             Set a block timeout height to prevent the tx from being committed past a certain height
      --tip string                      Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator
  -y, --yes                             Skip tx broadcasting prompt confirmation

Global Flags:
      --home string         directory for config and data (default "/home/ubuntu/.osmosisd")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>gaiad query ibc --help

Querying commands for the IBC module

Usage:
  gaiad query ibc [flags]
  gaiad query ibc [command]

Available Commands:
  channel     IBC channel query subcommands
  client      IBC client query subcommands
  connection  IBC connection query subcommands

Flags:
  -h, --help   help for ibc

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors

Use "gaiad query ibc [command] --help" for more information about a command.
</cli>

<cli>gaiad query ibc channel --help

IBC channel query subcommands

Usage:
  gaiad query ibc channel [flags]
  gaiad query ibc channel [command]

Available Commands:
  channels              Query all channels
  client-state          Query the client state associated with a channel
  connections           Query all channels associated with a connection
  end                   Query a channel end
  next-sequence-receive Query a next receive sequence
  packet-ack            Query a packet acknowledgement
  packet-commitment     Query a packet commitment
  packet-commitments    Query all packet commitments associated with a channel
  packet-receipt        Query a packet receipt
  unreceived-acks       Query all the unreceived acks associated with a channel
  unreceived-packets    Query all the unreceived packets associated with a channel

Flags:
  -h, --help   help for channel

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors

Use "gaiad query ibc channel [command] --help" for more information about a command.
</cli>

<cli>gaiad query ibc channel channels --help

Query all channels from a chain

Usage:
  gaiad query ibc channel channels [flags]

Examples:
gaiad query ibc channel channels

Flags:
      --count-total       count total number of records in channels to query for
      --height int        Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help              help for channels
      --limit uint        pagination limit of channels to query for (default 100)
      --node string       <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
      --offset uint       pagination offset of channels to query for
  -o, --output string     Output format (text|json) (default "text")
      --page uint         pagination page of channels to query for. This sets offset to a multiple of limit (default 1)
      --page-key string   pagination page-key of channels to query for
      --reverse           results are sorted in descending order

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>gaiad query ibc channel client-state --help

Query the client state associated with a channel, by providing its port and channel identifiers.

Usage:
  gaiad query ibc channel client-state [port-id] [channel-id] [flags]

Examples:
gaiad query ibc channel client-state [port-id] [channel-id]

Flags:
      --height int      Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help            help for client-state
      --node string     <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string   Output format (text|json) (default "text")

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>gaiad query ibc channel connections --help

Query all channels associated with a connection

Usage:
  gaiad query ibc channel connections [connection-id] [flags]

Examples:
gaiad query ibc channel connections [connection-id]

Flags:
      --count-total       count total number of records in channels associated with a connection to query for
      --height int        Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help              help for connections
      --limit uint        pagination limit of channels associated with a connection to query for (default 100)
      --node string       <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
      --offset uint       pagination offset of channels associated with a connection to query for
  -o, --output string     Output format (text|json) (default "text")
      --page uint         pagination page of channels associated with a connection to query for. This sets offset to a multiple of limit (default 1)
      --page-key string   pagination page-key of channels associated with a connection to query for
      --reverse           results are sorted in descending order

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>gaiad query ibc channel end --help

Query an IBC channel end from a port and channel identifiers

Usage:
  gaiad query ibc channel end [port-id] [channel-id] [flags]

Examples:
gaiad query ibc channel end [port-id] [channel-id]

Flags:
      --height int      Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help            help for end
      --node string     <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string   Output format (text|json) (default "text")
      --prove           show proofs for the query results (default true)

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>gaiad query ibc channel next-sequence-receive --help

Query the next receive sequence for a given channel

Usage:
  gaiad query ibc channel next-sequence-receive [port-id] [channel-id] [flags]

Examples:
gaiad query ibc channel next-sequence-receive [port-id] [channel-id]

Flags:
      --height int      Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help            help for next-sequence-receive
      --node string     <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string   Output format (text|json) (default "text")
      --prove           show proofs for the query results (default true)

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>gaiad query ibc channel packet-ack --help

Query a packet acknowledgement

Usage:
  gaiad query ibc channel packet-ack [port-id] [channel-id] [sequence] [flags]

Examples:
gaiad query ibc channel packet-ack [port-id] [channel-id] [sequence]

Flags:
      --height int      Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help            help for packet-ack
      --node string     <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string   Output format (text|json) (default "text")
      --prove           show proofs for the query results (default true)

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>gaiad query ibc channel packet-commitment --help

Query a packet commitment

Usage:
  gaiad query ibc channel packet-commitment [port-id] [channel-id] [sequence] [flags]

Examples:
gaiad query ibc channel packet-commitment [port-id] [channel-id] [sequence]

Flags:
      --height int      Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help            help for packet-commitment
      --node string     <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string   Output format (text|json) (default "text")
      --prove           show proofs for the query results (default true)

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>gaiad query ibc channel packet-commitments --help

Query all packet commitments associated with a channel

Usage:
  gaiad query ibc channel packet-commitments [port-id] [channel-id] [flags]

Examples:
gaiad query ibc channel packet-commitments [port-id] [channel-id]

Flags:
      --count-total       count total number of records in packet commitments associated with a channel to query for
      --height int        Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help              help for packet-commitments
      --limit uint        pagination limit of packet commitments associated with a channel to query for (default 100)
      --node string       <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
      --offset uint       pagination offset of packet commitments associated with a channel to query for
  -o, --output string     Output format (text|json) (default "text")
      --page uint         pagination page of packet commitments associated with a channel to query for. This sets offset to a multiple of limit (default 1)
      --page-key string   pagination page-key of packet commitments associated with a channel to query for
      --reverse           results are sorted in descending order

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>gaiad query ibc channel packet-receipt --help

Query a packet receipt

Usage:
  gaiad query ibc channel packet-receipt [port-id] [channel-id] [sequence] [flags]

Examples:
gaiad query ibc channel packet-receipt [port-id] [channel-id] [sequence]

Flags:
      --height int      Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help            help for packet-receipt
      --node string     <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string   Output format (text|json) (default "text")
      --prove           show proofs for the query results (default true)

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>gaiad query ibc channel unreceived-acks --help

Given a list of acknowledgement sequences from counterparty, determine if an ack on the counterparty chain has been received on the executing chain.

The return value represents:
- Unreceived packet acknowledgement: packet commitment exists on original sending (executing) chain and ack exists on receiving chain.

Usage:
  gaiad query ibc channel unreceived-acks [port-id] [channel-id] [flags]

Examples:
gaiad query ibc channel unreceived-acks [port-id] [channel-id] --sequences=1,2,3

Flags:
      --height int             Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help                   help for unreceived-acks
      --node string            <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string          Output format (text|json) (default "text")
      --sequences int64Slice   comma separated list of packet sequence numbers (default [])

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>gaiad query ibc channel unreceived-packets --help

Determine if a packet, given a list of packet commitment sequences, is unreceived.

The return value represents:
- Unreceived packet commitments: no acknowledgement exists on receiving chain for the given packet commitment sequence on sending chain.

Usage:
  gaiad query ibc channel unreceived-packets [port-id] [channel-id] [flags]

Examples:
gaiad query ibc channel unreceived-packets [port-id] [channel-id] --sequences=1,2,3

Flags:
      --height int             Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help                   help for unreceived-packets
      --node string            <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string          Output format (text|json) (default "text")
      --sequences int64Slice   comma separated list of packet sequence numbers (default [])

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>gaiad query ibc client --help

IBC client query subcommands

Usage:
  gaiad query ibc client [flags]
  gaiad query ibc client [command]

Available Commands:
  consensus-state         Query the consensus state of a client at a given height
  consensus-state-heights Query the heights of all consensus states of a client.
  consensus-states        Query all the consensus states of a client.
  header                  Query the latest header of the running chain
  params                  Query the current ibc client parameters
  self-consensus-state    Query the self consensus state for this chain
  state                   Query a client state
  states                  Query all available light clients
  status                  Query client status

Flags:
  -h, --help   help for client

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors

Use "gaiad query ibc client [command] --help" for more information about a command.
</cli>

<cli>gaiad query ibc client consensus-state --help

Query the consensus state for a particular light client at a given height.
If the '--latest' flag is included, the query returns the latest consensus state, overriding the height argument.

Usage:
  gaiad query ibc client consensus-state [client-id] [height] [flags]

Examples:
gaiad query ibc client  consensus-state [client-id] [height]

Flags:
      --height int      Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help            help for consensus-state
      --latest-height   return latest stored consensus state
      --node string     <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string   Output format (text|json) (default "text")
      --prove           show proofs for the query results (default true)

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>gaiad query ibc client consensus-state-heights --help

Query the heights of all consensus states associated with the provided client ID.

Usage:
  gaiad query ibc client consensus-state-heights [client-id] [flags]

Examples:
gaiad query ibc client consensus-state-heights [client-id]

Flags:
      --count-total       count total number of records in consensus state heights to query for
      --height int        Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help              help for consensus-state-heights
      --limit uint        pagination limit of consensus state heights to query for (default 100)
      --node string       <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
      --offset uint       pagination offset of consensus state heights to query for
  -o, --output string     Output format (text|json) (default "text")
      --page uint         pagination page of consensus state heights to query for. This sets offset to a multiple of limit (default 1)
      --page-key string   pagination page-key of consensus state heights to query for
      --reverse           results are sorted in descending order

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>gaiad query ibc client consensus-states --help

Query all the consensus states from a given client state.

Usage:
  gaiad query ibc client consensus-states [client-id] [flags]

Examples:
gaiad query ibc client consensus-states [client-id]

Flags:
      --count-total       count total number of records in consensus states to query for
      --height int        Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help              help for consensus-states
      --limit uint        pagination limit of consensus states to query for (default 100)
      --node string       <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
      --offset uint       pagination offset of consensus states to query for
  -o, --output string     Output format (text|json) (default "text")
      --page uint         pagination page of consensus states to query for. This sets offset to a multiple of limit (default 1)
      --page-key string   pagination page-key of consensus states to query for
      --reverse           results are sorted in descending order

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>gaiad query ibc client header --help

Query the latest Tendermint header of the running chain

Usage:
  gaiad query ibc client header [flags]

Examples:
gaiad query ibc client  header

Flags:
      --height int      Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help            help for header
      --node string     <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string   Output format (text|json) (default "text")

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>gaiad query ibc client params --help

Query the current ibc client parameters

Usage:
  gaiad query ibc client params [flags]

Examples:
gaiad query ibc client params

Flags:
      --height int      Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help            help for params
      --node string     <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string   Output format (text|json) (default "text")

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>gaiad query ibc client self-consensus-state --help

Query the self consensus state for this chain. This result may be used for verifying IBC clients representing this chain which are hosted on counterparty chains.

Usage:
  gaiad query ibc client self-consensus-state [flags]

Examples:
gaiad query ibc client self-consensus-state

Flags:
      --height int      Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help            help for self-consensus-state
      --node string     <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string   Output format (text|json) (default "text")

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>gaiad query ibc client state --help

Query stored client state

Usage:
  gaiad query ibc client state [client-id] [flags]

Examples:
gaiad query ibc client state [client-id]

Flags:
      --height int      Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help            help for state
      --node string     <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string   Output format (text|json) (default "text")
      --prove           show proofs for the query results (default true)

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>gaiad query ibc client states --help

Query all available light clients

Usage:
  gaiad query ibc client states [flags]

Examples:
gaiad query ibc client states

Flags:
      --count-total       count total number of records in client states to query for
      --height int        Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help              help for states
      --limit uint        pagination limit of client states to query for (default 100)
      --node string       <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
      --offset uint       pagination offset of client states to query for
  -o, --output string     Output format (text|json) (default "text")
      --page uint         pagination page of client states to query for. This sets offset to a multiple of limit (default 1)
      --page-key string   pagination page-key of client states to query for
      --reverse           results are sorted in descending order

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>gaiad query ibc client status --help

Query client activity status. Any client without an 'Active' status is considered inactive

Usage:
  gaiad query ibc client status [client-id] [flags]

Examples:
gaiad query ibc client status [client-id]

Flags:
  -h, --help   help for status

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>gaiad query ibc connection --help

IBC connection query subcommands

Usage:
  gaiad query ibc connection [command]

Available Commands:
  connections Query all connections
  end         Query stored connection end
  path        Query stored client connection paths

Flags:
  -h, --help   help for connection

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors

Use "gaiad query ibc connection [command] --help" for more information about a command.
</cli>

<cli>gaiad query ibc connection connections --help

Query all connections ends from a chain

Usage:
  gaiad query ibc connection connections [flags]

Examples:
gaiad query ibc connection connections

Flags:
      --count-total       count total number of records in connection ends to query for
      --height int        Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help              help for connections
      --limit uint        pagination limit of connection ends to query for (default 100)
      --node string       <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
      --offset uint       pagination offset of connection ends to query for
  -o, --output string     Output format (text|json) (default "text")
      --page uint         pagination page of connection ends to query for. This sets offset to a multiple of limit (default 1)
      --page-key string   pagination page-key of connection ends to query for
      --reverse           results are sorted in descending order

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>gaiad query ibc connection end --help

Query stored connection end

Usage:
  gaiad query ibc connection end [connection-id] [flags]

Examples:
gaiad query ibc connection end [connection-id]

Flags:
      --height int      Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help            help for end
      --node string     <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string   Output format (text|json) (default "text")
      --prove           show proofs for the query results (default true)

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>gaiad query ibc connection path --help

Query stored client connection paths

Usage:
  gaiad query ibc connection path [client-id] [flags]

Examples:
gaiad query  ibc connection path [client-id]

Flags:
      --height int      Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help            help for path
      --node string     <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string   Output format (text|json) (default "text")
      --prove           show proofs for the query results (default true)

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>gaiad query ibc-router --help

Usage:
  gaiad query ibc-router [command]

Available Commands:
  params      Query the current ibc-router parameters

Flags:
  -h, --help   help for ibc-router

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors

Use "gaiad query ibc-router [command] --help" for more information about a command.
</cli>

<cli>gaiad query ibc-router params --help

Query the current ibc-router parameters

Usage:
  gaiad query ibc-router params [flags]

Examples:
gaiad query ibc-router params

Flags:
      --height int      Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help            help for params
      --node string     <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string   Output format (text|json) (default "text")

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>gaiad query ibc-transfer --help

IBC fungible token transfer query subcommands

Usage:
  gaiad query ibc-transfer [command]

Available Commands:
  denom-hash     Query the denom hash info from a given denom trace
  denom-trace    Query the denom trace info from a given trace hash or ibc denom
  denom-traces   Query the trace info for all token denominations
  escrow-address Get the escrow address for a channel
  params         Query the current ibc-transfer parameters

Flags:
  -h, --help   help for ibc-transfer

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors

Use "gaiad query ibc-transfer [command] --help" for more information about a command.
</cli>

<cli>gaiad query ibc-transfer denom-hash --help

Query the denom hash info from a given denom trace

Usage:
  gaiad query ibc-transfer denom-hash [trace] [flags]

Examples:
gaiad query ibc-transfer denom-hash transfer/channel-0/uatom

Flags:
      --height int      Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help            help for denom-hash
      --node string     <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string   Output format (text|json) (default "text")

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>gaiad query ibc-transfer denom-trace --help

Query the denom trace info from a given trace hash or ibc denom

Usage:
  gaiad query ibc-transfer denom-trace [hash/denom] [flags]

Examples:
gaiad query ibc-transfer denom-trace 27A6394C3F9FF9C9DCF5DFFADF9BB5FE9A37C7E92B006199894CF1824DF9AC7C

Flags:
      --height int      Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help            help for denom-trace
      --node string     <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string   Output format (text|json) (default "text")

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>gaiad query ibc-transfer denom-traces --help

Query the trace info for all token denominations

Usage:
  gaiad query ibc-transfer denom-traces [flags]

Examples:
gaiad query ibc-transfer denom-traces

Flags:
      --count-total       count total number of records in denominations trace to query for
      --height int        Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help              help for denom-traces
      --limit uint        pagination limit of denominations trace to query for (default 100)
      --node string       <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
      --offset uint       pagination offset of denominations trace to query for
  -o, --output string     Output format (text|json) (default "text")
      --page uint         pagination page of denominations trace to query for. This sets offset to a multiple of limit (default 1)
      --page-key string   pagination page-key of denominations trace to query for
      --reverse           results are sorted in descending order

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>gaiad query ibc-transfer escrow-address --help

Get the escrow address for a channel

Usage:
  gaiad query ibc-transfer escrow-address [flags]

Examples:
gaiad query ibc-transfer escrow-address [port] [channel-id]

Flags:
      --height int      Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help            help for escrow-address
      --node string     <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string   Output format (text|json) (default "text")

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>gaiad query ibc-transfer params --help

Query the current ibc-transfer parameters

Usage:
  gaiad query ibc-transfer params [flags]

Examples:
gaiad query ibc-transfer params

Flags:
      --height int      Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help            help for params
      --node string     <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string   Output format (text|json) (default "text")

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>gaiad query interchain-accounts --help

interchain-accounts subcommands

Usage:
  gaiad query interchain-accounts [command]

Aliases:
  interchain-accounts, ica

Available Commands:
  controller  interchain-accounts controller subcommands
  host        interchain-accounts host subcommands

Flags:
  -h, --help   help for interchain-accounts

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors

Use "gaiad query interchain-accounts [command] --help" for more information about a command.
</cli>

<cli>gaiad query interchain-accounts controller --help

interchain-accounts controller subcommands

Usage:
  gaiad query interchain-accounts controller [command]

Available Commands:
  interchain-account Query the interchain account address for a given owner on a particular connection
  params             Query the current interchain-accounts controller submodule parameters

Flags:
  -h, --help   help for controller

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors

Use "gaiad query interchain-accounts controller [command] --help" for more information about a command.
</cli>

<cli>gaiad query interchain-accounts controller interchain-account --help

Query the controller submodule for the interchain account address for a given owner on a particular connection

Usage:
  gaiad query interchain-accounts controller interchain-account [owner] [connection-id] [flags]

Examples:
gaiad query interchain-accounts controller interchain-account cosmos1layxcsmyye0dc0har9sdfzwckaz8sjwlfsj8zs connection-0

Flags:
      --height int      Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help            help for interchain-account
      --node string     <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string   Output format (text|json) (default "text")

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>gaiad query interchain-accounts controller params --help

Query the current interchain-accounts controller submodule parameters

Usage:
  gaiad query interchain-accounts controller params [flags]

Examples:
gaiad query interchain-accounts controller params

Flags:
      --height int      Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help            help for params
      --node string     <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string   Output format (text|json) (default "text")

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>gaiad query interchain-accounts host --help

interchain-accounts host subcommands

Usage:
  gaiad query interchain-accounts host [command]

Available Commands:
  packet-events Query the interchain-accounts host submodule packet events
  params        Query the current interchain-accounts host submodule parameters

Flags:
  -h, --help   help for host

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors

Use "gaiad query interchain-accounts host [command] --help" for more information about a command.
</cli>

<cli>gaiad query interchain-accounts host packet-events --help

Query the interchain-accounts host submodule packet events for a particular channel and sequence

Usage:
  gaiad query interchain-accounts host packet-events [channel-id] [sequence] [flags]

Examples:
gaiad query interchain-accounts host packet-events channel-0 100

Flags:
      --height int      Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help            help for packet-events
      --node string     <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string   Output format (text|json) (default "text")

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>gaiad query interchain-accounts host params --help

Query the current interchain-accounts host submodule parameters

Usage:
  gaiad query interchain-accounts host params [flags]

Examples:
gaiad query interchain-accounts host params

Flags:
      --height int      Use a specific height to query state at (this can error if the node is pruning state)
  -h, --help            help for params
      --node string     <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")
  -o, --output string   Output format (text|json) (default "text")

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>


<cli>gaiad tx ibc --help

IBC transaction subcommands

Usage:
  gaiad tx ibc [flags]
  gaiad tx ibc [command]

Available Commands:
  channel     IBC channel transaction subcommands
  client      IBC client transaction subcommands

Flags:
  -h, --help   help for ibc

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors

Use "gaiad tx ibc [command] --help" for more information about a command.
</cli>

<cli>gaiad tx ibc channel --help

IBC channel transaction subcommands

Usage:
  gaiad tx ibc channel [flags]

Flags:
  -h, --help   help for channel

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>gaiad tx ibc client --help

IBC client transaction subcommands

Usage:
  gaiad tx ibc client [flags]
  gaiad tx ibc client [command]

Available Commands:
  create       create new IBC client
  misbehaviour submit a client misbehaviour
  update       update existing client with a header
  upgrade      upgrade an IBC client

Flags:
  -h, --help   help for client

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors

Use "gaiad tx ibc client [command] --help" for more information about a command.
</cli>

<cli>gaiad tx ibc client create --help

create a new IBC client with the specified client state and consensus state
	- ClientState JSON example: {"@type":"/ibc.lightclients.solomachine.v1.ClientState","sequence":"1","frozen_sequence":"0","consensus_state":{"public_key":{"@type":"/cosmos.crypto.secp256k1.PubKey","key":"AtK50+5pJOoaa04qqAqrnyAqsYrwrR/INnA6UPIaYZlp"},"diversifier":"testing","timestamp":"10"},"allow_update_after_proposal":false}
	- ConsensusState JSON example: {"@type":"/ibc.lightclients.solomachine.v1.ConsensusState","public_key":{"@type":"/cosmos.crypto.secp256k1.PubKey","key":"AtK50+5pJOoaa04qqAqrnyAqsYrwrR/INnA6UPIaYZlp"},"diversifier":"testing","timestamp":"10"}

Usage:
  gaiad tx ibc client create [path/to/client_state.json] [path/to/consensus_state.json] [flags]

Examples:
gaiad tx ibc client create [path/to/client_state.json] [path/to/consensus_state.json] --from node0 --home ../node0/<app>cli --chain-id $CID

Flags:
  -a, --account-number uint      The account number of the signing account (offline mode only)
  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default "sync")
      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)
      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer
      --fees string              Fees to pay along with transaction; eg: 10uatom
      --from string              Name or address of private key with which to sign
      --gas string               gas limit to set per-transaction; set to "auto" to calculate sufficient gas automatically (default 200000)
      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)
      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)
      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)
  -h, --help                     help for create
      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default "os")
      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used
      --ledger                   Use a connected Ledger device
      --node string              <host>:<port> to tendermint rpc interface for this chain (default "tcp://localhost:26657")
      --note string              Note to add a description to the transaction (previously --memo)
      --offline                  Offline mode (does not allow any online functionality
  -o, --output string            Output format (text|json) (default "json")
  -s, --sequence uint            The sequence number of the signing account (offline mode only)
      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature
      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height
  -y, --yes                      Skip tx broadcasting prompt confirmation

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>gaiad tx ibc client misbehaviour --help

submit a client misbehaviour to prevent future updates

Usage:
  gaiad tx ibc client misbehaviour [path/to/misbehaviour.json] [flags]

Examples:
gaiad tx ibc client misbehaviour [path/to/misbehaviour.json] --from node0 --home ../node0/<app>cli --chain-id $CID

Flags:
  -h, --help   help for misbehaviour

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>gaiad tx ibc client update --help

update existing client with a header

Usage:
  gaiad tx ibc client update [client-id] [path/to/header.json] [flags]

Examples:
gaiad tx ibc client update [client-id] [path/to/header.json] --from node0 --home ../node0/<app>cli --chain-id $CID

Flags:
  -h, --help   help for update

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>gaiad tx ibc client upgrade --help

upgrade the IBC client associated with the provided client identifier while providing proof committed by the counterparty chain to the new client and consensus states
	- ClientState JSON example: {"@type":"/ibc.lightclients.solomachine.v1.ClientState","sequence":"1","frozen_sequence":"0","consensus_state":{"public_key":{"@type":"/cosmos.crypto.secp256k1.PubKey","key":"AtK50+5pJOoaa04qqAqrnyAqsYrwrR/INnA6UPIaYZlp"},"diversifier":"testing","timestamp":"10"},"allow_update_after_proposal":false}
	- ConsensusState JSON example: {"@type":"/ibc.lightclients.solomachine.v1.ConsensusState","public_key":{"@type":"/cosmos.crypto.secp256k1.PubKey","key":"AtK50+5pJOoaa04qqAqrnyAqsYrwrR/INnA6UPIaYZlp"},"diversifier":"testing","timestamp":"10"}

Usage:
  gaiad tx ibc client upgrade [client-identifier] [path/to/client_state.json] [path/to/consensus_state.json] [upgrade-client-proof] [upgrade-consensus-state-proof] [flags]

Examples:
gaiad tx ibc client upgrade [client-identifier] [path/to/client_state.json] [path/to/consensus_state.json] [client-state-proof] [consensus-state-proof] --from node0 --home ../node0/<app>cli --chain-id $CID

Flags:
  -a, --account-number uint      The account number of the signing account (offline mode only)
  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default "sync")
      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)
      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer
      --fees string              Fees to pay along with transaction; eg: 10uatom
      --from string              Name or address of private key with which to sign
      --gas string               gas limit to set per-transaction; set to "auto" to calculate sufficient gas automatically (default 200000)
      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)
      --gas-prices string        Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)
      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)
  -h, --help                     help for upgrade
      --keyring-backend string   Select keyring's backend (os|file|kwallet|pass|test|memory) (default "os")
      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used
      --ledger                   Use a connected Ledger device
      --node string              <host>:<port> to tendermint rpc interface for this chain (default "tcp://localhost:26657")
      --note string              Note to add a description to the transaction (previously --memo)
      --offline                  Offline mode (does not allow any online functionality
  -o, --output string            Output format (text|json) (default "json")
  -s, --sequence uint            The sequence number of the signing account (offline mode only)
      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature
      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height
  -y, --yes                      Skip tx broadcasting prompt confirmation

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>

<cli>gaiad tx ibc-transfer --help

IBC fungible token transfer transaction subcommands

Usage:
  gaiad tx ibc-transfer [flags]
  gaiad tx ibc-transfer [command]

Available Commands:
  transfer    Transfer a fungible token through IBC

Flags:
  -h, --help   help for ibc-transfer

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors

Use "gaiad tx ibc-transfer [command] --help" for more information about a command.
</cli>

<cli>gaiad tx ibc-transfer transfer --help

Transfer a fungible token through IBC. Timeouts can be specified
as absolute or relative using the "absolute-timeouts" flag. Timeout height can be set by passing in the height string
in the form {revision}-{height} using the "packet-timeout-height" flag. Relative timeout height is added to the block
height queried from the latest consensus state corresponding to the counterparty channel. Relative timeout timestamp 
is added to the greater value of the local clock time and the block timestamp queried from the latest consensus state 
corresponding to the counterparty channel. Any timeout set to 0 is disabled.

Usage:
  gaiad tx ibc-transfer transfer [src-port] [src-channel] [receiver] [amount] [flags]

Examples:
gaiad tx ibc-transfer transfer [src-port] [src-channel] [receiver] [amount]

Flags:
      --absolute-timeouts               Timeout flags are used as absolute timeouts.
  -a, --account-number uint             The account number of the signing account (offline mode only)
  -b, --broadcast-mode string           Transaction broadcasting mode (sync|async|block) (default "sync")
      --dry-run                         ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)
      --fee-account string              Fee account pays fees for the transaction instead of deducting from the signer
      --fees string                     Fees to pay along with transaction; eg: 10uatom
      --from string                     Name or address of private key with which to sign
      --gas string                      gas limit to set per-transaction; set to "auto" to calculate sufficient gas automatically (default 200000)
      --gas-adjustment float            adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)
      --gas-prices string               Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)
      --generate-only                   Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)
  -h, --help                            help for transfer
      --keyring-backend string          Select keyring's backend (os|file|kwallet|pass|test|memory) (default "os")
      --keyring-dir string              The client Keyring directory; if omitted, the default 'home' directory will be used
      --ledger                          Use a connected Ledger device
      --memo string                     Memo to be sent along with the packet.
      --node string                     <host>:<port> to tendermint rpc interface for this chain (default "tcp://localhost:26657")
      --note string                     Note to add a description to the transaction (previously --memo)
      --offline                         Offline mode (does not allow any online functionality
  -o, --output string                   Output format (text|json) (default "json")
      --packet-timeout-height string    Packet timeout block height. The timeout is disabled when set to 0-0. (default "0-1000")
      --packet-timeout-timestamp uint   Packet timeout timestamp in nanoseconds from now. Default is 10 minutes. The timeout is disabled when set to 0. (default 600000000000)
  -s, --sequence uint                   The sequence number of the signing account (offline mode only)
      --sign-mode string                Choose sign mode (direct|amino-json), this is an advanced feature
      --timeout-height uint             Set a block timeout height to prevent the tx from being committed past a certain height
  -y, --yes                             Skip tx broadcasting prompt confirmation

Global Flags:
      --chain-id string     The network chain ID
      --home string         directory for config and data (default "/home/ubuntu/.gaia")
      --log_format string   The logging format (json|plain) (default "plain")
      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")
      --trace               print out full stack trace on errors
</cli>


